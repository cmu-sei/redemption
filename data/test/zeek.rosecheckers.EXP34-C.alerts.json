[
  {
    "rule": "EXP34-C",
    "file": "auxil/paraglob/src/ahocorasick/ahocorasick.c",
    "line": "61",
    "column": "37",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "A malloc is done, then the pointer is dereferenced without a check first in case it is null.",
    "randomness": "random and first_five",
    "issue": "REM-129"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/paraglob/src/ahocorasick/mpool.c",
    "line": "65",
    "column": "36",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "A malloc is done, then the pointer is dereferenced without a check first in case it is null.",
    "randomness": "random and first_five",
    "issue": "REM-129"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/paraglob/src/ahocorasick/mpool.c",
    "line": "84",
    "column": "11",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "A malloc is done, then the pointer is dereferenced without a check first in case it is null.",
    "randomness": "first_five",
    "issue": "REM-129"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/ccl.c",
    "line": "13",
    "column": "30",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "The line for the alert is `jrx_ccl* ccl = (jrx_ccl*)malloc(sizeof(jrx_ccl));`. This is the line where the memory is dynamically allocated. The next line (14) dereferences the pointer, without first checking if malloc returned null. Some SA tools alert on the allocation line, others on the dereference. We'd like our code to be able to handle both line locations of alerts, and do automated code repair that inserts a check. ACR already does a repair for this type of alert, but the line alerted on might be the reason it doesn't do the repair for this alert.",
    "randomness": "random",
    "issue": "REM-129"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/ccl.c",
    "line": "244",
    "column": "44",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c",
    "line": "49",
    "column": "15",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c",
    "line": "304",
    "column": "37",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/nfa.c",
    "line": "123",
    "column": "46",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "The line of code alerted on contains dynamic memory allocation. In the next line, that pointer is dereferenced. There should be a check if the pointer address is null, between the allocation line and the dereference line. Rosecheckers alerts on the allocation line, and some other tools alert on the dereference line.",
    "randomness": "random",
    "issue": "REM-129"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/spicy/spicy/3rdparty/justrx/src/nfa.c",
    "line": "150",
    "column": "30",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/highwayhash/highwayhash/os_specific.cc",
    "line": "127",
    "column": "36",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it",
    "satisfactory": "false",
    "verdict": "true",
    "repairable": "true",
    "rationale": "The line of code alerted on contains dynamic memory allocation. (The line is `static_cast<ThreadAffinity*>(malloc(sizeof(ThreadAffinity)));`) On lines 130, 135, 139, and 143, that pointer is dereferenced. (Depending on the OS, control flow reaches different dereference lines.) There should be a check if the pointer address is null, between the allocation line and the dereference line. Rosecheckers alerts on the allocation line, and some other tools alert on the dereference line.",
    "randomness": "random",
    "issue": "REM-129"      
  },
  {
    "rule": "EXP34-C",
    "file": "build/auxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx",
    "line": "811",
    "column": "21",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "build/auxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx",
    "line": "1483",
    "column": "50",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/zeekctl/auxil/pysubnettree/SubnetTree.cc",
    "line": "18",
    "column": "34",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  },
  {
    "rule": "EXP34-C",
    "file": "auxil/zeek-aux/rst/rst.c",
    "line": "169",
    "column": "14",
    "tool": "rosecheckers",
    "checker": "EXP34-C",
    "message": "Ensure pointer is valid before dereferencing it"
  }
]

Checker	Path	Line	Column	Message
DCL02-C	auxibinpac/lib/binpac_buffer.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/lib/binpac_buffer.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/lib/binpac_buffer.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibinpac/lib/binpac_buffer.cc	25	21	Use visually distinct identifiers: data
DCL02-C	auxibinpac/lib/binpac_buffer.cc	25	31	Use visually distinct identifiers: length
DCL02-C	auxibinpac/lib/binpac_buffer.cc	37	45	Use visually distinct identifiers: s
DCL02-C	auxibinpac/lib/binpac_buffer.cc	44	26	Use visually distinct identifiers: begin
DCL02-C	auxibinpac/lib/binpac_buffer.cc	45	24	Use visually distinct identifiers: end
DCL02-C	auxibinpac/lib/binpac_buffer.cc	65	49	Use visually distinct identifiers: x
DCL02-C	auxibinpac/lib/binpac_buffer.cc	67	51	Use visually distinct identifiers: x
DCL02-C	auxibinpac/lib/binpac_buffer.cc	74	21	Use visually distinct identifiers: begin
DCL02-C	auxibinpac/lib/binpac_buffer.cc	95	57	Use visually distinct identifiers: x
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	30	1	FlowBuffer is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/lib/binpac_buffer.cc	64	2	Detect and remove code that has no effect
MSC01-C	auxibinpac/lib/binpac_buffer.cc	69	3	Strive for logical completeness
MSC12-C	auxibinpac/lib/binpac_buffer.cc	83	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/lib/binpac_buffer.cc	121	3	Const-qualify immutable objects: reason
ERR08-CPP	auxibinpac/lib/binpac_buffer.cc	122	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/lib/binpac_buffer.cc	130	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/lib/binpac_buffer.cc	144	3	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	183	63	Do not reuse variable names in subscopes: end
MSC12-C	auxibinpac/lib/binpac_buffer.cc	198	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	201	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/lib/binpac_buffer.cc	229	40	Do not reuse variable names in subscopes: begin
DCL01-C	auxibinpac/lib/binpac_buffer.cc	229	61	Do not reuse variable names in subscopes: end
MSC12-C	auxibinpac/lib/binpac_buffer.cc	231	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	235	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	269	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	518	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	543	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/lib/binpac_buffer.cc	549	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/lib/binpac_buffer.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	Public data member
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/lib/binpac_buffer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/lib/binpac_buffer.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/lib/binpac_buffer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/lib/binpac_buffer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/lib/binpac_buffer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/lib/binpac_buffer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_buffer.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/lib/binpac_buffer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	25	21	Use visually distinct identifiers: data
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	25	31	Use visually distinct identifiers: length
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	37	45	Use visually distinct identifiers: s
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	44	26	Use visually distinct identifiers: begin
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	45	24	Use visually distinct identifiers: end
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	65	49	Use visually distinct identifiers: x
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	67	51	Use visually distinct identifiers: x
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	74	21	Use visually distinct identifiers: begin
DCL02-C	auxibinpac/lib/binpac_bytestring.cc	95	57	Use visually distinct identifiers: x
EXP05-C	auxibinpac/lib/binpac_bytestring.cc	12	21	Do not cast away a const qualification
EXP05-C	auxibinpac/lib/binpac_bytestring.cc	12	46	Do not cast away a const qualification
INT05-C	auxibinpac/lib/binpac_bytestring.cc	17	9	Use strtol() or a related function to convert a string token to an integer
EXP05-C	auxibinpac/lib/binpac_bytestring.cc	17	14	Do not cast away a const qualification
EXP05-C	auxibinpac/lib/binpac_bytestring.cc	22	14	Do not cast away a const qualification
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/lib/binpac_bytestring.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	Public data member
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/lib/binpac_bytestring.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/lib/binpac_bytestring.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/lib/binpac_bytestring.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/lib/binpac_bytestring.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/lib/binpac_bytestring.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/lib/binpac_bytestring.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/lib/binpac_bytestring.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/lib/binpac_regex.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/lib/binpac_regex.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL00-C	auxibinpac/lib/binpac_regex.cc	9	1	Const-qualify immutable objects: uncompiled_re_matchers
EXP12-C	auxibinpac/lib/binpac_regex.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	builauxil/binpac/src/pac_parse.cc	83	3	Use visually distinct identifiers: value
DCL02-C	builauxil/binpac/src/pac_parse.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	builauxil/binpac/src/pac_parse.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	builauxil/binpac/src/pac_parse.cc	1354	1	Use visually distinct identifiers: yydebug
DCL02-C	builauxil/binpac/src/pac_parse.cc	1623	1	Use visually distinct identifiers: yychar
DCL02-C	builauxil/binpac/src/pac_parse.cc	1626	1	Use visually distinct identifiers: yylval
DCL02-C	builauxil/binpac/src/pac_parse.cc	1067	1	Use visually distinct identifiers: current_decl_id
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	builauxil/binpac/src/pac_parse.cc	1272	3	Const-qualify immutable objects: yyo
MSC12-C	builauxil/binpac/src/pac_parse.cc	1273	3	Detect and remove code that has no effect
MSC12-C	builauxil/binpac/src/pac_parse.cc	1280	3	Detect and remove code that has no effect
DCL13-C	builauxil/binpac/src/pac_parse.cc	1304	55	Declare function parameters that are pointers to values not changed by the function as const: yytop
DCL00-C	builauxil/binpac/src/pac_parse.cc	1309	7	Const-qualify immutable objects: yybot
DCL00-C	builauxil/binpac/src/pac_parse.cc	1329	3	Const-qualify immutable objects: yylno
MSC12-C	builauxil/binpac/src/pac_parse.cc	1609	3	Detect and remove code that has no effect
MSC12-C	builauxil/binpac/src/pac_parse.cc	1615	3	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	vector is a non-explicit single-argument constructor.
DCL00-C	builauxil/binpac/src/pac_parse.cc	1708	7	Const-qualify immutable objects: yysize
INT01-C	builauxil/binpac/src/pac_parse.cc	1744	44	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/binpac/src/pac_parse.cc	1747	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/binpac/src/pac_parse.cc	1747	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1747	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1747	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1747	9	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/binpac/src/pac_parse.cc	1748	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/binpac/src/pac_parse.cc	1748	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1748	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1748	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	1748	9	Use rsize_t or size_t for all integer values representing the size of an object
MEM34-C	builauxil/binpac/src/pac_parse.cc	1751	11	Only free memory allocated dynamically
ARR37-C	builauxil/binpac/src/pac_parse.cc	1756	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/binpac/src/pac_parse.cc	1757	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/binpac/src/pac_parse.cc	1762	11	Do not add or subtract an integer to a pointer to a non-array object
INT32-C	builauxil/binpac/src/pac_parse.cc	1816	13	Ensure that operations on signed integers do not result in overflow
DCL00-C	builauxil/binpac/src/pac_parse.cc	219	5	Const-qualify immutable objects: extern_type
EXP11-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	builauxil/binpac/src/pac_parse.cc	3414	3	Detect and remove code that has no effect
EXP12-C	builauxil/binpac/src/pac_parse.cc	3448	7	Do not ignore values returned by functions: yyerror
MSC12-C	builauxil/binpac/src/pac_parse.cc	3522	3	Detect and remove code that has no effect
MSC12-C	builauxil/binpac/src/pac_parse.cc	3556	7	Detect and remove code that has no effect
EXP12-C	builauxil/binpac/src/pac_parse.cc	3592	3	Do not ignore values returned by functions: yyerror
ARR30-C	builauxil/binpac/src/pac_parse.cc	3602	17	Do not form or use out-of-bounds pointers or array subscripts
MSC12-C	builauxil/binpac/src/pac_parse.cc	3608	3	Detect and remove code that has no effect
MEM34-C	builauxil/binpac/src/pac_parse.cc	3618	5	Only free memory allocated dynamically
EXP12-C	builauxil/binpac/src/pac_parse.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/src/pac_parse.cc	0	0	Public data member
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::CaseField* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::CaseField* , ::std::allocator < ::CaseField* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::CaseExpr* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::CaseExpr* , ::std::allocator < ::CaseExpr* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::AnalyzerElement* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::AnalyzerElement* , ::std::allocator < ::AnalyzerElement* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Attr* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Attr* , ::std::allocator < ::Attr* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::ContextField* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::ContextField* , ::std::allocator < ::ContextField* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Param* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Param* , ::std::allocator < ::Param* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::RecordField* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::RecordField* , ::std::allocator < ::RecordField* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Expr* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Expr* , ::std::allocator < ::Expr* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Enum* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Enum* , ::std::allocator < ::Enum* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::StateVar* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::StateVar* , ::std::allocator < ::StateVar* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Field* >
DCL01-C	builauxil/binpac/src/pac_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Field* , ::std::allocator < ::Field* >  >
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/src/pac_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/src/pac_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/src/pac_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/src/pac_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/src/pac_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/src/pac_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/binpac/src/pac_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/binpac/src/pac_parse.cc	0	0	Detect and remove code that has no effect
DCL02-C	builauxil/binpac/pac_scan.cc	271	1	Use visually distinct identifiers: yyleng
DCL02-C	builauxil/binpac/pac_scan.cc	328	1	Use visually distinct identifiers: yyin
DCL02-C	builauxil/binpac/pac_scan.cc	328	1	Use visually distinct identifiers: yyout
DCL02-C	builauxil/binpac/pac_scan.cc	333	1	Use visually distinct identifiers: yylineno
DCL02-C	builauxil/binpac/pac_scan.cc	746	1	Use visually distinct identifiers: yy_flex_debug
DCL02-C	builauxil/binpac/pac_scan.cc	755	1	Use visually distinct identifiers: yytext
DCL02-C	builauxil/binpac/pac_scan.cc	83	3	Use visually distinct identifiers: value
DCL02-C	builauxil/binpac/pac_scan.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	builauxil/binpac/pac_scan.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	builauxil/binpac/pac_scan.cc	27	1	Use visually distinct identifiers: line_number
DCL01-C	builauxil/binpac/pac_scan.cc	201	2	Do not reuse variable names in subscopes: yy_n_chars
DCL01-C	builauxil/binpac/pac_scan.cc	362	2	Do not reuse variable names in subscopes: yy_nxt
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	map is a non-explicit single-argument constructor.
ARR30-C	builauxil/binpac/pac_scan.cc	1059	37	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/binpac/pac_scan.cc	1065	21	Do not form or use out-of-bounds pointers or array subscripts
EXP12-C	builauxil/binpac/pac_scan.cc	209	5	Do not ignore values returned by functions: sscanf
INT05-C	builauxil/binpac/pac_scan.cc	209	5	Do not use input functions to convert character data if they cannot handle all possible inputs
EXP12-C	builauxil/binpac/pac_scan.cc	216	5	Do not ignore values returned by functions: sscanf
INT05-C	builauxil/binpac/pac_scan.cc	216	5	Do not use input functions to convert character data if they cannot handle all possible inputs
DCL00-C	builauxil/binpac/pac_scan.cc	1616	3	Const-qualify immutable objects: yy_amount_of_matched_text
MSC01-C	builauxil/binpac/pac_scan.cc	1681	8	Strive for logical completeness
DCL00-C	builauxil/binpac/pac_scan.cc	1810	5	Const-qualify immutable objects: new_size
DCL00-C	builauxil/binpac/pac_scan.cc	1868	3	Const-qualify immutable objects: new_size
INT07-C	builauxil/binpac/pac_scan.cc	1878	52	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/binpac/pac_scan.cc	1879	56	Use only explicitly signed or unsigned char type for numeric values
ARR30-C	builauxil/binpac/pac_scan.cc	1909	36	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/binpac/pac_scan.cc	1937	35	Do not form or use out-of-bounds pointers or array subscripts
DCL00-C	builauxil/binpac/pac_scan.cc	1971	4	Const-qualify immutable objects: offset
MSC01-C	builauxil/binpac/pac_scan.cc	1974	4	Strive for logical completeness
DCL00-C	builauxil/binpac/pac_scan.cc	2138	2	Const-qualify immutable objects: oerrno
INT07-C	builauxil/binpac/pac_scan.cc	2174	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/binpac/pac_scan.cc	2175	18	Use only explicitly signed or unsigned char type for numeric values
INT01-C	builauxil/binpac/pac_scan.cc	2253	23	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/binpac/pac_scan.cc	2258	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/binpac/pac_scan.cc	2258	45	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	builauxil/binpac/pac_scan.cc	2268	3	Const-qualify immutable objects: grow_size
INT01-C	builauxil/binpac/pac_scan.cc	2273	22	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/binpac/pac_scan.cc	2279	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/binpac/pac_scan.cc	2279	66	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	builauxil/binpac/pac_scan.cc	2356	42	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	builauxil/binpac/pac_scan.cc	2522	5	Do not ignore values returned by functions: yy_init_globals
EXP09-C	builauxil/binpac/pac_scan.cc	2554	11	malloc called using something other than sizeof()
MEM04-C	builauxil/binpac/pac_scan.cc	2554	11	Do not perform zero length allocations
EXP09-C	builauxil/binpac/pac_scan.cc	2567	9	malloc called using something other than sizeof()
MEM04-C	builauxil/binpac/pac_scan.cc	2567	9	Do not perform zero length allocations
DCL01-C	builauxil/binpac/pac_scan.cc	285	2	Do not reuse variable names in subscopes: input_filename
DCL01-C	builauxil/binpac/pac_scan.cc	286	2	Do not reuse variable names in subscopes: line_number
FIO42-C	builauxil/binpac/pac_scan.cc	309	13	Close files when they are no longer needed
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	vector is a non-explicit single-argument constructor.
MSC12-C	builauxil/binpac/pac_scan.cc	329	2	Detect and remove code that has no effect
DCL00-C	builauxil/binpac/pac_scan.cc	331	2	Const-qualify immutable objects: full_filename
EXP12-C	builauxil/binpac/pac_scan.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	builauxil/binpac/pac_scan.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/pac_scan.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/pac_scan.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/binpac/pac_scan.cc	0	0	Public data member
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/binpac/pac_scan.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/binpac/pac_scan.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	builauxil/binpac/pac_scan.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/pac_scan.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	builauxil/binpac/pac_scan.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/binpac/pac_scan.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/binpac/pac_scan.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/binpac/pac_scan.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	builauxil/binpac/pac_scan.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_action.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_action.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_action.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	11	52	Do not reuse variable names in subscopes: when
DCL01-C	auxibinpac/src/pac_action.cc	11	71	Do not reuse variable names in subscopes: param
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: AnalyzerElement
DCL01-C	auxibinpac/src/pac_action.cc	29	48	Do not reuse variable names in subscopes: analyzer
MSC12-C	auxibinpac/src/pac_action.cc	31	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_action.cc	42	2	Const-qualify immutable objects: action_func_proto
DCL00-C	auxibinpac/src/pac_action.cc	67	2	Const-qualify immutable objects: main_type
ERR08-CPP	auxibinpac/src/pac_action.cc	71	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_action.cc	87	3	Const-qualify immutable objects: member_type
ERR08-CPP	auxibinpac/src/pac_action.cc	90	4	Should throw a special-purpose exception object.
EXP12-C	auxibinpac/src/pac_action.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_action.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_action.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_action.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_action.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_action.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_action.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_action.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_action.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_action.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_action.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_action.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_action.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_action.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_analyzer.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_analyzer.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_analyzer.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	17	32	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_analyzer.cc	17	45	Do not reuse variable names in subscopes: decl_type
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: TypeDecl
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_analyzer.cc	38	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	39	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	40	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	41	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	42	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	43	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	44	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	45	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_analyzer.cc	50	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_analyzer.cc	51	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
MSC01-C	auxibinpac/src/pac_analyzer.cc	54	3	Strive for logical completeness
MSC12-C	auxibinpac/src/pac_analyzer.cc	58	5	Detect and remove code that has no effect
EXP11-C	auxibinpac/src/pac_analyzer.cc	59	33	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_analyzer.cc	66	5	Detect and remove code that has no effect
EXP11-C	auxibinpac/src/pac_analyzer.cc	67	35	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_analyzer.cc	73	35	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_analyzer.cc	93	35	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_analyzer.cc	101	31	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_analyzer.cc	107	39	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_analyzer.cc	124	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_analyzer.cc	125	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_analyzer.cc	127	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	132	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	137	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	147	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	156	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	164	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	206	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	215	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	223	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	232	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	241	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	250	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_analyzer.cc	259	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not ignore values returned by functions: !=
MSC01-C	auxibinpac/src/pac_analyzer.cc	281	2	Strive for logical completeness
MSC12-C	auxibinpac/src/pac_analyzer.cc	292	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_analyzer.cc	297	59	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_analyzer.cc	297	44	Use bitwise operators only on unsigned operands
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	306	38	Do not reuse variable names in subscopes: dir
DCL00-C	auxibinpac/src/pac_analyzer.cc	315	2	Const-qualify immutable objects: flow_id
DCL00-C	auxibinpac/src/pac_analyzer.cc	317	2	Const-qualify immutable objects: flow_type
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: AnalyzerElement
EXP11-C	auxibinpac/src/pac_analyzer.cc	336	17	Do not apply operators expecting one type to data of an incompatible type
ERR08-CPP	auxibinpac/src/pac_analyzer.cc	339	4	Should throw a special-purpose exception object.
EXP12-C	auxibinpac/src/pac_analyzer.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_analyzer.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < ::StateVar* >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::StateVar* , ::std::allocator < ::StateVar* >  >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < ::AnalyzerAction* >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::AnalyzerAction* , ::std::allocator < ::AnalyzerAction* >  >
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_analyzer.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < ::AnalyzerHelper* >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::AnalyzerHelper* , ::std::allocator < ::AnalyzerHelper* >  >
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_analyzer.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Function* >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Function* , ::std::allocator < ::Function* >  >
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_analyzer.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_analyzer.cc	422	14	Take care when converting from pointer to integer or integer to pointer
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_analyzer.cc	597	14	Take care when converting from pointer to integer or integer to pointer
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxibinpac/src/pac_analyzer.cc	644	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_analyzer.cc	649	7	Do not ignore values returned by functions: move_backward
EXP12-C	auxibinpac/src/pac_analyzer.cc	651	7	Do not ignore values returned by functions: copy
EXP12-C	auxibinpac/src/pac_analyzer.cc	657	7	Do not ignore values returned by functions: __uninitialized_copy_a
EXP12-C	auxibinpac/src/pac_analyzer.cc	661	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_analyzer.cc	666	7	Do not ignore values returned by functions: copy
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Expr* >
DCL01-C	auxibinpac/src/pac_analyzer.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Expr* , ::std::allocator < ::Expr* >  >
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxibinpac/src/pac_analyzer.cc	380	7	Do not ignore values returned by functions: move_backward
INT01-C	auxibinpac/src/pac_analyzer.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_analyzer.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_analyzer.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_analyzer.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_analyzer.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxibinpac/src/pac_analyzer.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_analyzer.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_array.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_array.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_array.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	map is a non-explicit single-argument constructor.
MSC01-C	auxibinpac/src/pac_array.cc	19	2	Strive for logical completeness
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: Type
DCL00-C	auxibinpac/src/pac_array.cc	72	2	Const-qualify immutable objects: elemtype
DCL01-C	auxibinpac/src/pac_array.cc	93	45	Do not reuse variable names in subscopes: array
DCL01-C	auxibinpac/src/pac_array.cc	93	66	Do not reuse variable names in subscopes: index
ERR08-CPP	auxibinpac/src/pac_array.cc	96	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_array.cc	136	5	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_array.cc	141	5	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_array.cc	159	4	Const-qualify immutable objects: ref_input
ERR08-CPP	auxibinpac/src/pac_array.cc	162	5	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_array.cc	170	6	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_array.cc	178	6	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_array.cc	186	6	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_array.cc	198	30	Do not reuse variable names in subscopes: env
INT13-C	auxibinpac/src/pac_array.cc	200	13	Use bitwise operators only on unsigned operands
DCL00-C	auxibinpac/src/pac_array.cc	202	3	Const-qualify immutable objects: arraylength_var
DCL01-C	auxibinpac/src/pac_array.cc	202	3	Do not reuse variable names in subscopes: arraylength_var
DCL01-C	auxibinpac/src/pac_array.cc	203	3	Do not reuse variable names in subscopes: elem_var
DCL00-C	auxibinpac/src/pac_array.cc	204	3	Const-qualify immutable objects: elem_it_var
DCL01-C	auxibinpac/src/pac_array.cc	204	3	Do not reuse variable names in subscopes: elem_it_var
DCL01-C	auxibinpac/src/pac_array.cc	226	4	Do not reuse variable names in subscopes: elem_dataptr_var
DCL01-C	auxibinpac/src/pac_array.cc	247	53	Do not reuse variable names in subscopes: env
ERR08-CPP	auxibinpac/src/pac_array.cc	305	5	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_array.cc	311	3	Const-qualify immutable objects: max_elements_available
MSC12-C	auxibinpac/src/pac_array.cc	324	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_array.cc	331	49	Do not reuse variable names in subscopes: env
ERR08-CPP	auxibinpac/src/pac_array.cc	338	4	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_array.cc	348	50	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_array.cc	350	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_array.cc	351	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_array.cc	355	50	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_array.cc	368	53	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_array.cc	375	4	Const-qualify immutable objects: elem_var
DCL01-C	auxibinpac/src/pac_array.cc	375	4	Do not reuse variable names in subscopes: elem_var
DCL01-C	auxibinpac/src/pac_array.cc	399	53	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_array.cc	401	2	Const-qualify immutable objects: array_str
DCL01-C	auxibinpac/src/pac_array.cc	429	59	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_array.cc	451	53	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_array.cc	495	2	Const-qualify immutable objects: known_array_length
DCL00-C	auxibinpac/src/pac_array.cc	496	2	Const-qualify immutable objects: array_str
DCL00-C	auxibinpac/src/pac_array.cc	498	2	Const-qualify immutable objects: use_vector
MSC12-C	auxibinpac/src/pac_array.cc	500	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_array.cc	512	2	Const-qualify immutable objects: for_condition
DCL01-C	auxibinpac/src/pac_array.cc	584	57	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_array.cc	586	2	Const-qualify immutable objects: elem_input_var_id
DCL01-C	auxibinpac/src/pac_array.cc	599	52	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_array.cc	601	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_array.cc	632	53	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_array.cc	634	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_array.cc	637	2	Const-qualify immutable objects: elem_w
DCL00-C	auxibinpac/src/pac_array.cc	643	3	Const-qualify immutable objects: compute_size_var
MSC12-C	auxibinpac/src/pac_array.cc	644	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_array.cc	646	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_array.cc	658	32	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_array.cc	665	2	Const-qualify immutable objects: elem_w
EXP12-C	auxibinpac/src/pac_array.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_array.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_array.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_array.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_array.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_array.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_array.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_array.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_array.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_array.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_array.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_array.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_array.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_array.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_attr.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_attr.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_attr.cc	52	3	Use visually distinct identifiers: npos
OBJ32-CPP	auxibinpac/src/pac_attr.cc	24	1	Attr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	24	21	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL01-C	auxibinpac/src/pac_attr.cc	30	21	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_attr.cc	30	33	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	37	21	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL01-C	auxibinpac/src/pac_attr.cc	45	21	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_attr.cc	45	35	Do not reuse variable names in subscopes: seqend
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
OBJ32-CPP	auxibinpac/src/pac_attr.cc	58	1	LetAttr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	58	29	Do not reuse variable names in subscopes: letfields
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: Attr
EXP12-C	auxibinpac/src/pac_attr.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_attr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_attr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_attr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_attr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_attr.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_attr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_attr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_attr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_attr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_attr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_attr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_attr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_attr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_btype.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_btype.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_btype.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_btype.cc	14	2	Const-qualify immutable objects: t
DCL01-C	auxibinpac/src/pac_btype.cc	33	8	Do not reuse variable names in subscopes: bit_type
MSC12-C	auxibinpac/src/pac_btype.cc	41	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_btype.cc	83	52	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_btype.cc	90	55	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_btype.cc	93	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_btype.cc	96	55	Do not reuse variable names in subscopes: env
MSC01-C	auxibinpac/src/pac_btype.cc	109	2	Strive for logical completeness
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_btype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_btype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_btype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_btype.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_btype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_btype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_btype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_btype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_btype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_btype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_btype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_btype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_btype.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_btype.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibinpac/src/pac_case.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_case.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_case.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_case.cc	19	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: Type
MSC12-C	auxibinpac/src/pac_case.cc	33	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_case.cc	46	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_case.cc	52	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_case.cc	57	2	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	66	29	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_case.cc	68	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_case.cc	79	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_case.cc	85	5	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_case.cc	96	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_case.cc	106	49	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_case.cc	119	48	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_case.cc	131	49	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_case.cc	137	52	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_case.cc	145	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_case.cc	155	52	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_case.cc	173	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_case.cc	198	52	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_case.cc	203	31	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_case.cc	206	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_case.cc	209	3	Const-qualify immutable objects: w
DCL00-C	auxibinpac/src/pac_case.cc	220	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_case.cc	229	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_case.cc	238	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_case.cc	247	32	Do not reuse variable names in subscopes: index
DCL01-C	auxibinpac/src/pac_case.cc	247	43	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_case.cc	247	53	Do not reuse variable names in subscopes: type
MSC12-C	auxibinpac/src/pac_case.cc	250	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_case.cc	248	55	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_case.cc	248	40	Use bitwise operators only on unsigned operands
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_case.cc	258	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_case.cc	265	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_case.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_case.cc	272	5	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	277	5	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_case.cc	292	23	Do not apply operators expecting one type to data of an incompatible type
ERR08-CPP	auxibinpac/src/pac_case.cc	299	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	301	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	306	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	308	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	316	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	318	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	323	8	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_case.cc	325	8	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_case.cc	348	2	Detect and remove code that has no effect
INT13-C	auxibinpac/src/pac_case.cc	354	18	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_case.cc	354	48	Use bitwise operators only on unsigned operands
MSC12-C	auxibinpac/src/pac_case.cc	439	4	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_case.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_case.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_case.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_case.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_case.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_case.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_case.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_case.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_case.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_case.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	basic_string is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_case.cc	0	0	Public data member
MSC12-C	auxibinpac/src/pac_case.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_case.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_case.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_case.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_case.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_case.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_case.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_case.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_case.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_case.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_case.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_conn.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_conn.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_conn.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: AnalyzerDecl
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	vector is a non-explicit single-argument constructor.
ERR08-CPP	auxibinpac/src/pac_conn.cc	44	3	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_conn.cc	54	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_conn.cc	54	2	Should throw a special-purpose exception object.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_conn.cc	77	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_conn.cc	93	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_conn.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_conn.cc	107	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_conn.cc	131	2	Const-qualify immutable objects: proto
EXP12-C	auxibinpac/src/pac_conn.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_conn.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_conn.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_conn.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_conn.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_conn.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_conn.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_conn.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_conn.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_conn.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_conn.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_conn.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	basic_string is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_conn.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_conn.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_conn.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_conn.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_conn.cc	0	0	move_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_conn.cc	0	0	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_conn.cc	0	0	Do not ignore values returned by functions: !=
DCL02-C	auxibinpac/src/pac_context.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_context.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_context.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	14	32	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_context.cc	14	42	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_context.cc	15	62	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_context.cc	15	47	Use bitwise operators only on unsigned operands
DCL00-C	auxibinpac/src/pac_context.cc	19	1	Const-qualify immutable objects: current_analyzer_context_
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_context.cc	27	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_context.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_context.cc	36	46	Do not reuse variable names in subscopes: id
ERR08-CPP	auxibinpac/src/pac_context.cc	43	3	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: TypeDecl
DCL00-C	auxibinpac/src/pac_context.cc	63	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_context.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_context.cc	99	44	Do not reuse variable names in subscopes: env
EXP12-C	auxibinpac/src/pac_context.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_context.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Param* >
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Param* , ::std::allocator < ::Param* >  >
MSC12-C	auxibinpac/src/pac_context.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_context.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_context.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_context.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_context.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_context.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_context.cc	422	14	Take care when converting from pointer to integer or integer to pointer
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
MSC12-C	auxibinpac/src/pac_context.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_context.cc	0	0	Do not reuse variable names in subscopes:
DCL02-C	auxibinpac/src/pac_cstr.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_cstr.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_cstr.cc	52	3	Use visually distinct identifiers: npos
INT13-C	auxibinpac/src/pac_cstr.cc	60	34	Use bitwise operators only on unsigned operands
STR37-C	auxibinpac/src/pac_cstr.cc	60	49	Arguments to character-handling functions must be representable as an unsigned char
INT05-C	auxibinpac/src/pac_cstr.cc	64	9	Do not use input functions to convert character data if they cannot handle all possible inputs
ERR08-CPP	auxibinpac/src/pac_cstr.cc	65	5	Should throw a special-purpose exception object.
INT13-C	auxibinpac/src/pac_cstr.cc	75	34	Use bitwise operators only on unsigned operands
STR37-C	auxibinpac/src/pac_cstr.cc	75	49	Arguments to character-handling functions must be representable as an unsigned char
INT05-C	auxibinpac/src/pac_cstr.cc	79	9	Do not use input functions to convert character data if they cannot handle all possible inputs
ERR08-CPP	auxibinpac/src/pac_cstr.cc	80	5	Should throw a special-purpose exception object.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	92	1	ConstString is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_cstr.cc	98	3	Const-qualify immutable objects: len
INT07-C	auxibinpac/src/pac_cstr.cc	109	16	Use only explicitly signed or unsigned char type for numeric values
MSC12-C	auxibinpac/src/pac_cstr.cc	117	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_cstr.cc	120	3	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_cstr.cc	129	3	Should throw a special-purpose exception object.
EXP12-C	auxibinpac/src/pac_cstr.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_cstr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_cstr.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_cstr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_cstr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_cstr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_cstr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_datadep.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_datadep.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_datadep.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	map is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	7	1	DataDepElement is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	7	41	Do not reuse variable names in subscopes: type
DCL00-C	auxibinpac/src/pac_datadep.cc	18	2	Const-qualify immutable objects: cont
EXP12-C	auxibinpac/src/pac_datadep.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_datadep.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_datadep.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_datadep.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_datadep.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_datadep.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_datadep.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_datadep.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_datadep.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_datadep.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_datadep.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_datadep.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_datadep.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_datadep.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_dataptr.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_dataptr.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_dataptr.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	8	38	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_dataptr.cc	8	52	Do not reuse variable names in subscopes: offset
ERR08-CPP	auxibinpac/src/pac_dataptr.cc	13	4	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_dataptr.cc	40	2	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_dataptr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataptr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_dataptr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataptr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_dataptr.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_dataptr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_dataptr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataptr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_dataptr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataptr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataptr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataptr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_dataptr.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_dataptr.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibinpac/src/pac_dataunit.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_dataunit.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_dataunit.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	8	49	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_dataunit.cc	8	59	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_dataunit.cc	8	73	Do not reuse variable names in subscopes: type_params
DCL01-C	auxibinpac/src/pac_dataunit.cc	9	46	Do not reuse variable names in subscopes: context_params
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: AnalyzerElement
EXP12-C	auxibinpac/src/pac_dataunit.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_dataunit.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataunit.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_dataunit.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_dataunit.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_dataunit.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_dataunit.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_dataunit.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataunit.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_dataunit.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_dataunit.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_dataunit.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_dataunit.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_dataunit.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_decl.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_decl.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_decl.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_decl.cc	17	1	Const-qualify immutable objects: decl_list_
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_decl.cc	18	1	Const-qualify immutable objects: decl_map_
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	20	16	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_decl.cc	20	29	Do not reuse variable names in subscopes: decl_type
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_decl.cc	35	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_decl.cc	44	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_decl.cc	53	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_decl.cc	53	2	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_decl.cc	61	3	Should throw a special-purpose exception object.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_decl.cc	70	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_decl.cc	77	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_decl.cc	87	2	Do not reuse variable names in subscopes: analyzer_context
DCL00-C	auxibinpac/src/pac_decl.cc	89	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_decl.cc	101	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_decl.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	118	34	Do not reuse variable names in subscopes: id
DCL00-C	auxibinpac/src/pac_decl.cc	120	2	Const-qualify immutable objects: it
DCL00-C	auxibinpac/src/pac_decl.cc	126	1	Const-qualify immutable objects: helper_id_seq
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: Decl
DCL01-C	auxibinpac/src/pac_decl.cc	153	2	Do not reuse variable names in subscopes: env
EXP12-C	auxibinpac/src/pac_decl.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_decl.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_decl.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
EXP05-C	auxibinpac/src/pac_decl.cc	75	16	Do not cast away a const qualification
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_decl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Head_base < type >  is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , ::std::remove_reference < ::std::map < const ::ID* , ::Decl* , ::ID_ptr_cmp , ::std::allocator < ::std::pair < const ::ID*const  , ::Decl* >  >  > ::key_type& > ::type&& , false >
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	tuple < true >  is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: _Tuple_impl < 0UL , ::std::remove_reference < ::std::map < const ::ID* , ::Decl* , ::ID_ptr_cmp , ::std::allocator < ::std::pair < const ::ID*const  , ::Decl* >  >  > ::key_type& > ::type&& >
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , ::std::remove_reference < ::std::map < const ::ID* , ::Decl* , ::ID_ptr_cmp , ::std::allocator < ::std::pair < const ::ID*const  , ::Decl* >  >  > ::key_type& > ::type&& , false >
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: pair < const ::ID*const  , ::Decl* >
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Decl* >
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Decl* , ::std::allocator < ::Decl* >  >
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_decl.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_decl.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Attr* >
DCL01-C	auxibinpac/src/pac_decl.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Attr* , ::std::allocator < ::Attr* >  >
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_decl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_decl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_decl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_decl.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_decl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_decl.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_decl.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_decl.cc	0	0	Detect and remove code that has no effect
DCL02-C	auxibinpac/src/pac_embedded.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_embedded.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_embedded.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_embedded.cc	31	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_embedded.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_embedded.cc	69	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_embedded.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxibinpac/src/pac_embedded.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_embedded.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_embedded.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_embedded.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_embedded.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_embedded.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_embedded.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_embedded.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_embedded.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_embedded.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: allocator < ::EmbeddedCodeSegment* >
DCL01-C	auxibinpac/src/pac_embedded.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::EmbeddedCodeSegment* , ::std::allocator < ::EmbeddedCodeSegment* >  >
MSC12-C	auxibinpac/src/pac_embedded.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_embedded.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_embedded.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_embedded.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_embedded.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_embedded.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_embedded.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_embedded.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_embedded.cc	0	0	Detect and remove code that has no effect
DCL02-C	auxibinpac/src/pac_enum.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_enum.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_enum.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	map is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_enum.cc	19	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_enum.cc	23	4	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_enum.cc	31	24	Do not reuse variable names in subscopes: id
DCL00-C	auxibinpac/src/pac_enum.cc	33	2	Const-qualify immutable objects: type_id
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: Decl
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_enum.cc	40	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_enum.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_enum.cc	54	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_enum.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxibinpac/src/pac_enum.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_enum.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_enum.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_enum.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_enum.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_enum.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_enum.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_enum.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_enum.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_enum.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_enum.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_enum.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_enum.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_enum.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_expr.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_expr.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_expr.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_expr.cc	19	2	Const-qualify immutable objects: str
DCL00-C	auxibinpac/src/pac_expr.cc	20	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	34	2	Const-qualify immutable objects: val_list
DCL00-C	auxibinpac/src/pac_expr.cc	37	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
OBJ32-CPP	auxibinpac/src/pac_expr.cc	68	1	Expr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
OBJ32-CPP	auxibinpac/src/pac_expr.cc	77	1	Expr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
OBJ32-CPP	auxibinpac/src/pac_expr.cc	86	1	Expr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
OBJ32-CPP	auxibinpac/src/pac_expr.cc	95	1	Expr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
OBJ32-CPP	auxibinpac/src/pac_expr.cc	135	1	Expr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	145	18	Do not reuse variable names in subscopes: index
DCL00-C	auxibinpac/src/pac_expr.cc	154	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL00-C	auxibinpac/src/pac_expr.cc	168	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	169	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_expr.cc	174	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	175	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	176	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	183	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	199	4	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	210	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_expr.cc	212	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	213	2	Const-qualify immutable objects: r
EXP11-C	auxibinpac/src/pac_expr.cc	213	19	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_expr.cc	214	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	222	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	223	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	224	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_expr.cc	232	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	238	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	248	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_expr.cc	251	3	Do not reuse variable names in subscopes: index
ERR08-CPP	auxibinpac/src/pac_expr.cc	255	5	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	324	5	Const-qualify immutable objects: tmp
DCL00-C	auxibinpac/src/pac_expr.cc	335	4	Const-qualify immutable objects: v0
DCL00-C	auxibinpac/src/pac_expr.cc	336	4	Const-qualify immutable objects: v1
DCL01-C	auxibinpac/src/pac_expr.cc	348	4	Do not reuse variable names in subscopes: id
DCL00-C	auxibinpac/src/pac_expr.cc	359	12	Const-qualify immutable objects: e
DCL00-C	auxibinpac/src/pac_expr.cc	363	6	Const-qualify immutable objects: ty_size
ERR08-CPP	auxibinpac/src/pac_expr.cc	367	7	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_expr.cc	370	6	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_expr.cc	377	4	Do not reuse variable names in subscopes: id
DCL00-C	auxibinpac/src/pac_expr.cc	421	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	429	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_expr.cc	487	5	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	506	5	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_expr.cc	511	7	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_expr.cc	587	2	Do not reuse variable names in subscopes: type
ERR08-CPP	auxibinpac/src/pac_expr.cc	591	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	606	4	Const-qualify immutable objects: parent_val
ERR08-CPP	auxibinpac/src/pac_expr.cc	611	4	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_expr.cc	657	2	Const-qualify immutable objects: offset
DCL00-C	auxibinpac/src/pac_expr.cc	660	2	Const-qualify immutable objects: size
DCL00-C	auxibinpac/src/pac_expr.cc	669	2	Const-qualify immutable objects: size
MSC01-C	auxibinpac/src/pac_expr.cc	678	2	Strive for logical completeness
EXP11-C	auxibinpac/src/pac_expr.cc	682	18	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_expr.cc	683	4	Detect and remove code that has no effect
EXP11-C	auxibinpac/src/pac_expr.cc	700	21	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_expr.cc	701	4	Detect and remove code that has no effect
EXP11-C	auxibinpac/src/pac_expr.cc	708	19	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_expr.cc	709	4	Detect and remove code that has no effect
MSC01-C	auxibinpac/src/pac_expr.cc	734	2	Strive for logical completeness
ERR08-CPP	auxibinpac/src/pac_expr.cc	749	5	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_expr.cc	793	4	Do not reuse variable names in subscopes: index
DCL00-C	auxibinpac/src/pac_expr.cc	796	4	Const-qualify immutable objects: elem_size
DCL01-C	auxibinpac/src/pac_expr.cc	810	4	Do not reuse variable names in subscopes: id
MSC12-C	auxibinpac/src/pac_expr.cc	811	4	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_expr.cc	829	5	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_expr.cc	835	4	Do not reuse variable names in subscopes: id
MSC12-C	auxibinpac/src/pac_expr.cc	836	4	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_expr.cc	845	5	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_expr.cc	884	35	Do not reuse variable names in subscopes: id
DCL00-C	auxibinpac/src/pac_expr.cc	896	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	904	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	943	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	951	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	990	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	998	4	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_expr.cc	1016	30	Do not reuse variable names in subscopes: index
DCL01-C	auxibinpac/src/pac_expr.cc	1016	43	Do not reuse variable names in subscopes: value
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
DCL00-C	auxibinpac/src/pac_expr.cc	1023	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_expr.cc	1029	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_expr.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxibinpac/src/pac_expr.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_expr.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MSC12-C	auxibinpac/src/pac_expr.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_expr.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_expr.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_expr.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_expr.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_expr.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_expr.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_expr.cc	422	14	Take care when converting from pointer to integer or integer to pointer
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
MSC12-C	auxibinpac/src/pac_expr.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_expr.cc	0	0	Do not reuse variable names in subscopes:
DCL02-C	auxibinpac/src/pac_exttype.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_exttype.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_exttype.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibinpac/src/pac_exttype.cc	1	1	Use visually distinct identifiers: extern_type_bool
DCL02-C	auxibinpac/src/pac_exttype.cc	2	1	Use visually distinct identifiers: extern_type_int
DCL02-C	auxibinpac/src/pac_exttype.cc	3	1	Use visually distinct identifiers: extern_type_double
DCL02-C	auxibinpac/src/pac_exttype.cc	4	1	Use visually distinct identifiers: extern_type_string
DCL02-C	auxibinpac/src/pac_exttype.cc	5	1	Use visually distinct identifiers: extern_type_void
DCL02-C	auxibinpac/src/pac_exttype.cc	6	1	Use visually distinct identifiers: extern_type_voidptr
DCL02-C	auxibinpac/src/pac_exttype.cc	7	1	Use visually distinct identifiers: extern_type_nullptr
DCL02-C	auxibinpac/src/pac_exttype.cc	8	1	Use visually distinct identifiers: extern_type_bytearray
DCL02-C	auxibinpac/src/pac_exttype.cc	9	1	Use visually distinct identifiers: extern_type_const_charptr
DCL02-C	auxibinpac/src/pac_exttype.cc	10	1	Use visually distinct identifiers: extern_type_const_byteptr
DCL02-C	auxibinpac/src/pac_exttype.cc	12	1	Use visually distinct identifiers: extern_type_const_bytestring
DCL02-C	auxibinpac/src/pac_exttype.cc	14	1	Use visually distinct identifiers: extern_type_re_matcher
DCL02-C	auxibinpac/src/pac_exttype.cc	15	1	Use visually distinct identifiers: extern_type_flowbuffer
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	27	33	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_exttype.cc	29	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_exttype.cc	43	51	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_exttype.cc	51	51	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_exttype.cc	53	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_exttype.cc	56	51	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_exttype.cc	58	2	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_exttype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exttype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_exttype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exttype.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_exttype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_exttype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_exttype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exttype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_exttype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exttype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exttype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exttype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_exttype.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_exttype.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibinpac/src/pac_field.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_field.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_field.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	9	24	Do not reuse variable names in subscopes: tof
DCL01-C	auxibinpac/src/pac_field.cc	9	44	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_field.cc	9	54	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_field.cc	21	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_field.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_field.cc	38	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_field.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_field.cc	52	5	Should throw a special-purpose exception object.
INT13-C	auxibinpac/src/pac_field.cc	71	14	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	72	18	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	82	11	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	82	14	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	82	29	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	84	11	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	84	15	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	87	30	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	94	24	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	94	54	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	101	24	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_field.cc	108	26	Use bitwise operators only on unsigned operands
DCL00-C	auxibinpac/src/pac_field.cc	129	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_field.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_field.cc	140	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_field.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxibinpac/src/pac_field.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_field.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_field.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_field.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_field.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_field.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_field.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_field.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_field.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_field.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_field.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_field.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_field.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_field.cc	422	14	Take care when converting from pointer to integer or integer to pointer
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_field.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_field.cc	597	14	Take care when converting from pointer to integer or integer to pointer
DCL05-C	auxibinpac/src/pac_field.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_field.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_field.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_field.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxibinpac/src/pac_field.cc	644	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_field.cc	649	7	Do not ignore values returned by functions: move_backward
EXP12-C	auxibinpac/src/pac_field.cc	651	7	Do not ignore values returned by functions: copy
EXP12-C	auxibinpac/src/pac_field.cc	657	7	Do not ignore values returned by functions: __uninitialized_copy_a
EXP12-C	auxibinpac/src/pac_field.cc	661	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_field.cc	666	7	Do not ignore values returned by functions: copy
DCL01-C	auxibinpac/src/pac_field.cc	0	0	Do not reuse variable names in subscopes:
DCL02-C	auxibinpac/src/pac_flow.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_flow.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_flow.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	18	24	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: AnalyzerDecl
DCL00-C	auxibinpac/src/pac_flow.cc	33	1	Const-qualify immutable objects: flow_buffer_type_
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	vector is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_flow.cc	51	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_flow.cc	51	2	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_flow.cc	58	3	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_flow.cc	70	3	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
ERR08-CPP	auxibinpac/src/pac_flow.cc	83	3	Should throw a special-purpose exception object.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_flow.cc	134	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_flow.cc	142	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_flow.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_flow.cc	159	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_flow.cc	181	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_flow.cc	300	2	Const-qualify immutable objects: parse_params
EXP12-C	auxibinpac/src/pac_flow.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_flow.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_flow.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_flow.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_flow.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_flow.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_flow.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_flow.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_flow.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_flow.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	basic_string is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_flow.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_flow.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_flow.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	move_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_flow.cc	0	0	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_flow.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Param* >
DCL01-C	auxibinpac/src/pac_flow.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Param* , ::std::allocator < ::Param* >  >
MSC12-C	auxibinpac/src/pac_flow.cc	0	0	Detect and remove code that has no effect
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_flow.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxibinpac/src/pac_flow.cc	380	7	Do not ignore values returned by functions: move_backward
INT01-C	auxibinpac/src/pac_flow.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_flow.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_flow.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_flow.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_flow.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxibinpac/src/pac_flow.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_flow.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_func.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_func.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_func.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	9	24	Do not reuse variable names in subscopes: id
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_func.cc	20	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_func.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_func.cc	33	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_func.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_func.cc	51	2	Const-qualify immutable objects: class_str
DCL00-C	auxibinpac/src/pac_func.cc	55	2	Const-qualify immutable objects: proto_str
MSC12-C	auxibinpac/src/pac_func.cc	58	2	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_func.cc	90	1	FuncDecl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	90	30	Do not reuse variable names in subscopes: function
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: Decl
OBJ32-CPP	auxibinpac/src/pac_func.cc	112	1	AnalyzerFunction is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	112	46	Do not reuse variable names in subscopes: function
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: AnalyzerElement
EXP12-C	auxibinpac/src/pac_func.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_func.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_func.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_func.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_func.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_func.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_func.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_func.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_func.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_func.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_func.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_func.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_func.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_func.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_id.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_id.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_id.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibinpac/src/pac_id.cc	10	1	Use visually distinct identifiers: default_value_var
DCL02-C	auxibinpac/src/pac_id.cc	11	1	Use visually distinct identifiers: null_id
DCL02-C	auxibinpac/src/pac_id.cc	12	1	Use visually distinct identifiers: null_byteseg_id
DCL02-C	auxibinpac/src/pac_id.cc	14	1	Use visually distinct identifiers: begin_of_data
DCL02-C	auxibinpac/src/pac_id.cc	15	1	Use visually distinct identifiers: end_of_data
DCL02-C	auxibinpac/src/pac_id.cc	16	1	Use visually distinct identifiers: len_of_data
DCL02-C	auxibinpac/src/pac_id.cc	17	1	Use visually distinct identifiers: byteorder_id
DCL02-C	auxibinpac/src/pac_id.cc	18	1	Use visually distinct identifiers: bigendian_id
DCL02-C	auxibinpac/src/pac_id.cc	19	1	Use visually distinct identifiers: littleendian_id
DCL02-C	auxibinpac/src/pac_id.cc	20	1	Use visually distinct identifiers: unspecified_byteorder_id
DCL02-C	auxibinpac/src/pac_id.cc	23	1	Use visually distinct identifiers: analyzer_context_id
DCL02-C	auxibinpac/src/pac_id.cc	24	1	Use visually distinct identifiers: context_macro_id
DCL02-C	auxibinpac/src/pac_id.cc	25	1	Use visually distinct identifiers: this_id
DCL02-C	auxibinpac/src/pac_id.cc	26	1	Use visually distinct identifiers: sourcedata_id
DCL02-C	auxibinpac/src/pac_id.cc	27	1	Use visually distinct identifiers: connection_id
DCL02-C	auxibinpac/src/pac_id.cc	28	1	Use visually distinct identifiers: upflow_id
DCL02-C	auxibinpac/src/pac_id.cc	29	1	Use visually distinct identifiers: downflow_id
DCL02-C	auxibinpac/src/pac_id.cc	30	1	Use visually distinct identifiers: dataunit_id
DCL02-C	auxibinpac/src/pac_id.cc	31	1	Use visually distinct identifiers: flow_buffer_id
DCL02-C	auxibinpac/src/pac_id.cc	32	1	Use visually distinct identifiers: element_macro_id
DCL02-C	auxibinpac/src/pac_id.cc	33	1	Use visually distinct identifiers: input_macro_id
DCL02-C	auxibinpac/src/pac_id.cc	34	1	Use visually distinct identifiers: cxt_connection_id
DCL02-C	auxibinpac/src/pac_id.cc	35	1	Use visually distinct identifiers: cxt_flow_id
DCL02-C	auxibinpac/src/pac_id.cc	36	1	Use visually distinct identifiers: parsing_state_id
DCL02-C	auxibinpac/src/pac_id.cc	37	1	Use visually distinct identifiers: buffering_state_id
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_id.cc	39	1	Const-qualify immutable objects: anonymous_id_seq
MSC01-C	auxibinpac/src/pac_id.cc	54	2	Strive for logical completeness
MSC12-C	auxibinpac/src/pac_id.cc	105	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_id.cc	119	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_id.cc	125	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_id.cc	136	43	Do not reuse variable names in subscopes: env
ERR08-CPP	auxibinpac/src/pac_id.cc	142	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	145	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	148	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	163	3	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_id.cc	170	2	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	pair is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_id.cc	183	8	Const-qualify immutable objects: it
DCL00-C	auxibinpac/src/pac_id.cc	193	2	Const-qualify immutable objects: it
ERR08-CPP	auxibinpac/src/pac_id.cc	197	3	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_id.cc	230	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_id.cc	232	2	Const-qualify immutable objects: it
ERR08-CPP	auxibinpac/src/pac_id.cc	240	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	260	4	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_id.cc	298	4	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_id.cc	298	4	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	314	3	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_id.cc	345	3	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_id.cc	356	2	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_id.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_id.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_id.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_id.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_id.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_id.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_id.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_id.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_id.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_id.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
MSC12-C	auxibinpac/src/pac_id.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_id.cc	0	0	Detect and remove code that has no effect
EXP05-C	auxibinpac/src/pac_id.cc	75	16	Do not cast away a const qualification
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_id.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_id.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Head_base is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , const const ::ID*& , false >
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	tuple < void , true >  is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: _Tuple_impl < 0UL , const const ::ID*& >
INT01-C	auxibinpac/src/pac_id.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_id.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: pair < const ::ID*const  , ::IDRecord* >
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_id.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , const const ::ID*& , false >
MSC12-C	auxibinpac/src/pac_id.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_id.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_id.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_id.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_inputbuf.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_inputbuf.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_inputbuf.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	map is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	9	1	InputBuffer is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	9	32	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
EXP12-C	auxibinpac/src/pac_inputbuf.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_inputbuf.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_inputbuf.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_inputbuf.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_inputbuf.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_inputbuf.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_inputbuf.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_inputbuf.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_inputbuf.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_inputbuf.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_inputbuf.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_inputbuf.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_let.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_let.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_let.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL13-C	auxibinpac/src/pac_let.cc	11	37	Declare function parameters that are pointers to values not changed by the function as const: expr
DCL13-C	auxibinpac/src/pac_let.cc	11	66	Declare function parameters that are pointers to values not changed by the function as const: out
DCL13-C	auxibinpac/src/pac_let.cc	11	76	Declare function parameters that are pointers to values not changed by the function as const: env
DCL01-C	auxibinpac/src/pac_let.cc	15	24	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_let.cc	15	34	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_let.cc	15	46	Do not reuse variable names in subscopes: expr
MSC12-C	auxibinpac/src/pac_let.cc	19	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_let.cc	16	58	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_let.cc	16	43	Use bitwise operators only on unsigned operands
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MSC12-C	auxibinpac/src/pac_let.cc	41	3	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_let.cc	48	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_let.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_let.cc	103	22	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_let.cc	103	44	Do not reuse variable names in subscopes: expr
MSC12-C	auxibinpac/src/pac_let.cc	107	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_let.cc	115	2	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: Decl
DCL01-C	auxibinpac/src/pac_let.cc	139	39	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	141	2	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_let.cc	142	2	Const-qualify immutable objects: tmp
EXP12-C	auxibinpac/src/pac_let.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_let.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_let.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_let.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_let.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_let.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_let.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_param.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_param.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_param.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	11	18	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_param.cc	11	28	Do not reuse variable names in subscopes: type
MSC12-C	auxibinpac/src/pac_param.cc	25	2	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_param.cc	31	2	Const-qualify immutable objects: param_decls
DCL00-C	auxibinpac/src/pac_param.cc	34	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_param.cc	0	0	Do not ignore values returned by functions: !=
OBJ32-CPP	auxibinpac/src/pac_param.cc	47	1	ParamField is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_param.cc	48	60	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_param.cc	48	45	Use bitwise operators only on unsigned operands
EXP12-C	auxibinpac/src/pac_param.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_param.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_param.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_param.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_param.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_param.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_param.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_param.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_param.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_param.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_param.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_param.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_param.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_param.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_paramtype.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_paramtype.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_paramtype.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: Type
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	vector is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_paramtype.cc	59	2	Const-qualify immutable objects: type
DCL01-C	auxibinpac/src/pac_paramtype.cc	59	2	Do not reuse variable names in subscopes: type
ERR08-CPP	auxibinpac/src/pac_paramtype.cc	64	4	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_paramtype.cc	69	40	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_paramtype.cc	93	2	Const-qualify immutable objects: mode
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_paramtype.cc	116	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_paramtype.cc	135	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not ignore values returned by functions: !=
EXP30-C	auxibinpac/src/pac_paramtype.cc	141	2	Do not depend on order of evaluation for side effects
DCL01-C	auxibinpac/src/pac_paramtype.cc	154	58	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_paramtype.cc	156	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_paramtype.cc	161	61	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_paramtype.cc	172	63	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_paramtype.cc	174	2	Const-qualify immutable objects: arg_str
DCL00-C	auxibinpac/src/pac_paramtype.cc	177	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_paramtype.cc	190	61	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_paramtype.cc	196	61	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_paramtype.cc	203	2	Const-qualify immutable objects: parse_params
MSC12-C	auxibinpac/src/pac_paramtype.cc	207	3	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_paramtype.cc	233	2	Const-qualify immutable objects: call_parse_func
MSC12-C	auxibinpac/src/pac_paramtype.cc	246	4	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_paramtype.cc	270	61	Do not reuse variable names in subscopes: env
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_paramtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_paramtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_paramtype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_paramtype.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_paramtype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_paramtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_paramtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_paramtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_paramtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_paramtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_paramtype.cc	731	7	Do not ignore values returned by functions: __fill_a
MSC12-C	auxibinpac/src/pac_paramtype.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_paramtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_paramtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_paramtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_paramtype.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_paramtype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_paramtype.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_paramtype.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_paramtype.cc	0	0	Detect and remove code that has no effect
DCL02-C	auxibinpac/src/pac_primitive.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_primitive.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_primitive.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	map is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_primitive.cc	10	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_primitive.cc	16	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_primitive.cc	22	2	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_primitive.cc	28	2	Do not reuse variable names in subscopes: type
DCL00-C	auxibinpac/src/pac_primitive.cc	32	2	Const-qualify immutable objects: type_str
EXP12-C	auxibinpac/src/pac_primitive.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_primitive.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_primitive.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_primitive.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_primitive.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_primitive.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_primitive.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_primitive.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_primitive.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_primitive.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_primitive.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_primitive.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_primitive.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_primitive.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_record.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_record.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_record.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	15	1	RecordType is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_record.cc	21	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: Type
MSC12-C	auxibinpac/src/pac_record.cc	50	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_record.cc	54	31	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_record.cc	56	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_record.cc	58	2	Do not reuse variable names in subscopes: prev
DCL00-C	auxibinpac/src/pac_record.cc	61	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_record.cc	72	4	Const-qualify immutable objects: w
DCL01-C	auxibinpac/src/pac_record.cc	101	50	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_record.cc	106	51	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_record.cc	111	51	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_record.cc	116	54	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_record.cc	121	54	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_record.cc	132	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_record.cc	145	3	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_record.cc	146	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_record.cc	154	4	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_record.cc	176	54	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_record.cc	181	33	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_record.cc	184	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_record.cc	187	3	Const-qualify immutable objects: w
DCL00-C	auxibinpac/src/pac_record.cc	205	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_record.cc	214	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_record.cc	228	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_record.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_record.cc	237	36	Do not reuse variable names in subscopes: tof
DCL01-C	auxibinpac/src/pac_record.cc	237	45	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_record.cc	237	55	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_record.cc	238	48	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_record.cc	238	33	Use bitwise operators only on unsigned operands
MSC12-C	auxibinpac/src/pac_record.cc	286	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_record.cc	290	4	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_record.cc	303	3	Const-qualify immutable objects: field_size
DCL01-C	auxibinpac/src/pac_record.cc	329	2	Do not reuse variable names in subscopes: begin
DCL01-C	auxibinpac/src/pac_record.cc	330	2	Do not reuse variable names in subscopes: end
DCL01-C	auxibinpac/src/pac_record.cc	343	2	Do not reuse variable names in subscopes: begin
DCL01-C	auxibinpac/src/pac_record.cc	362	2	Do not reuse variable names in subscopes: begin
DCL01-C	auxibinpac/src/pac_record.cc	378	38	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_record.cc	378	48	Do not reuse variable names in subscopes: type
MSC12-C	auxibinpac/src/pac_record.cc	380	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: RecordField
MSC12-C	auxibinpac/src/pac_record.cc	435	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_record.cc	501	44	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_record.cc	501	73	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: RecordField
ERR08-CPP	auxibinpac/src/pac_record.cc	515	4	Should throw a special-purpose exception object.
MSC01-C	auxibinpac/src/pac_record.cc	533	2	Strive for logical completeness
ERR08-CPP	auxibinpac/src/pac_record.cc	552	5	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_record.cc	570	2	Detect and remove code that has no effect
MSC01-C	auxibinpac/src/pac_record.cc	573	2	Strive for logical completeness
DCL01-C	auxibinpac/src/pac_record.cc	652	2	Do not reuse variable names in subscopes: begin
DCL00-C	auxibinpac/src/pac_record.cc	655	2	Const-qualify immutable objects: ss
MSC12-C	auxibinpac/src/pac_record.cc	656	2	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_record.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_record.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_record.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_record.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_record.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_record.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_record.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_record.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_record.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_record.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_record.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_record.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_record.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_record.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_redef.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_redef.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_redef.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_redef.cc	17	2	Const-qualify immutable objects: decl
ERR08-CPP	auxibinpac/src/pac_redef.cc	20	3	Should throw a special-purpose exception object.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
ERR08-CPP	auxibinpac/src/pac_redef.cc	34	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	37	24	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	38	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_redef.cc	41	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_redef.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_redef.cc	53	4	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_redef.cc	57	4	Should throw a special-purpose exception object.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
ERR08-CPP	auxibinpac/src/pac_redef.cc	70	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	73	24	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	74	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_redef.cc	79	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	82	23	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	83	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_redef.cc	85	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_redef.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	new_allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	allocator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
ERR08-CPP	auxibinpac/src/pac_redef.cc	100	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	103	24	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	104	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_redef.cc	109	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_redef.cc	112	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_redef.cc	0	0	Do not ignore values returned by functions: !=
ERR08-CPP	auxibinpac/src/pac_redef.cc	127	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	130	32	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	131	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_redef.cc	144	3	Should throw a special-purpose exception object.
EXP11-C	auxibinpac/src/pac_redef.cc	147	24	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxibinpac/src/pac_redef.cc	148	2	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_redef.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_redef.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_redef.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_redef.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_redef.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_redef.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_redef.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_regex.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_regex.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_regex.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	map is a non-explicit single-argument constructor.
STR05-C	auxibinpac/src/pac_regex.cc	9	1	Use pointers to const when referring to string literals
STR05-C	auxibinpac/src/pac_regex.cc	10	1	Use pointers to const when referring to string literals
INT07-C	auxibinpac/src/pac_regex.cc	24	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxibinpac/src/pac_regex.cc	26	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxibinpac/src/pac_regex.cc	38	13	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxibinpac/src/pac_regex.cc	44	2	Const-qualify immutable objects: rval
OBJ32-CPP	auxibinpac/src/pac_regex.cc	49	1	RegEx is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_regex.cc	52	2	Const-qualify immutable objects: prefix
OBJ32-CPP	auxibinpac/src/pac_regex.cc	59	1	RegExDecl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: Decl
EXP12-C	auxibinpac/src/pac_regex.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_regex.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_regex.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_regex.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_regex.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_regex.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_regex.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_regex.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_regex.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_regex.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_regex.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_regex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_regex.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_regex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_state.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_state.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_state.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	map is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_state.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_state.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_state.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_state.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_state.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_state.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_state.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_state.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_state.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_state.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_state.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_state.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_state.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_state.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_strtype.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_strtype.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_strtype.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	map is a non-explicit single-argument constructor.
STR05-C	auxibinpac/src/pac_strtype.cc	15	1	Use pointers to const when referring to string literals
STR05-C	auxibinpac/src/pac_strtype.cc	16	1	Use pointers to const when referring to string literals
MSC12-C	auxibinpac/src/pac_strtype.cc	20	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: Type
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: Type
MSC12-C	auxibinpac/src/pac_strtype.cc	31	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: Type
DCL01-C	auxibinpac/src/pac_strtype.cc	55	2	Do not reuse variable names in subscopes: clone
ERR08-CPP	auxibinpac/src/pac_strtype.cc	101	5	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_strtype.cc	113	5	Should throw a special-purpose exception object.
ERR08-CPP	auxibinpac/src/pac_strtype.cc	127	5	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_strtype.cc	142	31	Do not reuse variable names in subscopes: env
INT13-C	auxibinpac/src/pac_strtype.cc	144	14	Use bitwise operators only on unsigned operands
DCL00-C	auxibinpac/src/pac_strtype.cc	146	3	Const-qualify immutable objects: string_length_var
DCL01-C	auxibinpac/src/pac_strtype.cc	146	3	Do not reuse variable names in subscopes: string_length_var
DCL01-C	auxibinpac/src/pac_strtype.cc	154	50	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_strtype.cc	159	51	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_strtype.cc	164	51	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_strtype.cc	169	54	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_strtype.cc	189	33	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_strtype.cc	212	54	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_strtype.cc	214	2	Detect and remove code that has no effect
MSC01-C	auxibinpac/src/pac_strtype.cc	222	2	Strive for logical completeness
DCL01-C	auxibinpac/src/pac_strtype.cc	243	55	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_strtype.cc	245	2	Const-qualify immutable objects: static_size
DCL01-C	auxibinpac/src/pac_strtype.cc	252	54	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_strtype.cc	254	2	Const-qualify immutable objects: str_size
MSC01-C	auxibinpac/src/pac_strtype.cc	257	2	Strive for logical completeness
ERR08-CPP	auxibinpac/src/pac_strtype.cc	277	5	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_strtype.cc	297	57	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_strtype.cc	299	2	Const-qualify immutable objects: tmp
DCL01-C	auxibinpac/src/pac_strtype.cc	305	55	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_strtype.cc	309	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_strtype.cc	313	2	Const-qualify immutable objects: str_val
DCL01-C	auxibinpac/src/pac_strtype.cc	325	59	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_strtype.cc	349	2	Const-qualify immutable objects: tmp
DCL01-C	auxibinpac/src/pac_strtype.cc	355	60	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_strtype.cc	357	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_strtype.cc	376	3	Should throw a special-purpose exception object.
MSC01-C	auxibinpac/src/pac_strtype.cc	387	2	Strive for logical completeness
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_strtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_strtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_strtype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_strtype.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_strtype.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_strtype.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_strtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_strtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_strtype.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_strtype.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_strtype.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_strtype.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_strtype.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_strtype.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibinpac/src/pac_type.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_type.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_type.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	map is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_type.cc	23	1	Const-qualify immutable objects: type_map_
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	vector is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	25	21	Do not reuse variable names in subscopes: tot
MSC12-C	auxibinpac/src/pac_type.cc	32	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: DataDepElement
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_type.cc	78	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	83	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	84	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	85	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	90	2	Do not reuse variable names in subscopes: clone
DCL00-C	auxibinpac/src/pac_type.cc	93	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	99	3	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_type.cc	110	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	114	40	Do not reuse variable names in subscopes: array
DCL01-C	auxibinpac/src/pac_type.cc	114	61	Do not reuse variable names in subscopes: index
DCL01-C	auxibinpac/src/pac_type.cc	124	53	Do not reuse variable names in subscopes: declared_as_type
MSC12-C	auxibinpac/src/pac_type.cc	147	2	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC01-C	auxibinpac/src/pac_type.cc	153	2	Strive for logical completeness
EXP11-C	auxibinpac/src/pac_type.cc	181	23	Do not apply operators expecting one type to data of an incompatible type
ERR08-CPP	auxibinpac/src/pac_type.cc	195	5	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_type.cc	233	49	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_type.cc	244	25	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	247	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	265	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_type.cc	272	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	279	3	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	280	3	Const-qualify immutable objects: has_value_id
MSC12-C	auxibinpac/src/pac_type.cc	287	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	288	3	Do not reuse variable names in subscopes: parsing_complete_var
MSC12-C	auxibinpac/src/pac_type.cc	304	4	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	311	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_type.cc	318	44	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	331	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_type.cc	338	45	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	345	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_type.cc	352	45	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	354	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_type.cc	371	48	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	373	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL01-C	auxibinpac/src/pac_type.cc	381	56	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	383	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	385	2	Const-qualify immutable objects: frame_buffer_arg
MSC12-C	auxibinpac/src/pac_type.cc	396	4	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	408	5	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	449	47	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_type.cc	470	46	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	479	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	535	50	Do not reuse variable names in subscopes: env
DCL01-C	auxibinpac/src/pac_type.cc	550	48	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	552	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_type.cc	579	4	Should throw a special-purpose exception object.
MSC12-C	auxibinpac/src/pac_type.cc	589	3	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	657	47	Do not reuse variable names in subscopes: env
ERR08-CPP	auxibinpac/src/pac_type.cc	665	4	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_type.cc	674	3	Const-qualify immutable objects: datasize_str
DCL01-C	auxibinpac/src/pac_type.cc	684	47	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	686	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	692	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	708	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
EXP11-C	auxibinpac/src/pac_type.cc	713	19	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_type.cc	718	25	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	auxibinpac/src/pac_type.cc	740	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_type.cc	757	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	759	2	Const-qualify immutable objects: t
DCL01-C	auxibinpac/src/pac_type.cc	771	44	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	776	3	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	783	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	797	50	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	799	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	800	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	814	44	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	819	2	Const-qualify immutable objects: ss
MSC12-C	auxibinpac/src/pac_type.cc	828	4	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	836	50	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_type.cc	890	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	896	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_type.cc	907	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_type.cc	912	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_type.cc	919	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_type.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_type.cc	948	2	Detect and remove code that has no effect
ERR08-CPP	auxibinpac/src/pac_type.cc	948	2	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_type.cc	999	36	Do not reuse variable names in subscopes: env
MSC12-C	auxibinpac/src/pac_type.cc	1001	2	Detect and remove code that has no effect
EXP11-C	auxibinpac/src/pac_type.cc	1046	22	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_type.cc	1047	22	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_type.cc	1060	20	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxibinpac/src/pac_type.cc	1061	20	Do not apply operators expecting one type to data of an incompatible type
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	pair is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_type.cc	1074	2	Const-qualify immutable objects: name
DCL01-C	auxibinpac/src/pac_type.cc	1081	2	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_type.cc	1102	61	Do not reuse variable names in subscopes: type
MSC12-C	auxibinpac/src/pac_type.cc	1104	2	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_type.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
EXP05-C	auxibinpac/src/pac_type.cc	75	16	Do not cast away a const qualification
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_type.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Head_base is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , const ::std::__cxx11::string& , false >
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	tuple < void , true >  is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Tuple_impl < 0UL , const ::std::__cxx11::string& >
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: pair < const ::std::__cxx11::string , ::Type* >
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Head_base < 0UL , const ::std::__cxx11::string& , false >
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Field* >
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Field* , ::std::allocator < ::Field* >  >
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_type.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Attr* >
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Attr* , ::std::allocator < ::Attr* >  >
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_type.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: allocator < ::Expr* >
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::Expr* , ::std::allocator < ::Expr* >  >
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_type.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_type.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_type.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_type.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_type.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxibinpac/src/pac_type.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_type.cc	597	14	Take care when converting from pointer to integer or integer to pointer
DCL05-C	auxibinpac/src/pac_type.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_type.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxibinpac/src/pac_type.cc	644	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_type.cc	649	7	Do not ignore values returned by functions: move_backward
EXP12-C	auxibinpac/src/pac_type.cc	651	7	Do not ignore values returned by functions: copy
EXP12-C	auxibinpac/src/pac_type.cc	657	7	Do not ignore values returned by functions: __uninitialized_copy_a
EXP12-C	auxibinpac/src/pac_type.cc	661	7	Do not ignore values returned by functions: __uninitialized_move_a
EXP12-C	auxibinpac/src/pac_type.cc	666	7	Do not ignore values returned by functions: copy
DCL01-C	auxibinpac/src/pac_type.cc	0	0	Do not reuse variable names in subscopes:
DCL02-C	auxibinpac/src/pac_typedecl.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_typedecl.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_typedecl.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	19	24	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_typedecl.cc	19	53	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: Decl
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_typedecl.cc	31	2	Const-qualify immutable objects: delete_list_i
EXP12-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxibinpac/src/pac_typedecl.cc	42	2	Detect and remove code that has no effect
DCL00-C	auxibinpac/src/pac_typedecl.cc	60	2	Const-qualify immutable objects: i
EXP12-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not ignore values returned by functions: !=
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not ignore values returned by functions: !=
DCL00-C	auxibinpac/src/pac_typedecl.cc	186	2	Const-qualify immutable objects: params_str
DCL00-C	auxibinpac/src/pac_typedecl.cc	188	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_typedecl.cc	208	2	Const-qualify immutable objects: proto
DCL01-C	auxibinpac/src/pac_typedecl.cc	223	42	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_typedecl.cc	227	2	Const-qualify immutable objects: params
DCL01-C	auxibinpac/src/pac_typedecl.cc	260	51	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_typedecl.cc	262	2	Const-qualify immutable objects: ret_val_0
DCL00-C	auxibinpac/src/pac_typedecl.cc	262	2	Const-qualify immutable objects: ret_val_1
DCL01-C	auxibinpac/src/pac_typedecl.cc	310	2	Do not reuse variable names in subscopes: env
DCL00-C	auxibinpac/src/pac_typedecl.cc	326	2	Const-qualify immutable objects: proto
DCL00-C	auxibinpac/src/pac_typedecl.cc	345	2	Const-qualify immutable objects: tmp
DCL00-C	auxibinpac/src/pac_typedecl.cc	363	2	Const-qualify immutable objects: func
DCL00-C	auxibinpac/src/pac_typedecl.cc	365	2	Const-qualify immutable objects: init_buffer_length
ERR08-CPP	auxibinpac/src/pac_typedecl.cc	369	3	Should throw a special-purpose exception object.
DCL01-C	auxibinpac/src/pac_typedecl.cc	377	38	Do not reuse variable names in subscopes: id
EXP12-C	auxibinpac/src/pac_typedecl.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_typedecl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_typedecl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_typedecl.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_typedecl.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_typedecl.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_typedecl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_typedecl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_typedecl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_typedecl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	basic_string is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_typedecl.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_typedecl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_typedecl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_typedecl.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_typedecl.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxibinpac/src/pac_typedecl.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	auxibinpac/src/pac_typedecl.cc	0	0	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: allocator < ::std::__cxx11::string >
DCL01-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::std::__cxx11::string , ::std::allocator < ::std::__cxx11::string >  >
MSC12-C	auxibinpac/src/pac_typedecl.cc	0	0	Detect and remove code that has no effect
INT01-C	auxibinpac/src/pac_typedecl.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_typedecl.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_typedecl.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_typedecl.cc	0	0	move_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_typedecl.cc	0	0	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_typedecl.cc	0	0	Do not ignore values returned by functions: !=
DCL02-C	auxibinpac/src/pac_withinput.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_withinput.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_withinput.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	9	36	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_withinput.cc	9	46	Do not reuse variable names in subscopes: type
DCL01-C	auxibinpac/src/pac_withinput.cc	9	65	Do not reuse variable names in subscopes: input
MSC12-C	auxibinpac/src/pac_withinput.cc	13	2	Detect and remove code that has no effect
MSC12-C	auxibinpac/src/pac_withinput.cc	14	2	Detect and remove code that has no effect
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: Field
INT13-C	auxibinpac/src/pac_withinput.cc	10	60	Use bitwise operators only on unsigned operands
INT13-C	auxibinpac/src/pac_withinput.cc	10	45	Use bitwise operators only on unsigned operands
MSC12-C	auxibinpac/src/pac_withinput.cc	62	2	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_withinput.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_withinput.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_withinput.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_withinput.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_withinput.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_withinput.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_withinput.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_withinput.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_withinput.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_withinput.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_withinput.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_withinput.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_withinput.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_withinput.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_output.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_output.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_output.cc	52	3	Use visually distinct identifiers: npos
OBJ32-CPP	auxibinpac/src/pac_output.cc	10	1	OutputException is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	17	1	Output is a non-explicit single-argument constructor.
ERR08-CPP	auxibinpac/src/pac_output.cc	21	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_output.cc	33	2	Const-qualify immutable objects: r
ERR08-CPP	auxibinpac/src/pac_output.cc	35	3	Should throw a special-purpose exception object.
DCL00-C	auxibinpac/src/pac_output.cc	41	2	Const-qualify immutable objects: ap
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_output.cc	65	2	Const-qualify immutable objects: ap
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_output.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_output.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_output.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_output.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_output.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_output.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_output.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_output.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_output.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_output.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_output.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_utils.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_utils.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_utils.cc	52	3	Use visually distinct identifiers: npos
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_utils.cc	28	2	Const-qualify immutable objects: ap
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL00-C	auxibinpac/src/pac_utils.cc	37	2	Const-qualify immutable objects: ap
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_utils.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_utils.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibinpac/src/pac_utils.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibinpac/src/pac_utils.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_utils.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_utils.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibinpac/src/pac_exception.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_exception.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_exception.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	map is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	7	46	Do not reuse variable names in subscopes: msg
OBJ32-CPP	auxibinpac/src/pac_exception.cc	24	1	ExceptionIDNotFound is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	24	52	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	29	1	ExceptionIDRedefinition is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	29	60	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	34	1	ExceptionIDNotEvaluated is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	34	60	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	39	1	ExceptionIDNotField is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	39	52	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	50	1	ExceptionCyclicDependence is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	50	64	Do not reuse variable names in subscopes: id
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
DCL01-C	auxibinpac/src/pac_exception.cc	55	70	Do not reuse variable names in subscopes: msg
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	60	1	ExceptionNonConstExpr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	60	58	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	65	1	ExceptionInvalidCaseSizeExpr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	65	72	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	72	1	ExceptionInvalidCaseLimitExpr is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	72	74	Do not reuse variable names in subscopes: expr
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: Exception
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_exception.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exception.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_exception.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_exception.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_exception.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_exception.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_exception.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exception.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_exception.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_exception.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_exception.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_exception.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_exception.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibinpac/src/pac_exception.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibinpac/src/pac_main.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibinpac/src/pac_main.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibinpac/src/pac_main.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibinpac/src/pac_main.cc	18	1	Use visually distinct identifiers: input_filename
DCL02-C	auxibinpac/src/pac_main.cc	20	1	Use visually distinct identifiers: FLAGS_pac_debug
DCL02-C	auxibinpac/src/pac_main.cc	21	1	Use visually distinct identifiers: FLAGS_quiet
DCL02-C	auxibinpac/src/pac_main.cc	23	1	Use visually distinct identifiers: FLAGS_include_directories
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibinpac/src/pac_main.cc	37	3	Const-qualify immutable objects: dir
STR37-C	auxibinpac/src/pac_main.cc	92	10	Arguments to character-handling functions must be representable as an unsigned char
STR37-C	auxibinpac/src/pac_main.cc	93	7	Arguments to character-handling functions must be representable as an unsigned char
DCL00-C	auxibinpac/src/pac_main.cc	104	3	Const-qualify immutable objects: tmp
DCL00-C	auxibinpac/src/pac_main.cc	110	2	Const-qualify immutable objects: basename
DCL01-C	auxibinpac/src/pac_main.cc	110	2	Do not reuse variable names in subscopes: basename
DCL00-C	auxibinpac/src/pac_main.cc	174	10	Const-qualify immutable objects: e
DCL00-C	auxibinpac/src/pac_main.cc	179	10	Const-qualify immutable objects: e
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
EXP36-C	auxibinpac/src/pac_main.cc	238	28	Do not convert pointers into more strictly aligned pointer types
MSC01-C	auxibinpac/src/pac_main.cc	240	3	Strive for logical completeness
EXP12-C	auxibinpac/src/pac_main.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_main.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_main.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_main.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibinpac/src/pac_main.cc	0	0	Public data member
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibinpac/src/pac_main.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibinpac/src/pac_main.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibinpac/src/pac_main.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_main.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibinpac/src/pac_main.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_main.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: allocator < ::std::__cxx11::string >
DCL01-C	auxibinpac/src/pac_main.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::std::__cxx11::string , ::std::allocator < ::std::__cxx11::string >  >
MSC12-C	auxibinpac/src/pac_main.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	auxibinpac/src/pac_main.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibinpac/src/pac_main.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibinpac/src/pac_main.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	move_iterator is a non-explicit single-argument constructor.
MSC12-C	auxibinpac/src/pac_main.cc	0	0	Detect and remove code that has no effect
EXP12-C	auxibinpac/src/pac_main.cc	0	0	Do not ignore values returned by functions: !=
OBJ32-CPP	auxibinpac/src/pac_main.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
DCL02-C	builauxil/bifcl/bif_parse.cc	83	3	Use visually distinct identifiers: value
DCL02-C	builauxil/bifcl/bif_parse.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	builauxil/bifcl/bif_parse.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	builauxil/bifcl/bif_parse.cc	1130	1	Use visually distinct identifiers: yydebug
DCL02-C	builauxil/bifcl/bif_parse.cc	1402	1	Use visually distinct identifiers: yylval
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	set is a non-explicit single-argument constructor.
DCL00-C	builauxil/bifcl/bif_parse.cc	84	2	Const-qualify immutable objects: varname
STR05-C	builauxil/bifcl/bif_parse.cc	148	1	Use pointers to const when referring to string literals
DCL01-C	builauxil/bifcl/bif_parse.cc	170	32	Do not reuse variable names in subscopes: type_name
DCL02-C	builauxil/bifcl/bif_parse.cc	170	32	Use visually distinct identifiers: type_name
DCL02-C	builauxil/bifcl/bif_parse.cc	170	32	Use visually distinct identifiers: type_name
DCL02-C	builauxil/bifcl/bif_parse.cc	170	32	Use visually distinct identifiers: type_name
DCL02-C	builauxil/bifcl/bif_parse.cc	170	32	Use visually distinct identifiers: type_name
DCL02-C	builauxil/bifcl/bif_parse.cc	170	32	Use visually distinct identifiers: type_name
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	vector is a non-explicit single-argument constructor.
DCL00-C	builauxil/bifcl/bif_parse.cc	190	2	Const-qualify immutable objects: len1
DCL00-C	builauxil/bifcl/bif_parse.cc	191	2	Const-qualify immutable objects: len2
EXP12-C	builauxil/bifcl/bif_parse.cc	265	5	Do not ignore values returned by functions: yywarn
DCL00-C	builauxil/bifcl/bif_parse.cc	1048	3	Const-qualify immutable objects: yyo
MSC12-C	builauxil/bifcl/bif_parse.cc	1049	3	Detect and remove code that has no effect
MSC12-C	builauxil/bifcl/bif_parse.cc	1056	3	Detect and remove code that has no effect
DCL13-C	builauxil/bifcl/bif_parse.cc	1080	55	Declare function parameters that are pointers to values not changed by the function as const: yytop
DCL00-C	builauxil/bifcl/bif_parse.cc	1085	7	Const-qualify immutable objects: yybot
DCL00-C	builauxil/bifcl/bif_parse.cc	1105	3	Const-qualify immutable objects: yylno
MSC12-C	builauxil/bifcl/bif_parse.cc	1385	3	Detect and remove code that has no effect
MSC12-C	builauxil/bifcl/bif_parse.cc	1391	3	Detect and remove code that has no effect
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
DCL00-C	builauxil/bifcl/bif_parse.cc	1484	7	Const-qualify immutable objects: yysize
INT01-C	builauxil/bifcl/bif_parse.cc	1520	44	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/bifcl/bif_parse.cc	1523	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/bifcl/bif_parse.cc	1523	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1523	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1523	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1523	9	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/bifcl/bif_parse.cc	1524	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/bifcl/bif_parse.cc	1524	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1524	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1524	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	1524	9	Use rsize_t or size_t for all integer values representing the size of an object
MEM34-C	builauxil/bifcl/bif_parse.cc	1527	11	Only free memory allocated dynamically
ARR37-C	builauxil/bifcl/bif_parse.cc	1532	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/bifcl/bif_parse.cc	1533	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/bifcl/bif_parse.cc	1538	11	Do not add or subtract an integer to a pointer to a non-array object
INT32-C	builauxil/bifcl/bif_parse.cc	1592	13	Ensure that operations on signed integers do not result in overflow
DCL00-C	builauxil/bifcl/bif_parse.cc	476	4	Const-qualify immutable objects: typeidx
DCL00-C	builauxil/bifcl/bif_parse.cc	699	4	Const-qualify immutable objects: implicit_arg
DCL00-C	builauxil/bifcl/bif_parse.cc	700	4	Const-qualify immutable objects: argc
MSC12-C	builauxil/bifcl/bif_parse.cc	2256	3	Detect and remove code that has no effect
EXP12-C	builauxil/bifcl/bif_parse.cc	2290	7	Do not ignore values returned by functions: yyerror
MSC12-C	builauxil/bifcl/bif_parse.cc	2364	3	Detect and remove code that has no effect
MSC12-C	builauxil/bifcl/bif_parse.cc	2398	7	Detect and remove code that has no effect
EXP12-C	builauxil/bifcl/bif_parse.cc	2434	3	Do not ignore values returned by functions: yyerror
ARR30-C	builauxil/bifcl/bif_parse.cc	2444	17	Do not form or use out-of-bounds pointers or array subscripts
MSC12-C	builauxil/bifcl/bif_parse.cc	2450	3	Detect and remove code that has no effect
MEM34-C	builauxil/bifcl/bif_parse.cc	2460	5	Only free memory allocated dynamically
DCL00-C	builauxil/bifcl/bif_parse.cc	797	2	Const-qualify immutable objects: msg_len
EXP12-C	builauxil/bifcl/bif_parse.cc	731	7	Do not ignore values returned by functions: __fill_a
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	builauxil/bifcl/bif_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/bifcl/bif_parse.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/bifcl/bif_parse.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	builauxil/bifcl/bif_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	builauxil/bifcl/bif_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_parse.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	pair is a non-explicit single-argument constructor.
EXP05-C	builauxil/bifcl/bif_parse.cc	75	16	Do not cast away a const qualification
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Alloc_node is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Alloc_node is a non-explicit single-argument constructor.
INT01-C	builauxil/bifcl/bif_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: allocator < ::BuiltinFuncArg* >
DCL01-C	builauxil/bifcl/bif_parse.cc	0	0	Do not reuse variable names in subscopes: _Vector_base < ::BuiltinFuncArg* , ::std::allocator < ::BuiltinFuncArg* >  >
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT01-C	builauxil/bifcl/bif_parse.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_parse.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_parse.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_parse.cc	0	0	move_iterator is a non-explicit single-argument constructor.
DCL05-C	builauxil/bifcl/bif_parse.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/bifcl/bif_parse.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	builauxil/bifcl/bif_parse.cc	422	14	Take care when converting from pointer to integer or integer to pointer
MSC12-C	builauxil/bifcl/bif_parse.cc	0	0	Detect and remove code that has no effect
DCL02-C	builauxil/bifcl/bif_lex.cc	271	1	Use visually distinct identifiers: yyleng
DCL02-C	builauxil/bifcl/bif_lex.cc	328	1	Use visually distinct identifiers: yyin
DCL02-C	builauxil/bifcl/bif_lex.cc	328	1	Use visually distinct identifiers: yyout
DCL02-C	builauxil/bifcl/bif_lex.cc	333	1	Use visually distinct identifiers: yylineno
DCL02-C	builauxil/bifcl/bif_lex.cc	553	1	Use visually distinct identifiers: yy_flex_debug
DCL02-C	builauxil/bifcl/bif_lex.cc	562	1	Use visually distinct identifiers: yytext
DCL02-C	builauxil/bifcl/bif_lex.cc	83	3	Use visually distinct identifiers: value
DCL02-C	builauxil/bifcl/bif_lex.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	builauxil/bifcl/bif_lex.cc	52	3	Use visually distinct identifiers: npos
DCL01-C	builauxil/bifcl/bif_lex.cc	201	2	Do not reuse variable names in subscopes: yy_n_chars
DCL01-C	builauxil/bifcl/bif_lex.cc	362	2	Do not reuse variable names in subscopes: yy_nxt
ARR30-C	builauxil/bifcl/bif_lex.cc	846	37	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/bifcl/bif_lex.cc	852	21	Do not form or use out-of-bounds pointers or array subscripts
DCL00-C	builauxil/bifcl/bif_lex.cc	115	2	Const-qualify immutable objects: t
DCL00-C	builauxil/bifcl/bif_lex.cc	1105	3	Const-qualify immutable objects: yy_amount_of_matched_text
MSC01-C	builauxil/bifcl/bif_lex.cc	1170	8	Strive for logical completeness
DCL00-C	builauxil/bifcl/bif_lex.cc	1299	5	Const-qualify immutable objects: new_size
DCL00-C	builauxil/bifcl/bif_lex.cc	1357	3	Const-qualify immutable objects: new_size
INT07-C	builauxil/bifcl/bif_lex.cc	1367	52	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/bifcl/bif_lex.cc	1368	56	Use only explicitly signed or unsigned char type for numeric values
ARR30-C	builauxil/bifcl/bif_lex.cc	1398	36	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/bifcl/bif_lex.cc	1426	35	Do not form or use out-of-bounds pointers or array subscripts
DCL00-C	builauxil/bifcl/bif_lex.cc	1497	4	Const-qualify immutable objects: offset
MSC01-C	builauxil/bifcl/bif_lex.cc	1500	4	Strive for logical completeness
DCL00-C	builauxil/bifcl/bif_lex.cc	1664	2	Const-qualify immutable objects: oerrno
INT07-C	builauxil/bifcl/bif_lex.cc	1700	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/bifcl/bif_lex.cc	1701	18	Use only explicitly signed or unsigned char type for numeric values
INT01-C	builauxil/bifcl/bif_lex.cc	1779	23	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/bifcl/bif_lex.cc	1784	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/bifcl/bif_lex.cc	1784	45	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	builauxil/bifcl/bif_lex.cc	1794	3	Const-qualify immutable objects: grow_size
INT01-C	builauxil/bifcl/bif_lex.cc	1799	22	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/bifcl/bif_lex.cc	1805	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/bifcl/bif_lex.cc	1805	66	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	builauxil/bifcl/bif_lex.cc	1882	42	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	builauxil/bifcl/bif_lex.cc	2048	5	Do not ignore values returned by functions: yy_init_globals
EXP09-C	builauxil/bifcl/bif_lex.cc	2080	11	malloc called using something other than sizeof()
MEM04-C	builauxil/bifcl/bif_lex.cc	2080	11	Do not perform zero length allocations
EXP09-C	builauxil/bifcl/bif_lex.cc	2093	9	malloc called using something other than sizeof()
MEM04-C	builauxil/bifcl/bif_lex.cc	2093	9	Do not perform zero length allocations
FIO42-C	builauxil/bifcl/bif_lex.cc	176	13	Close files when they are no longer needed
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	default_delete is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__uniq_ptr_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	unique_ptr is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	unique_ptr is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	unique_ptr is a non-explicit single-argument constructor.
DCL00-C	builauxil/bifcl/bif_lex.cc	203	2	Const-qualify immutable objects: n
DCL00-C	builauxil/bifcl/bif_lex.cc	204	2	Const-qualify immutable objects: auto_gen_comment_buf
DCL00-C	builauxil/bifcl/bif_lex.cc	205	2	Const-qualify immutable objects: auto_gen_comment
INT01-C	builauxil/bifcl/bif_lex.cc	225	36	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_lex.cc	226	47	Use rsize_t or size_t for all integer values representing the size of an object
STR37-C	builauxil/bifcl/bif_lex.cc	230	10	Arguments to character-handling functions must be representable as an unsigned char
INT01-C	builauxil/bifcl/bif_lex.cc	250	45	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	builauxil/bifcl/bif_lex.cc	251	25	Use only explicitly signed or unsigned char type for numeric values
INT01-C	builauxil/bifcl/bif_lex.cc	251	20	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_lex.cc	259	54	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	builauxil/bifcl/bif_lex.cc	260	42	Use only explicitly signed or unsigned char type for numeric values
INT01-C	builauxil/bifcl/bif_lex.cc	260	37	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	builauxil/bifcl/bif_lex.cc	331	30	Do not convert pointers into more strictly aligned pointer types
DCL00-C	builauxil/bifcl/bif_lex.cc	376	4	Const-qualify immutable objects: n
DCL00-C	builauxil/bifcl/bif_lex.cc	377	4	Const-qualify immutable objects: auto_gen_comment_buf
DCL00-C	builauxil/bifcl/bif_lex.cc	378	4	Const-qualify immutable objects: auto_gen_comment
EXP12-C	builauxil/bifcl/bif_lex.cc	400	3	Do not ignore values returned by functions: yyparse
EXP12-C	builauxil/bifcl/bif_lex.cc	441	2	Do not ignore values returned by functions: unlink
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/bifcl/bif_lex.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/bifcl/bif_lex.cc	0	0	Public data member
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/bifcl/bif_lex.cc	0	0	Use typedefs to improve code readability
INT01-C	builauxil/bifcl/bif_lex.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_lex.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_lex.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	builauxil/bifcl/bif_lex.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/bifcl/bif_lex.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/bifcl/bif_lex.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes: default_delete < char [] >
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	__uniq_ptr_impl is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base < deleter_type >  is a non-explicit single-argument constructor.
DCL01-C	builauxil/bifcl/bif_lex.cc	0	0	Do not reuse variable names in subscopes: default_delete < char [] >
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	_Head_base < pointer & >  is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/bifcl/bif_lex.cc	0	0	unique_ptr is a non-explicit single-argument constructor.
INT01-C	builauxil/bifcl/bif_lex.cc	110	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxibifcl/bif_arg.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibifcl/bif_arg.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibifcl/bif_arg.cc	52	3	Use visually distinct identifiers: npos
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibifcl/bif_arg.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/bif_arg.cc	0	0	Public data member
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibifcl/bif_arg.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibifcl/bif_arg.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibifcl/bif_arg.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibifcl/bif_arg.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibifcl/bif_arg.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibifcl/bif_arg.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/bif_arg.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/bif_arg.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibifcl/bif_arg.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibifcl/module_util.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibifcl/module_util.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibifcl/module_util.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxibifcl/module_util.cc	16	2	Const-qualify immutable objects: module_name
DCL00-C	auxibifcl/module_util.cc	17	2	Const-qualify immutable objects: pos
DCL00-C	auxibifcl/module_util.cc	29	2	Const-qualify immutable objects: var_name
DCL00-C	auxibifcl/module_util.cc	30	2	Const-qualify immutable objects: pos
DCL00-C	auxibifcl/module_util.cc	62	2	Const-qualify immutable objects: full_name
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibifcl/module_util.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char  >
OBJ32-CPP	auxibifcl/module_util.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibifcl/module_util.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibifcl/module_util.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < wchar_t  >
OBJ32-CPP	auxibifcl/module_util.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibifcl/module_util.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibifcl/module_util.cc	0	0	Public data member
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibifcl/module_util.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibifcl/module_util.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
INT01-C	auxibifcl/module_util.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibifcl/module_util.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char16_t  >
OBJ32-CPP	auxibifcl/module_util.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
INT01-C	auxibifcl/module_util.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibifcl/module_util.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibifcl/module_util.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibifcl/module_util.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibifcl/module_util.cc	0	0	Do not reuse variable names in subscopes: allocator < char32_t  >
OBJ32-CPP	auxibifcl/module_util.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxiparaglob/src/ahocorasick/ahocorasick.c	37	1	Use typedefs to improve code readability
EXP34-C	auxiparaglob/src/ahocorasick/ahocorasick.c	61	37	Ensure pointer is valid before dereferencing it
INT01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	104	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	118	36	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxiparaglob/src/ahocorasick/ahocorasick.c	275	5	Do not ignore values returned by functions: ac_trie_search
MEM01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	295	5	Store a new value in pointers immediately after free()
DCL05-C	auxiparaglob/src/ahocorasick/ahocorasick.c	408	1	Use typedefs to improve code readability
INT01-C	auxiparaglob/src/ahocorasick/node.c	126	30	Use rsize_t or size_t for all integer values representing the size of an object
INT14-C	auxiparaglob/src/ahocorasick/node.c	130	13	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxiparaglob/src/ahocorasick/node.c	133	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	135	23	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxiparaglob/src/ahocorasick/node.c	244	9	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	249	9	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	255	17	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	310	10	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	310	43	Do not cast away a const qualification
INT01-C	auxiparaglob/src/ahocorasick/node.c	373	35	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	373	50	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	381	33	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/node.c	381	33	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/node.c	403	32	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/node.c	403	32	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/node.c	411	32	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxiparaglob/src/ahocorasick/node.c	467	12	Use bitwise operators only on unsigned operands
MSC01-C	auxiparaglob/src/ahocorasick/node.c	482	13	Strive for logical completeness
DCL01-C	auxiparaglob/src/ahocorasick/mpool.c	41	5	Do not reuse variable names in subscopes: free
EXP34-C	auxiparaglob/src/ahocorasick/mpool.c	65	36	Ensure pointer is valid before dereferencing it
EXP34-C	auxiparaglob/src/ahocorasick/mpool.c	84	11	Ensure pointer is valid before dereferencing it
MEM34-C	auxiparaglob/src/ahocorasick/mpool.c	112	6	Only free memory allocated dynamically
MEM01-C	auxiparaglob/src/ahocorasick/mpool.c	116	5	Store a new value in pointers immediately after free()
INT14-C	auxiparaglob/src/ahocorasick/mpool.c	135	10	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	135	24	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	135	18	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	152	56	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	172	36	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxiparaglob/src/ahocorasick/mpool.c	175	26	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxiparaglob/src/ahocorasick/replace.c	103	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	106	46	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxiparaglob/src/ahocorasick/replace.c	154	10	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/replace.c	155	10	Do not cast away a const qualification
INT01-C	auxiparaglob/src/ahocorasick/replace.c	179	27	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/replace.c	179	27	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/replace.c	241	31	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	243	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	255	34	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	257	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	289	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	289	57	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	302	31	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/replace.c	302	31	Ensure that return values are compared against the proper type
DCL00-C	auxiparaglob/src/ahocorasick/replace.c	373	5	Const-qualify immutable objects: base_position
DCL01-C	auxiparaglob/src/ahocorasick/replace.c	406	5	Do not reuse variable names in subscopes: index
DCL00-C	auxiparaglob/src/ahocorasick/replace.c	408	5	Const-qualify immutable objects: base_position
INT01-C	auxiparaglob/src/ahocorasick/replace.c	414	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	416	31	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	432	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	435	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxiparaglob/src/ahocorasick/ahocorasick.c	37	1	Use typedefs to improve code readability
EXP34-C	auxiparaglob/src/ahocorasick/ahocorasick.c	61	37	Ensure pointer is valid before dereferencing it
INT01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	104	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	118	36	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxiparaglob/src/ahocorasick/ahocorasick.c	275	5	Do not ignore values returned by functions: ac_trie_search
MEM01-C	auxiparaglob/src/ahocorasick/ahocorasick.c	295	5	Store a new value in pointers immediately after free()
DCL05-C	auxiparaglob/src/ahocorasick/ahocorasick.c	408	1	Use typedefs to improve code readability
INT01-C	auxiparaglob/src/ahocorasick/node.c	126	30	Use rsize_t or size_t for all integer values representing the size of an object
INT14-C	auxiparaglob/src/ahocorasick/node.c	130	13	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxiparaglob/src/ahocorasick/node.c	133	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	135	23	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxiparaglob/src/ahocorasick/node.c	244	9	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	249	9	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	255	17	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	310	10	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/node.c	310	43	Do not cast away a const qualification
INT01-C	auxiparaglob/src/ahocorasick/node.c	373	35	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	373	50	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/node.c	381	33	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/node.c	381	33	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/node.c	403	32	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/node.c	403	32	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/node.c	411	32	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxiparaglob/src/ahocorasick/node.c	467	12	Use bitwise operators only on unsigned operands
MSC01-C	auxiparaglob/src/ahocorasick/node.c	482	13	Strive for logical completeness
DCL01-C	auxiparaglob/src/ahocorasick/mpool.c	41	5	Do not reuse variable names in subscopes: free
EXP34-C	auxiparaglob/src/ahocorasick/mpool.c	65	36	Ensure pointer is valid before dereferencing it
EXP34-C	auxiparaglob/src/ahocorasick/mpool.c	84	11	Ensure pointer is valid before dereferencing it
MEM34-C	auxiparaglob/src/ahocorasick/mpool.c	112	6	Only free memory allocated dynamically
MEM01-C	auxiparaglob/src/ahocorasick/mpool.c	116	5	Store a new value in pointers immediately after free()
INT14-C	auxiparaglob/src/ahocorasick/mpool.c	135	10	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	135	24	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	135	18	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	152	56	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/mpool.c	172	36	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxiparaglob/src/ahocorasick/mpool.c	175	26	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxiparaglob/src/ahocorasick/replace.c	103	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	106	46	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxiparaglob/src/ahocorasick/replace.c	154	10	Do not cast away a const qualification
EXP05-C	auxiparaglob/src/ahocorasick/replace.c	155	10	Do not cast away a const qualification
INT01-C	auxiparaglob/src/ahocorasick/replace.c	179	27	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/replace.c	179	27	Ensure that return values are compared against the proper type
INT01-C	auxiparaglob/src/ahocorasick/replace.c	241	31	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	243	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	255	34	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	257	52	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	289	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	289	57	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	302	31	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxiparaglob/src/ahocorasick/replace.c	302	31	Ensure that return values are compared against the proper type
DCL00-C	auxiparaglob/src/ahocorasick/replace.c	373	5	Const-qualify immutable objects: base_position
DCL01-C	auxiparaglob/src/ahocorasick/replace.c	406	5	Do not reuse variable names in subscopes: index
DCL00-C	auxiparaglob/src/ahocorasick/replace.c	408	5	Const-qualify immutable objects: base_position
INT01-C	auxiparaglob/src/ahocorasick/replace.c	414	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	416	31	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	432	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxiparaglob/src/ahocorasick/replace.c	435	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	279	3	Use visually distinct identifiers: num
DCL02-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	282	3	Use visually distinct identifiers: den
DCL02-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/caf/libcaf_core/src/actor_profiler.cpp	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/execution_unit.cpp	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/caf/libcaf_core/src/execution_unit.cpp	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibroker/caf/libcaf_core/src/ref_counted.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/ref_counted.cpp	2091	3	Use visually distinct identifiers: alignment_value
INT36-C	auxibroker/caf/libcaf_core/src/ref_counted.cpp	355	6	Take care when converting from pointer to integer or integer to pointer
INT36-C	auxibroker/caf/libcaf_core/src/ref_counted.cpp	363	6	Take care when converting from pointer to integer or integer to pointer
DCL02-C	auxibroker/caf/libcaf_core/src/resumable.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/resumable.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/resumable.cpp	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/resumable.cpp	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/caf/libcaf_core/src/resumable.cpp	731	7	Do not ignore values returned by functions: __fill_a
INT36-C	auxibroker/caf/libcaf_core/src/resumable.cpp	355	6	Take care when converting from pointer to integer or integer to pointer
INT36-C	auxibroker/caf/libcaf_core/src/resumable.cpp	363	6	Take care when converting from pointer to integer or integer to pointer
DCL02-C	auxibroker/caf/libcaf_core/src/term.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/term.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/term.cpp	52	3	Use visually distinct identifiers: npos
DCL02-C	auxibroker/caf/libcaf_core/src/term.cpp	793	5	Use visually distinct identifiers: id
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
EXP12-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not ignore values returned by functions: <<
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/term.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/term.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/term.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/thread_hook.cpp	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/caf/libcaf_core/src/thread_hook.cpp	731	7	Do not ignore values returned by functions: __fill_a
DCL02-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Public data member
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/caf/libcaf_core/src/tracing_data_factory.cpp	731	7	Do not ignore values returned by functions: __fill_a
DCL00-C	auxibroker/caf/cmake/dummy.cpp	8	1	Const-qualify immutable objects: dummy
DCL00-C	auxibroker/caf/cmake/dummy.cpp	8	1	Const-qualify immutable objects: dummy
DCL00-C	auxibroker/caf/cmake/dummy.cpp	8	1	Const-qualify immutable objects: dummy
DCL02-C	auxibroker/src/shutdown_options.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/src/shutdown_options.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/src/shutdown_options.cc	52	3	Use visually distinct identifiers: npos
DCL00-C	auxibroker/src/shutdown_options.cc	21	3	Const-qualify immutable objects: result
DCL00-C	auxibroker/src/shutdown_options.cc	22	8	Const-qualify immutable objects: flag
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/src/shutdown_options.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/shutdown_options.cc	0	0	Public data member
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/shutdown_options.cc	0	0	Use typedefs to improve code readability
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
INT01-C	auxibroker/src/shutdown_options.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxibroker/src/shutdown_options.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxibroker/src/shutdown_options.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/shutdown_options.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxibroker/src/time.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxibroker/src/time.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxibroker/src/time.cc	279	3	Use visually distinct identifiers: num
DCL02-C	auxibroker/src/time.cc	282	3	Use visually distinct identifiers: den
DCL02-C	auxibroker/src/time.cc	52	3	Use visually distinct identifiers: npos
DCL00-C	auxibroker/src/time.cc	35	3	Const-qualify immutable objects: d
OBJ32-CPP	auxibroker/src/time.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/time.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/src/time.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/src/time.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/time.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxibroker/src/time.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxibroker/src/time.cc	0	0	Public data member
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxibroker/src/time.cc	0	0	Use typedefs to improve code readability
INT01-C	auxibroker/src/time.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/src/time.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/src/time.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/time.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxibroker/src/time.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxibroker/src/time.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxibroker/src/time.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxibroker/src/time.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxibroker/src/time.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxibroker/src/time.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxibroker/src/time.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	64	21	Declare function parameters that are pointers to values not changed by the function as const: sp
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	66	37	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	66	39	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	66	54	Use rsize_t or size_t for all integer values representing the size of an object
DCL13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	71	24	Declare function parameters that are pointers to values not changed by the function as const: sp
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	73	28	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	73	47	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	80	16	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	97	5	Do not ignore values returned by functions: memset
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	100	8	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	100	8	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	100	11	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	100	29	Use rsize_t or size_t for all integer values representing the size of an object
EXP11-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	101	20	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	107	16	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	133	5	Do not ignore values returned by functions: memset
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	134	53	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	134	33	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	140	5	Const-qualify immutable objects: sz
MEM01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	154	5	Store a new value in pointers immediately after free()
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	163	9	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	163	9	Ensure that return values are compared against the proper type
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	202	11	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	202	34	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	211	9	Const-qualify immutable objects: pgsz
INT33-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	212	43	Ensure that division and remainder operations do not result in divide-by-zero errors
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	212	38	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	213	19	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	215	19	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	221	19	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	225	19	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	226	17	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	229	19	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	247	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	248	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	253	20	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	254	37	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	255	9	Const-qualify immutable objects: pgsz
INT33-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	256	54	Ensure that division and remainder operations do not result in divide-by-zero errors
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	256	49	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	257	24	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	259	13	Do not ignore values returned by functions: protect_page
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	262	24	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	263	13	Do not ignore values returned by functions: protect_page
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	286	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	287	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	288	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	289	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	289	20	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	290	15	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	317	36	Use bitwise operators only on unsigned operands
EXP32-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	317	10	Do not access a volatile object through a nonvolatile reference
EXP36-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	317	33	Do not convert pointers into more strictly aligned pointer types
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	334	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	336	16	Const-qualify immutable objects: hu_c_implicit_cast_val__COUNTER__
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	337	5	Const-qualify immutable objects: arg_align
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	342	5	Const-qualify immutable objects: pgsz
INT01-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	343	9	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	346	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	353	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	355	20	Const-qualify immutable objects: hu_c_implicit_cast_val__COUNTER__
EXP11-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	357	20	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	365	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	370	9	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	371	21	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	372	23	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	372	26	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	374	23	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	375	21	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	375	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	383	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/fiber/src/fiber.c	383	27	Use bitwise operators only on unsigned operands
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	13	30	Ensure pointer is valid before dereferencing it
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	32	9	Do not ignore values returned by functions: vec_ccl_set
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	39	5	Store a new value in pointers immediately after free()
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	53	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	56	9	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	75	5	Const-qualify immutable objects: p2
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	93	5	Const-qualify immutable objects: existing
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	98	9	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	104	5	Do not ignore values returned by functions: vec_ccl_set
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	125	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	142	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	147	17	Const-qualify immutable objects: nr1
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	148	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	150	17	Const-qualify immutable objects: nr2
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	151	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	156	17	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	157	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	163	13	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	164	13	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	168	13	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	169	13	Do not ignore values returned by functions: set_char_range_insert
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	187	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	202	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	204	9	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	207	17	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	208	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	212	17	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	213	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	217	17	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	218	17	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	222	17	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	223	17	Do not ignore values returned by functions: set_char_range_insert
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	244	44	Ensure pointer is valid before dereferencing it
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	261	5	Store a new value in pointers immediately after free()
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	271	9	Do not ignore values returned by functions: fputc
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	284	5	Const-qualify immutable objects: r
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	285	5	Do not ignore values returned by functions: set_char_range_insert
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	333	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	336	5	Do not ignore values returned by functions: vec_std_ccl_set
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	352	5	Detect and remove code that has no effect
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	484	9	Use visually distinct identifiers: r
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	359	9	Const-qualify immutable objects: r
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	359	9	Do not reuse variable names in subscopes: r
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	360	9	Do not ignore values returned by functions: set_char_range_insert
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	366	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	368	9	Const-qualify immutable objects: nr
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	369	9	Do not ignore values returned by functions: set_char_range_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	373	5	Const-qualify immutable objects: final
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	374	5	Do not ignore values returned by functions: set_char_range_insert
INT13-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	384	22	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	390	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	391	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	455	17	Do not ignore values returned by functions: _ccl_group_add_to
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	477	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	484	9	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/ccl.c	493	5	Do not ignore values returned by functions: fputc
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	61	5	Store a new value in pointers immediately after free()
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	66	5	Const-qualify immutable objects: id
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	67	5	Do not ignore values returned by functions: vec_dfa_state_elem_append
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	69	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	72	5	Const-qualify immutable objects: k
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Const-qualify immutable objects: max
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Store a new value in pointers immediately after free()
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Const-qualify immutable objects: elems
FLP34-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Ensure that floating point conversions are within range of the new type
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Const-qualify immutable objects: idx
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Do not ignore values returned by functions: vec_nid_tag_op_set
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	91	1	Do not ignore values returned by functions: memset
DCL13-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	93	75	Declare function parameters that are pointers to values not changed by the function as const: dfa
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	104	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	112	17	Do not ignore values returned by functions: set_nfa_state_id_insert
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	118	21	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	120	21	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	122	25	Const-qualify immutable objects: ntop
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	123	25	Do not ignore values returned by functions: vec_nid_tag_op_append
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	129	21	Const-qualify immutable objects: ntop
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	130	21	Do not ignore values returned by functions: vec_nid_tag_op_append
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	141	5	Detect and remove code that has no effect
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	511	9	Use visually distinct identifiers: delem
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	162	17	Const-qualify immutable objects: delem
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	162	17	Do not reuse variable names in subscopes: delem
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	163	17	Do not ignore values returned by functions: set_dfa_state_elem_insert
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	511	9	Use visually distinct identifiers: delem
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	168	17	Const-qualify immutable objects: nntop
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	169	17	Do not ignore values returned by functions: vec_tag_op_append
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	192	5	Do not ignore values returned by functions: vec_dfa_state_set
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	237	9	Const-qualify immutable objects: trans
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	238	9	Do not ignore values returned by functions: vec_dfa_transition_append
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	242	13	Do not ignore values returned by functions: dfa_state_compute
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	264	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	277	17	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	279	21	Const-qualify immutable objects: top
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	280	21	Do not ignore values returned by functions: vec_tag_op_append
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	287	13	Const-qualify immutable objects: dacc
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	288	13	Do not ignore values returned by functions: vec_dfa_accept_append
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	294	5	Do not ignore values returned by functions: vec_dfa_state_set
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	306	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	308	5	Do not ignore values returned by functions: dfa_state_compute
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	311	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	347	5	Const-qualify immutable objects: ielem
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	348	5	Do not ignore values returned by functions: set_dfa_state_elem_insert
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	355	9	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	360	13	Const-qualify immutable objects: top
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	361	13	Do not ignore values returned by functions: vec_tag_op_append
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	367	5	Const-qualify immutable objects: lazy
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	367	30	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	368	5	Do not ignore values returned by functions: dfa_state_compute
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	370	23	Use bitwise operators only on unsigned operands
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	402	5	Store a new value in pointers immediately after free()
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	413	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	415	18	Use bitwise operators only on unsigned operands
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	509	9	Use visually distinct identifiers: dstate
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	509	9	Use visually distinct identifiers: dstate
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	504	16	Use bitwise operators only on unsigned operands
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	509	9	Do not reuse variable names in subscopes: dstate
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	511	9	Detect and remove code that has no effect
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	509	9	Use visually distinct identifiers: dstate
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa.c	509	9	Use visually distinct identifiers: dstate
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	11	15	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	12	14	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	14	15	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	15	14	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	17	18	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	29	5	Detect and remove code that has no effect
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	40	35	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	46	5	Const-qualify immutable objects: old_size
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	46	26	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	47	5	Const-qualify immutable objects: new_size
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	47	32	Use rsize_t or size_t for all integer values representing the size of an object
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	49	15	Ensure pointer is valid before dereferencing it
MEM08-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	49	15	Use realloc() only to resize dynamically allocated arrays
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	50	5	Do not ignore values returned by functions: memset
EXP36-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	62	37	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	69	37	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	74	42	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	74	51	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	82	5	Const-qualify immutable objects: oldct
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	83	5	Const-qualify immutable objects: newct
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	117	31	Use bitwise operators only on unsigned operands
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	132	9	Use visually distinct identifiers: nacc
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	118	13	Const-qualify immutable objects: nacc
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	118	13	Do not reuse variable names in subscopes: nacc
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	119	13	Do not ignore values returned by functions: set_match_accept_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	132	9	Const-qualify immutable objects: nacc
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	138	9	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	145	13	Const-qualify immutable objects: olen
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	146	13	Const-qualify immutable objects: nlen
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	170	13	Do not ignore values returned by functions: set_match_accept_remove
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	171	13	Do not ignore values returned by functions: set_match_accept_insert
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	199	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	204	57	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	216	30	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	218	9	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	235	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	260	27	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	273	9	Const-qualify immutable objects: succ_id
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	286	31	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	294	27	Use bitwise operators only on unsigned operands
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	304	37	Ensure pointer is valid before dereferencing it
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-std.c	308	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	12	15	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	13	14	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	15	15	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	16	14	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	18	18	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	30	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	46	27	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	61	9	Const-qualify immutable objects: succ_id
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	67	31	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	71	13	Const-qualify immutable objects: aid
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	73	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	80	31	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	87	27	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	92	9	Const-qualify immutable objects: aid
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	94	31	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/dfa-interpreter-min.c	107	23	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	9	5	Const-qualify immutable objects: cflags
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	11	20	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	14	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	17	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	25	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	26	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	28	20	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	29	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	31	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	32	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	34	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	36	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	37	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	39	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	40	17	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	48	20	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	51	31	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	61	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	69	9	Const-qualify immutable objects: len
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	90	30	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	100	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	103	24	Use bitwise operators only on unsigned operands
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	396	9	Use visually distinct identifiers: acc
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	109	13	Const-qualify immutable objects: acc
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	109	13	Do not reuse variable names in subscopes: acc
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	117	5	Const-qualify immutable objects: acc
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	137	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	140	24	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	145	9	Const-qualify immutable objects: rc
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	174	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	175	16	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	187	5	Const-qualify immutable objects: options
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	219	5	Const-qualify immutable objects: rc
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	237	23	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	248	26	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	248	68	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	258	5	Const-qualify immutable objects: acc
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	260	5	Detect and remove code that has no effect
INT01-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	264	20	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	267	19	Do not form or use out-of-bounds pointers or array subscripts
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	280	17	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	280	31	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	289	5	Do not ignore values returned by functions: jrx_match_state_init
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	291	5	Const-qualify immutable objects: first
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	291	45	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	292	5	Const-qualify immutable objects: last
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	292	44	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	344	33	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	344	28	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	365	33	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	377	31	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	383	5	Const-qualify immutable objects: can
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	384	27	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	392	28	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/jrx.c	396	9	Const-qualify immutable objects: acc
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	52	5	Store a new value in pointers immediately after free()
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	61	5	Do not ignore values returned by functions: set_nfa_state_id_insert
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	80	5	Do not ignore values returned by functions: vec_nfa_state_set
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	89	9	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	90	9	Const-qualify immutable objects: ntrans
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	92	9	Do not ignore values returned by functions: vec_nfa_transition_append
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	101	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	102	5	Const-qualify immutable objects: ntrans
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	103	5	Do not ignore values returned by functions: vec_nfa_transition_append
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	123	46	Ensure pointer is valid before dereferencing it
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	145	5	Store a new value in pointers immediately after free()
EXP34-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	150	30	Ensure pointer is valid before dereferencing it
MEM01-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	170	5	Store a new value in pointers immediately after free()
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	175	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	177	5	Const-qualify immutable objects: acc
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	182	5	Do not ignore values returned by functions: vec_nfa_accept_append
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	192	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	208	5	Const-qualify immutable objects: t1
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	209	5	Const-qualify immutable objects: t2
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	211	5	Do not ignore values returned by functions: set_tag_insert
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	212	5	Do not ignore values returned by functions: set_tag_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	214	5	Const-qualify immutable objects: nnfa
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	222	5	Const-qualify immutable objects: nfa
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	235	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	253	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	264	5	Const-qualify immutable objects: nfa
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	276	5	Detect and remove code that has no effect
DCL05-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	324	1	Use typedefs to improve code readability
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	334	5	Do not ignore values returned by functions: set_nfa_state_id_insert
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	354	13	Const-qualify immutable objects: nacc
INT13-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	354	51	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	355	13	Do not ignore values returned by functions: vec_nfa_accept_append
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	371	17	Do not ignore values returned by functions: set_tag_join
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	374	13	Const-qualify immutable objects: t
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	375	13	Do not ignore values returned by functions: vec_nfa_transition_append
INT13-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	392	51	Use bitwise operators only on unsigned operands
DCL02-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	445	9	Use visually distinct identifiers: t
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	414	17	Const-qualify immutable objects: t
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	414	17	Do not reuse variable names in subscopes: t
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	416	17	Do not ignore values returned by functions: vec_nfa_transition_append
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	463	5	Do not ignore values returned by functions: RE_lex_init
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	465	5	Do not ignore values returned by functions: RE__scan_bytes
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	471	5	Const-qualify immutable objects: i
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	473	5	Do not ignore values returned by functions: RE_lex_destroy
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	491	5	Detect and remove code that has no effect
INT13-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	497	23	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	502	23	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	530	18	Use bitwise operators only on unsigned operands
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	545	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	595	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	598	9	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/nfa.c	608	9	Do not ignore values returned by functions: fputc
INT13-C	auxispicy/spicy/3rdparty/justrx/src/util.c	49	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/util.c	49	50	Use bitwise operators only on unsigned operands
INT05-C	auxispicy/spicy/3rdparty/justrx/src/util.c	53	14	Do not use input functions to convert character data if they cannot handle all possible inputs
INT13-C	auxispicy/spicy/3rdparty/justrx/src/util.c	67	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/util.c	67	50	Use bitwise operators only on unsigned operands
INT05-C	auxispicy/spicy/3rdparty/justrx/src/util.c	71	14	Do not use input functions to convert character data if they cannot handle all possible inputs
DCL13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1020	53	Declare function parameters that are pointers to values not changed by the function as const: yyvaluep
DCL13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1020	69	Declare function parameters that are pointers to values not changed by the function as const: scanner
DCL13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1020	95	Declare function parameters that are pointers to values not changed by the function as const: nfactx
DCL13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1020	113	Declare function parameters that are pointers to values not changed by the function as const: nfa
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1022	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1023	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1024	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1025	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1031	3	Detect and remove code that has no effect
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1128	7	Const-qualify immutable objects: yysize
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1164	44	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1167	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1167	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1167	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1167	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1167	9	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1168	9	Do not ignore values returned by functions: __builtin_memcpy
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1168	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1168	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1168	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1168	9	Use rsize_t or size_t for all integer values representing the size of an object
MEM34-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1171	11	Only free memory allocated dynamically
ARR37-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1176	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1177	15	Do not add or subtract an integer to a pointer to a non-array object
ARR37-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1182	11	Do not add or subtract an integer to a pointer to a non-array object
INT32-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1236	13	Ensure that operations on signed integers do not result in overflow
INT13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	61	40	Use bitwise operators only on unsigned operands
INT14-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	104	25	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	104	50	Use bitwise operators only on unsigned operands
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1513	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1621	3	Detect and remove code that has no effect
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1655	7	Detect and remove code that has no effect
ARR30-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1701	17	Do not form or use out-of-bounds pointers or array subscripts
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1707	3	Detect and remove code that has no effect
MEM34-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-parse.c	1717	5	Only free memory allocated dynamically
DCL01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	571	2	Do not reuse variable names in subscopes: yy_nxt
ARR30-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1037	37	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1043	21	Do not form or use out-of-bounds pointers or array subscripts
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1051	3	Use only explicitly signed or unsigned char type for numeric values
INT05-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	34	17	Use strtol() or a related function to convert a string token to an integer
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	39	1	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	60	1	Use only explicitly signed or unsigned char type for numeric values
INT05-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	69	17	Use strtol() or a related function to convert a string token to an integer
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1226	3	Const-qualify immutable objects: yy_amount_of_matched_text
MSC01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1291	8	Strive for logical completeness
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1421	5	Const-qualify immutable objects: new_size
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1479	3	Const-qualify immutable objects: new_size
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1489	55	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1490	59	Use only explicitly signed or unsigned char type for numeric values
ARR30-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1521	36	Do not form or use out-of-bounds pointers or array subscripts
ARR30-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1550	35	Do not form or use out-of-bounds pointers or array subscripts
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1553	2	Detect and remove code that has no effect
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1582	21	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1586	4	Const-qualify immutable objects: offset
MSC01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1589	4	Strive for logical completeness
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1629	19	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1757	2	Const-qualify immutable objects: oerrno
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1795	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1796	18	Use only explicitly signed or unsigned char type for numeric values
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1852	31	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1877	23	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1882	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1882	48	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1884	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1889	61	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1892	3	Const-qualify immutable objects: grow_size
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1894	16	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1894	43	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1897	22	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1903	3	Do not ignore values returned by functions: memset
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1903	72	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1904	28	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	1980	42	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2000	2	Const-qualify immutable objects: yyg
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2001	2	Detect and remove code that has no effect
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2202	5	Do not ignore values returned by functions: memset
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2234	5	Do not ignore values returned by functions: memset
EXP12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2296	5	Do not ignore values returned by functions: yy_init_globals
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2333	2	Const-qualify immutable objects: yyg
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2334	2	Detect and remove code that has no effect
EXP09-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2335	9	malloc called using something other than sizeof()
MEM04-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2335	9	Do not perform zero length allocations
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2340	2	Const-qualify immutable objects: yyg
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2341	2	Detect and remove code that has no effect
EXP09-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2350	9	malloc called using something other than sizeof()
MEM04-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2350	9	Do not perform zero length allocations
DCL00-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2355	2	Const-qualify immutable objects: yyg
MSC12-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	2356	2	Detect and remove code that has no effect
EXP36-C	builauxil/spicy/spicy/3rdparty/justrx/justrx/autogen/re-scan.c	89	39	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	56	1	Use visually distinct identifiers: utf8proc_utf8class
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	144	30	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	153	49	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	153	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	70	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	47	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	25	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	184	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	185	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	190	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	191	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	192	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	195	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	196	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	197	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	198	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	215	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	216	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	219	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	220	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	221	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	224	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	225	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	226	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	227	14	Avoid performing bitwise and arithmetic operations on the same data
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	299	5	Const-qualify immutable objects: break_permitted
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	345	44	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	366	5	Const-qualify immutable objects: entry_cp
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	378	3	Const-qualify immutable objects: cl
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	384	3	Const-qualify immutable objects: cu
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	390	3	Const-qualify immutable objects: cu
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	433	34	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	493	34	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	501	5	Const-qualify immutable objects: tbc
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	561	46	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	565	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	589	52	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	589	34	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	664	11	Const-qualify immutable objects: sidx
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	669	27	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	669	64	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	738	66	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	752	65	Use rsize_t or size_t for all integer values representing the size of an object
EXP11-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	755	13	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	761	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	768	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	775	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	782	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	789	3	Do not ignore values returned by functions: utf8proc_map
DCL02-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	56	1	Use visually distinct identifiers: utf8proc_utf8class
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	144	30	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	153	49	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	153	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	70	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	47	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	169	25	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	184	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	185	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	190	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	191	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	192	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	195	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	196	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	197	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	198	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	215	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	216	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	219	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	220	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	221	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	224	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	225	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	226	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	227	14	Avoid performing bitwise and arithmetic operations on the same data
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	299	5	Const-qualify immutable objects: break_permitted
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	345	44	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	366	5	Const-qualify immutable objects: entry_cp
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	378	3	Const-qualify immutable objects: cl
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	384	3	Const-qualify immutable objects: cu
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	390	3	Const-qualify immutable objects: cu
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	433	34	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	493	34	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	501	5	Const-qualify immutable objects: tbc
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	561	46	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	565	35	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	589	52	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	589	34	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	664	11	Const-qualify immutable objects: sidx
INT14-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	669	27	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	669	64	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	738	66	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	752	65	Use rsize_t or size_t for all integer values representing the size of an object
EXP11-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	755	13	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	761	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	768	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	775	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	782	3	Do not ignore values returned by functions: utf8proc_map
EXP12-C	auxispicy/spicy/3rdparty/utf8proc/utf8proc.c	789	3	Do not ignore values returned by functions: utf8proc_map
STR05-C	auxispicy/spicy/hilti/runtime/src/tests/library-dummy.cc	12	1	Use pointers to const when referring to string literals
STR05-C	auxispicy/spicy/hilti/runtime/src/tests/library-dummy.cc	12	1	Use pointers to const when referring to string literals
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/clock.posix.c	11	3	Do not reuse variable names in subscopes: timespec
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/clock.posix.c	13	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/clock.posix.c	14	3	Detect and remove code that has no effect
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	115	1	Use visually distinct identifiers: REPROC_SINK_NULL
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	36	62	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	45	23	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	50	5	Const-qualify immutable objects: stream
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	50	42	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	58	5	Const-qualify immutable objects: bytes_read
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	59	5	Const-qualify immutable objects: sink
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	75	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	78	3	Const-qualify immutable objects: string_size
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	80	58	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	87	33	Use only explicitly signed or unsigned char type for numeric values
DCL13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	92	39	Declare function parameters that are pointers to values not changed by the function as const: output
DCL13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	100	31	Declare function parameters that are pointers to values not changed by the function as const: context
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	102	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	103	3	Detect and remove code that has no effect
EXP05-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	103	3	Do not cast away a const qualification
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	104	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/drain.c	105	3	Detect and remove code that has no effect
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	13	1	Use visually distinct identifiers: REPROC_EINVAL
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	14	1	Use visually distinct identifiers: REPROC_EPIPE
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	15	1	Use visually distinct identifiers: REPROC_ETIMEDOUT
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	16	1	Use visually distinct identifiers: REPROC_ENOMEM
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	17	1	Use visually distinct identifiers: REPROC_EWOULDBLOCK
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/error.posix.c	25	3	Const-qualify immutable objects: r
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/handle.posix.c	11	1	Use visually distinct identifiers: HANDLE_INVALID
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/handle.posix.c	22	35	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/handle.posix.c	38	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/handle.posix.c	39	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/options.c	17	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/options.c	75	3	Const-qualify immutable objects: is_noop
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/options.c	91	3	Detect and remove code that has no effect
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/options.c	116	58	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/options.c	118	5	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	15	1	Use visually distinct identifiers: PIPE_INVALID
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	17	1	Use visually distinct identifiers: PIPE_EVENT_IN
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	18	1	Use visually distinct identifiers: PIPE_EVENT_OUT
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	20	20	Do not reuse variable names in subscopes: read
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	20	31	Do not reuse variable names in subscopes: write
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	22	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	23	3	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	51	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	52	3	Do not ignore values returned by functions: pipe_destroy
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	57	26	Do not reuse variable names in subscopes: pipe
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	66	35	Use bitwise operators only on unsigned operands
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	73	19	Do not reuse variable names in subscopes: pipe
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	75	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	76	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	78	3	Const-qualify immutable objects: r
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	88	20	Do not reuse variable names in subscopes: pipe
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	90	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	91	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	93	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	100	3	Detect and remove code that has no effect
EXP36-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	105	19	Do not convert pointers into more strictly aligned pointer types
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	132	23	Do not reuse variable names in subscopes: pipe
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	134	3	Detect and remove code that has no effect
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/pipe.posix.c	138	22	Do not reuse variable names in subscopes: pipe
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	20	1	Use visually distinct identifiers: PROCESS_INVALID
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	42	23	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	51	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	53	3	Const-qualify immutable objects: path_size
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	62	43	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	73	14	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	75	54	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	87	20	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	88	19	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	89	23	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	89	18	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	96	29	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	107	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	112	3	Const-qualify immutable objects: soft
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	155	5	Do not reuse variable names in subscopes: read
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	156	5	Do not reuse variable names in subscopes: write
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	154	3	Do not reuse variable names in subscopes: pipe
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	170	5	Const-qualify immutable objects: q
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	171	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	173	5	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	174	5	Do not ignore values returned by functions: pipe_destroy
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	182	5	Const-qualify immutable objects: child
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	189	5	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	193	5	Do not ignore values returned by functions: pipe_destroy
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	197	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	203	7	Detect and remove code that has no effect
INT32-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	205	28	Ensure that operations on signed integers do not result in overflow
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	208	5	Do not ignore values returned by functions: pipe_destroy
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	229	8	Do not reuse variable names in subscopes: signal
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	262	3	Const-qualify immutable objects: max_fd
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	283	7	Do not ignore values returned by functions: handle_destroy
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	291	5	Detect and remove code that has no effect
EXP06-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	291	46	Operands to the sizeof operator should not contain side effects
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	295	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	296	3	Do not ignore values returned by functions: pipe_destroy
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	305	3	Detect and remove code that has no effect
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	312	5	Do not reuse variable names in subscopes: read
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	313	5	Do not reuse variable names in subscopes: write
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	311	3	Do not reuse variable names in subscopes: pipe
ARR30-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	374	36	Do not form or use out-of-bounds pointers or array subscripts
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	400	7	Detect and remove code that has no effect
EXP05-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	402	27	Do not cast away a const qualification
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	413	7	Detect and remove code that has no effect
EXP06-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	413	48	Operands to the sizeof operator should not contain side effects
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	417	5	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	418	5	Do not ignore values returned by functions: pipe_destroy
MEM01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	419	5	Store a new value in pointers immediately after free()
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	420	5	Do not ignore values returned by functions: strv_free
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	425	3	Const-qualify immutable objects: child
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	425	3	Do not reuse variable names in subscopes: child
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	433	3	Detect and remove code that has no effect
INT32-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	437	26	Ensure that operations on signed integers do not result in overflow
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	445	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	446	3	Do not ignore values returned by functions: pipe_destroy
MEM01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	447	3	Store a new value in pointers immediately after free()
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	448	3	Do not ignore values returned by functions: strv_free
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	465	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	468	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	473	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	480	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	482	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	488	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	490	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/process.posix.c	497	3	Detect and remove code that has no effect
MSC01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	14	3	Strive for logical completeness
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	28	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	35	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	52	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	54	3	Const-qualify immutable objects: r
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	66	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	67	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	69	3	Const-qualify immutable objects: mode
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	71	3	Const-qualify immutable objects: r
FIO42-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.posix.c	71	11	Close files when they are no longer needed
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	10	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	11	3	Detect and remove code that has no effect
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	33	5	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	34	5	Do not ignore values returned by functions: pipe_destroy
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	47	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	48	3	Detect and remove code that has no effect
MSC01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	52	3	Strive for logical completeness
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	111	7	Detect and remove code that has no effect
MSC01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	142	3	Strive for logical completeness
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	150	7	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/redirect.c	154	7	Do not ignore values returned by functions: handle_destroy
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	44	1	Use visually distinct identifiers: REPROC_SIGKILL
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	45	1	Use visually distinct identifiers: REPROC_SIGTERM
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	47	1	Use visually distinct identifiers: REPROC_INFINITE
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	48	1	Use visually distinct identifiers: REPROC_DEADLINE
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	22	5	Do not reuse variable names in subscopes: exit
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	52	28	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	52	28	Ensure that return values are compared against the proper type
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	53	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	54	5	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	58	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	77	5	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	96	3	Const-qualify immutable objects: n
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	103	3	Const-qualify immutable objects: remaining
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	115	3	Detect and remove code that has no effect
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	116	3	Detect and remove code that has no effect
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	128	5	Const-qualify immutable objects: current
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	173	5	Do not reuse variable names in subscopes: exit
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	215	3	Do not reuse variable names in subscopes: process_options
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	243	3	Do not ignore values returned by functions: redirect_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	260	3	Do not ignore values returned by functions: pipe_destroy
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	302	3	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	304	3	Const-qualify immutable objects: earliest
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	305	3	Const-qualify immutable objects: deadline
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	309	3	Const-qualify immutable objects: first
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	310	3	Const-qualify immutable objects: num_pipes
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	310	34	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	322	36	Do not convert pointers into more strictly aligned pointer types
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	332	5	Const-qualify immutable objects: j
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	332	18	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	334	5	Const-qualify immutable objects: interests
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	340	5	Const-qualify immutable objects: in
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	340	25	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	341	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	342	13	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	344	5	Const-qualify immutable objects: out
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	344	26	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	345	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	346	13	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	348	5	Const-qualify immutable objects: err
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	348	26	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	349	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	350	13	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	352	5	Const-qualify immutable objects: exit
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	352	5	Do not reuse variable names in subscopes: exit
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	352	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	353	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	355	28	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	357	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	358	13	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	393	9	Const-qualify immutable objects: event
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	393	29	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	394	46	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	394	46	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	394	19	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	418	31	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	473	3	Const-qualify immutable objects: child
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	486	5	Const-qualify immutable objects: event
INT32-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	491	23	Ensure that operations on signed integers do not result in overflow
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	511	5	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	511	5	Ensure that return values are compared against the proper type
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	519	3	Const-qualify immutable objects: r
MSC01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	533	3	Strive for logical completeness
MSC12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	569	3	Detect and remove code that has no effect
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	626	24	Use rsize_t or size_t for all integer values representing the size of an object
MSC01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	629	5	Strive for logical completeness
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	672	5	Do not ignore values returned by functions: reproc_stop
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	675	3	Do not ignore values returned by functions: process_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	676	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	677	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	678	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	679	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	681	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/reproc.c	682	3	Do not ignore values returned by functions: pipe_destroy
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc/src/run.c	51	3	Do not ignore values returned by functions: reproc_destroy
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc/src/strv.c	13	30	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc/src/strv.c	23	1	Use typedefs to improve code readability
EXP36-C	auxispicy/spicy/3rdparty/reproc/reproc/src/strv.c	38	20	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	83	3	Use visually distinct identifiers: value
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	279	3	Use visually distinct identifiers: num
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	282	3	Use visually distinct identifiers: den
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	52	3	Use visually distinct identifiers: npos
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	9	1	Use visually distinct identifiers: kill
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	10	1	Use visually distinct identifiers: terminate
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	14	1	Use visually distinct identifiers: infinite
DCL02-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	15	1	Use visually distinct identifiers: deadline
INT32-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	29	12	Ensure that operations on signed integers do not result in overflow
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	32	66	Do not reuse variable names in subscopes: stop
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	42	54	Do not reuse variable names in subscopes: redirect
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	48	58	Do not reuse variable names in subscopes: options
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	68	1	process is a non-explicit single-argument constructor.
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	71	49	Do not reuse variable names in subscopes: arguments
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	72	47	Do not reuse variable names in subscopes: options
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	74	3	Const-qualify immutable objects: reproc_options
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	74	3	Do not reuse variable names in subscopes: reproc_options
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	75	3	Const-qualify immutable objects: r
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	79	63	Do not reuse variable names in subscopes: options
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	81	3	Const-qualify immutable objects: reproc_options
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	81	3	Do not reuse variable names in subscopes: reproc_options
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	82	3	Const-qualify immutable objects: r
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	pair is a non-explicit single-argument constructor.
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	95	22	Do not reuse variable names in subscopes: stream
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	97	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	105	3	Const-qualify immutable objects: r
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	109	39	Do not reuse variable names in subscopes: stream
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	111	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	117	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	123	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	129	3	Const-qualify immutable objects: r
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	133	60	Do not reuse variable names in subscopes: stop
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	135	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	141	3	Const-qualify immutable objects: r
DCL00-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	155	3	Const-qualify immutable objects: r
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Public data member
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	130	27	Use rsize_t or size_t for all integer values representing the size of an object
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
DCL05-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	Use typedefs to improve code readability
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	_Head_base < type >  is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	_Head_base < pointer & >  is a non-explicit single-argument constructor.
OBJ32-CPP	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	0	0	unique_ptr is a non-explicit single-argument constructor.
EXP12-C	auxispicy/spicy/3rdparty/reproc/reproc++/src/reproc.cpp	369	2	Do not ignore values returned by functions: swap
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	24	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	20	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	33	17	Do not form or use out-of-bounds pointers or array subscripts
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	39	22	Use only explicitly signed or unsigned char type for numeric values
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	50	2	Strive for logical completeness
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	64	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	76	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	88	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	13	19	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	28	2	Const-qualify immutable objects: cpl
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	34	11	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	35	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	35	22	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	36	21	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	39	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	34	Use rsize_t or size_t for all integer values representing the size of an object
INT33-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	28	Ensure that division and remainder operations do not result in divide-by-zero errors
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	23	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	64	17	Do not form or use out-of-bounds pointers or array subscripts
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	89	2	Strive for logical completeness
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	101	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	101	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	104	11	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	106	11	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	115	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	115	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	118	11	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	118	11	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	120	11	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	129	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	129	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	132	11	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	132	11	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	135	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	135	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	137	11	Use only explicitly signed or unsigned char type for numeric values
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	150	2	Strive for logical completeness
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	153	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	153	3	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	155	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	155	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	156	15	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	157	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	157	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	158	15	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	161	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	161	3	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	163	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	163	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	164	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	170	15	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	24	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	18	20	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	33	17	Do not form or use out-of-bounds pointers or array subscripts
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	39	22	Use only explicitly signed or unsigned char type for numeric values
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	50	2	Strive for logical completeness
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	64	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	75	17	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	76	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	87	17	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	88	18	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Use bitwise operators only on unsigned operands
INT14-C	auxispicy/spicy/3rdparty/libb64/src/cdecode.c	99	19	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	13	19	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	28	2	Const-qualify immutable objects: cpl
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	34	11	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	35	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	35	22	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	36	21	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	39	9	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	34	Use rsize_t or size_t for all integer values representing the size of an object
INT33-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	28	Ensure that division and remainder operations do not result in divide-by-zero errors
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	46	23	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	64	17	Do not form or use out-of-bounds pointers or array subscripts
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	89	2	Strive for logical completeness
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	101	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	101	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	104	11	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	106	11	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	115	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	115	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	118	11	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	118	11	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	120	11	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	129	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	129	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	132	11	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	132	11	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	135	4	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	135	4	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	137	11	Use only explicitly signed or unsigned char type for numeric values
MSC01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	150	2	Strive for logical completeness
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	153	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	153	3	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	155	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	155	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	156	15	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	157	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	157	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	158	15	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	161	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	161	3	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	163	3	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	163	3	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	164	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/libb64/src/cencode.c	170	15	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	13	5	Do not ignore values returned by functions: jrx_regerror
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	27	51	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	29	47	Use bitwise operators only on unsigned operands
DCL00-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	75	9	Const-qualify immutable objects: n
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	76	22	Use only explicitly signed or unsigned char type for numeric values
EXP11-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	121	21	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	130	14	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	138	37	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	141	56	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	141	44	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	141	37	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	144	44	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/retest.c	144	37	Use bitwise operators only on unsigned operands
STR11-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	35	1	Do not specify the dimension of a character array initialized with a string literal
DCL01-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	535	5	Do not reuse variable names in subscopes: gotcha
EXP11-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	543	24	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	600	21	Do not ignore values returned by functions: fwrite
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	604	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	604	42	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	639	16	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	643	34	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	668	9	Do not ignore values returned by functions: jrx_regerror
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	695	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	698	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	702	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	708	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	711	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	714	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	717	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	720	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	723	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	726	20	Use only explicitly signed or unsigned char type for numeric values
INT14-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	741	27	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	749	27	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	761	27	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	782	20	Use only explicitly signed or unsigned char type for numeric values
INT14-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	804	27	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	811	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	814	26	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	948	5	Do not ignore values returned by functions: sigemptyset
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	950	9	Do not ignore values returned by functions: sigaddset
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	955	5	Do not ignore values returned by functions: sigprocmask
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	967	5	Do not ignore values returned by functions: signal
SIG30-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	967	17	Call only asynchronous-safe functions within signal handlers: gotcha
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	968	5	Do not ignore values returned by functions: alarm
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	999	16	Use only explicitly signed or unsigned char type for numeric values
STR11-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1021	1	Do not specify the dimension of a character array initialized with a string literal
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1037	21	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1041	25	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1071	9	Do not ignore values returned by functions: putchar
DCL13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1081	39	Declare function parameters that are pointers to values not changed by the function as const: accept
DCL13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1081	59	Declare function parameters that are pointers to values not changed by the function as const: match
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1091	9	Do not ignore values returned by functions: alarm
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1093	9	Do not ignore values returned by functions: alarm
EXP05-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1155	15	Do not cast away a const qualification
INT01-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1156	36	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1156	67	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1158	8	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1171	23	Use bitwise operators only on unsigned operands
FIO11-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1233	27	Take care when specifying the mode parameter of fopen()
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1269	35	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1270	17	Do not ignore values returned by functions: putchar
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1322	13	Do not ignore values returned by functions: signal
SIG30-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1322	29	Call only asynchronous-safe functions within signal handlers: gotcha
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1323	13	Do not ignore values returned by functions: signal
SIG30-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1323	28	Call only asynchronous-safe functions within signal handlers: gotcha
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1324	13	Do not ignore values returned by functions: signal
SIG30-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1324	29	Call only asynchronous-safe functions within signal handlers: gotcha
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1330	33	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1331	30	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1339	21	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1350	34	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1350	39	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1352	29	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1368	41	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1375	28	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1404	22	Use bitwise operators only on unsigned operands
EXP30-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1431	30	Do not depend on order of evaluation for side effects
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1461	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1461	40	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1464	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1467	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1470	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1473	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1476	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1479	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1482	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1485	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1488	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1491	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1494	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1497	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1500	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1503	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1506	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1509	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1512	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1515	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1518	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1524	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1533	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1536	28	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1552	29	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1595	29	Do not ignore values returned by functions: setlocale
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1596	29	Do not ignore values returned by functions: setlocale
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1617	26	Use bitwise operators only on unsigned operands
INT07-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1620	37	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1700	32	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1772	49	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1774	17	Do not ignore values returned by functions: alarm
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1775	49	Use bitwise operators only on unsigned operands
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1776	17	Do not ignore values returned by functions: alarm
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1833	31	Use bitwise operators only on unsigned operands
INT01-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1844	40	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1845	39	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1872	21	Do not ignore values returned by functions: catchfree
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1955	21	Do not ignore values returned by functions: alarm
EXP12-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1957	21	Do not ignore values returned by functions: alarm
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	1972	24	Use bitwise operators only on unsigned operands
INT13-C	auxispicy/spicy/3rdparty/justrx/src/tests/testregex.c	2061	27	Use bitwise operators only on unsigned operands
DCL02-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	289	5	Use visually distinct identifiers: ns_t_ninfo
EXP36-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	58	22	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	63	3	Do not ignore values returned by functions: memset
EXP36-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	89	24	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	89	40	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	95	3	Do not ignore values returned by functions: memset
INT01-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	95	37	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	114	37	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	114	51	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	120	3	Do not ignore values returned by functions: memset
INT01-C	auxic-ares/src/lib/ares__addrinfo2hostent.c	120	48	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	52	3	Do not ignore values returned by functions: memset
EXP36-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	56	44	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	62	7	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	65	23	Use bitwise operators only on unsigned operands
EXP11-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	67	23	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	70	23	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	76	46	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	82	7	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	85	25	Use bitwise operators only on unsigned operands
EXP11-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	87	23	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	90	23	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	107	7	Do not ignore values returned by functions: ares_inet_pton
EXP12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	118	7	Do not ignore values returned by functions: ares_inet_pton
DCL13-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	132	68	Declare function parameters that are pointers to values not changed by the function as const: nodes
MSC12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	191	3	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	192	3	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares__addrinfo_localhost.c	193	3	Detect and remove code that has no effect
DCL01-C	auxic-ares/src/lib/ares__get_hostent.c	41	3	Do not reuse variable names in subscopes: hostent
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	60	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	62	10	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	66	29	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	68	12	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	72	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	72	20	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	82	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	82	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	89	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	93	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	93	20	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	103	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	103	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	111	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	111	24	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	118	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	127	25	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	127	29	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	129	25	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	129	28	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares__get_hostent.c	166	28	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares__get_hostent.c	180	41	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares__get_hostent.c	180	44	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares__get_hostent.c	193	39	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares__get_hostent.c	193	50	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	203	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	203	25	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	206	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__get_hostent.c	206	24	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__get_hostent.c	208	14	Use only explicitly signed or unsigned char type for numeric values
DCL02-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	62	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	63	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	101	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	102	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	103	14	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	112	21	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares__parse_into_addrinfo.c	127	21	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxic-ares/src/lib/ares__readaddrinfo.c	50	3	Const-qualify immutable objects: want_cname
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	50	36	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	76	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	78	10	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	82	29	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	84	12	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	88	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	88	20	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	98	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	98	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	105	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	109	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	109	20	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	119	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	119	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	127	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	127	24	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	134	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	146	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	146	25	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	149	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares__readaddrinfo.c	149	24	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares__readaddrinfo.c	151	14	Use only explicitly signed or unsigned char type for numeric values
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	93	42	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	118	41	Do not cast away a const qualification
DCL00-C	auxic-ares/src/lib/ares__sortaddrinfo.c	119	7	Const-qualify immutable objects: na
INT13-C	auxic-ares/src/lib/ares__sortaddrinfo.c	120	11	Use bitwise operators only on unsigned operands
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	153	42	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	166	16	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	214	42	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	227	16	Do not cast away a const qualification
EXP11-C	auxic-ares/src/lib/ares__sortaddrinfo.c	259	20	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	259	20	Do not cast away a const qualification
EXP11-C	auxic-ares/src/lib/ares__sortaddrinfo.c	260	20	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	260	20	Do not cast away a const qualification
INT01-C	auxic-ares/src/lib/ares__sortaddrinfo.c	262	17	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares__sortaddrinfo.c	269	17	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares__sortaddrinfo.c	272	17	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares__sortaddrinfo.c	279	22	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	288	41	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares__sortaddrinfo.c	289	41	Do not cast away a const qualification
INT01-C	auxic-ares/src/lib/ares__sortaddrinfo.c	469	13	Use rsize_t or size_t for all integer values representing the size of an object
MSC12-C	auxic-ares/src/lib/ares__sortaddrinfo.c	481	7	Detect and remove code that has no effect
DCL00-C	auxic-ares/src/lib/ares__read_line.c	47	7	Const-qualify immutable objects: bytestoread
INT01-C	auxic-ares/src/lib/ares__read_line.c	50	24	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares__read_line.c	50	24	Ensure that return values are compared against the proper type
INT01-C	auxic-ares/src/lib/ares__read_line.c	52	22	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares__read_line.c	54	27	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxic-ares/src/lib/ares__read_line.c	54	22	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares__read_line.c	58	25	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares__read_line.c	62	44	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares__read_line.c	70	16	Use rsize_t or size_t for all integer values representing the size of an object
DCL01-C	auxic-ares/src/lib/ares_cancel.c	28	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_cancel.c	31	3	Do not reuse variable names in subscopes: list_node
EXP36-C	auxic-ares/src/lib/ares_cancel.c	49	24	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_cancel.c	55	24	Use bitwise operators only on unsigned operands
EXP11-C	auxic-ares/src/lib/ares_data.c	53	11	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares_data.c	53	11	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_data.c	165	20	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_data.c	214	9	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_data.c	223	9	Do not ignore values returned by functions: memset
DCL01-C	auxic-ares/src/lib/ares_destroy.c	46	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_destroy.c	48	3	Do not reuse variable names in subscopes: list_node
EXP36-C	auxic-ares/src/lib/ares_destroy.c	56	24	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxic-ares/src/lib/ares_expand_name.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT01-C	auxic-ares/src/lib/ares_expand_name.c	133	29	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_expand_name.c	138	16	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares_expand_name.c	138	16	Ensure that return values are compared against the proper type
INT07-C	auxic-ares/src/lib/ares_expand_name.c	142	10	Use only explicitly signed or unsigned char type for numeric values
INT14-C	auxic-ares/src/lib/ares_expand_name.c	165	13	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_expand_name.c	165	47	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_expand_name.c	165	27	Use bitwise operators only on unsigned operands
DCL00-C	auxic-ares/src/lib/ares_expand_name.c	169	11	Const-qualify immutable objects: name_len
INT07-C	auxic-ares/src/lib/ares_expand_name.c	179	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	180	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	181	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	182	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	186	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	187	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	191	24	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	195	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	204	14	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_expand_name.c	206	8	Use only explicitly signed or unsigned char type for numeric values
INT14-C	auxic-ares/src/lib/ares_expand_name.c	238	18	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_expand_name.c	238	50	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_expand_name.c	238	30	Use bitwise operators only on unsigned operands
DCL00-C	auxic-ares/src/lib/ares_expand_name.c	252	11	Const-qualify immutable objects: name_len
DCL02-C	auxic-ares/src/lib/ares_expand_string.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT01-C	auxic-ares/src/lib/ares_expand_string.c	54	28	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxic-ares/src/lib/ares_expand_string.c	58	22	Do not cast away a const qualification
MSC12-C	auxic-ares/src/lib/ares_fds.c	41	11	Detect and remove code that has no effect
INT13-C	auxic-ares/src/lib/ares_fds.c	41	11	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_fds.c	41	11	Avoid performing bitwise and arithmetic operations on the same data
MSC12-C	auxic-ares/src/lib/ares_fds.c	51	10	Detect and remove code that has no effect
INT13-C	auxic-ares/src/lib/ares_fds.c	51	10	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_fds.c	51	10	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_fds.c	53	12	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_fds.c	53	12	Avoid performing bitwise and arithmetic operations on the same data
DCL02-C	auxic-ares/src/lib/ares_getaddrinfo.c	289	5	Use visually distinct identifiers: ns_t_ninfo
EXP36-C	auxic-ares/src/lib/ares_getaddrinfo.c	118	50	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_getaddrinfo.c	165	41	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_getaddrinfo.c	176	18	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	236	17	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	238	22	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	240	22	Use bitwise operators only on unsigned operands
EXP12-C	auxic-ares/src/lib/ares_getaddrinfo.c	245	7	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_getaddrinfo.c	247	7	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	270	21	Use bitwise operators only on unsigned operands
DCL00-C	auxic-ares/src/lib/ares_getaddrinfo.c	289	3	Const-qualify immutable objects: family
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	297	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	347	23	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	380	36	Use bitwise operators only on unsigned operands
EXP12-C	auxic-ares/src/lib/ares_getaddrinfo.c	383	11	Do not ignore values returned by functions: ares__sortaddrinfo
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	414	30	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getaddrinfo.c	624	27	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_getaddrinfo.c	665	23	Do not convert pointers into more strictly aligned pointer types
MSC12-C	auxic-ares/src/lib/ares_getaddrinfo.c	765	7	Detect and remove code that has no effect
INT01-C	auxic-ares/src/lib/ares_getaddrinfo.c	782	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_getaddrinfo.c	782	34	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_getaddrinfo.c	793	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_getaddrinfo.c	793	34	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_gethostbyaddr.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT01-C	auxic-ares/src/lib/ares_gethostbyaddr.c	69	37	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_gethostbyaddr.c	70	38	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_gethostbyaddr.c	76	23	Do not convert pointers into more strictly aligned pointer types
MSC01-C	auxic-ares/src/lib/ares_gethostbyaddr.c	105	7	Strive for logical completeness
EXP04-C	auxic-ares/src/lib/ares_gethostbyaddr.c	238	15	Do not perform byte-by-byte comparisons between structures
EXP04-C	auxic-ares/src/lib/ares_gethostbyaddr.c	244	15	Do not perform byte-by-byte comparisons between structures
DCL00-C	auxic-ares/src/lib/ares_gethostbyaddr.c	262	8	Const-qualify immutable objects: laddr
DCL00-C	auxic-ares/src/lib/ares_gethostbyaddr.c	263	8	Const-qualify immutable objects: a1
DCL00-C	auxic-ares/src/lib/ares_gethostbyaddr.c	264	8	Const-qualify immutable objects: a2
DCL00-C	auxic-ares/src/lib/ares_gethostbyaddr.c	265	8	Const-qualify immutable objects: a3
DCL00-C	auxic-ares/src/lib/ares_gethostbyaddr.c	266	8	Const-qualify immutable objects: a4
EXP11-C	auxic-ares/src/lib/ares_gethostbyaddr.c	271	31	Do not apply operators expecting one type to data of an incompatible type
DCL02-C	auxic-ares/src/lib/ares_gethostbyname.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL01-C	auxic-ares/src/lib/ares_gethostbyname.c	59	3	Do not reuse variable names in subscopes: hostent
EXP36-C	auxic-ares/src/lib/ares_gethostbyname.c	60	33	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_gethostbyname.c	102	25	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_gethostbyname.c	160	29	Use bitwise operators only on unsigned operands
DCL02-C	auxic-ares/src/lib/ares_getnameinfo.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	87	14	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxic-ares/src/lib/ares_getnameinfo.c	89	14	Do not cast away a const qualification
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	93	19	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxic-ares/src/lib/ares_getnameinfo.c	95	15	Do not cast away a const qualification
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	105	15	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	105	51	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	106	11	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	109	14	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	109	50	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	120	14	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	123	17	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	128	18	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	133	19	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	138	19	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	140	13	Do not ignore values returned by functions: ares_inet_ntop
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	140	64	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	148	13	Do not ignore values returned by functions: ares_inet_ntop
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	148	61	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	151	19	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_getnameinfo.c	160	30	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	201	26	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	215	26	Use bitwise operators only on unsigned operands
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	219	12	Do not ignore values returned by functions: gethostname
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	224	23	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	235	57	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	240	24	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	243	11	Do not ignore values returned by functions: ares_inet_ntop
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	244	26	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	251	26	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	283	17	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	287	21	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	289	26	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	291	26	Use bitwise operators only on unsigned operands
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	296	11	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_getnameinfo.c	298	11	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares_getnameinfo.c	330	47	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	336	36	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	339	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	342	10	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxic-ares/src/lib/ares_getnameinfo.c	355	3	Const-qualify immutable objects: is_scope_long
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	357	13	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_getnameinfo.c	399	27	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxic-ares/src/lib/ares_getnameinfo.c	413	3	Const-qualify immutable objects: s1_len
DCL00-C	auxic-ares/src/lib/ares_getnameinfo.c	413	3	Const-qualify immutable objects: s2_len
EXP05-C	auxic-ares/src/lib/ares_getnameinfo.c	421	8	Do not cast away a const qualification
EXP30-C	auxic-ares/src/lib/ares_getnameinfo.c	425	7	Do not depend on order of evaluation for side effects
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	425	13	Use rsize_t or size_t for all integer values representing the size of an object
EXP30-C	auxic-ares/src/lib/ares_getnameinfo.c	426	7	Do not depend on order of evaluation for side effects
INT01-C	auxic-ares/src/lib/ares_getnameinfo.c	426	13	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxic-ares/src/lib/ares_getnameinfo.c	435	10	Do not cast away a const qualification
DCL00-C	auxic-ares/src/lib/ares_getsock.c	28	3	Const-qualify immutable objects: setbits
ARR30-C	auxic-ares/src/lib/ares_getsock.c	43	16	Do not form or use out-of-bounds pointers or array subscripts
INT34-C	auxic-ares/src/lib/ares_getsock.c	44	21	Do not shift a negative number of bits or more bits than exist in the operand
ARR30-C	auxic-ares/src/lib/ares_getsock.c	55	15	Do not form or use out-of-bounds pointers or array subscripts
INT34-C	auxic-ares/src/lib/ares_getsock.c	56	20	Do not shift a negative number of bits or more bits than exist in the operand
INT14-C	auxic-ares/src/lib/ares_getsock.c	60	19	Avoid performing bitwise and arithmetic operations on the same data
DCL02-C	auxic-ares/src/lib/ares_init.c	289	5	Use visually distinct identifiers: ns_t_ninfo
EXP12-C	auxic-ares/src/lib/ares_init.c	156	3	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_init.c	158	3	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares_init.c	232	23	Use bitwise operators only on unsigned operands
EXP12-C	auxic-ares/src/lib/ares_init.c	321	3	Do not ignore values returned by functions: memset
INT13-C	auxic-ares/src/lib/ares_init.c	332	34	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	331	67	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	331	50	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	331	33	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	330	75	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	330	52	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	330	34	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	329	61	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	329	46	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	329	31	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	333	14	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	336	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	346	23	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	347	23	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	361	37	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	361	52	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_init.c	379	35	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	379	54	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_init.c	402	36	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	402	52	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_init.c	427	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	429	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	431	21	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	433	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	435	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	437	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	439	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	441	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	442	25	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	443	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	444	25	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	445	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	450	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	453	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	457	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	461	16	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	467	24	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	467	43	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_init.c	486	16	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	491	39	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	491	58	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_init.c	506	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	514	16	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	516	38	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	516	54	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_init.c	526	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	1900	25	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	1902	25	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	1909	35	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	1953	13	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_init.c	1954	14	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_init.c	1966	19	Use only explicitly signed or unsigned char type for numeric values
EXP36-C	auxic-ares/src/lib/ares_init.c	1975	37	Do not convert pointers into more strictly aligned pointer types
INT07-C	auxic-ares/src/lib/ares_init.c	2040	13	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2040	17	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2042	6	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2075	53	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2076	19	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2079	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2079	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2081	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2081	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2086	6	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	auxic-ares/src/lib/ares_init.c	2109	3	Do not ignore values returned by functions: memset
INT14-C	auxic-ares/src/lib/ares_init.c	2113	23	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_init.c	2117	21	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	2117	46	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_init.c	2147	17	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_init.c	2175	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2175	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2185	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2185	21	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2189	14	Use only explicitly signed or unsigned char type for numeric values
EXP36-C	auxic-ares/src/lib/ares_init.c	2206	29	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	2206	56	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_init.c	2238	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2244	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2244	47	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2247	20	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2252	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2252	38	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2255	27	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2259	21	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2275	28	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2294	28	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2310	21	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2310	38	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	2314	14	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2351	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2351	21	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_init.c	2366	14	Use bitwise operators only on unsigned operands
EXP05-C	auxic-ares/src/lib/ares_init.c	2376	11	Do not cast away a const qualification
INT07-C	auxic-ares/src/lib/ares_init.c	2397	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2400	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2402	6	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2406	22	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2408	8	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_init.c	2412	13	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2412	16	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_init.c	2419	27	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares_init.c	2419	27	Ensure that return values are compared against the proper type
INT01-C	auxic-ares/src/lib/ares_init.c	2434	15	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_init.c	2434	38	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_init.c	2434	54	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_init.c	2440	13	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_init.c	2440	16	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_init.c	2489	25	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_init.c	2489	50	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxic-ares/src/lib/ares_init.c	2507	3	Const-qualify immutable objects: randomized
EXP12-C	auxic-ares/src/lib/ares_init.c	2521	5	Do not ignore values returned by functions: setvbuf
MSC30-C	auxic-ares/src/lib/ares_init.c	2530	36	Do not use the rand() function for generating pseudorandom numbers
EXP12-C	auxic-ares/src/lib/ares_init.c	2545	3	Do not ignore values returned by functions: memset
DCL00-C	auxic-ares/src/lib/ares_init.c	2560	5	Const-qualify immutable objects: swapByte
INT33-C	auxic-ares/src/lib/ares_init.c	2562	43	Ensure that division and remainder operations do not result in divide-by-zero errors
INT07-C	auxic-ares/src/lib/ares_init.c	2586	64	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxic-ares/src/lib/ares_init.c	2586	59	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_library_init.c	58	1	Use visually distinct identifiers: ares_malloc
DCL02-C	auxic-ares/src/lib/ares_library_init.c	59	1	Use visually distinct identifiers: ares_realloc
DCL02-C	auxic-ares/src/lib/ares_library_init.c	60	1	Use visually distinct identifiers: ares_free
INT01-C	auxic-ares/src/lib/ares_library_init.c	48	53	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares_library_init.c	48	53	Ensure that return values are compared against the proper type
INT13-C	auxic-ares/src/lib/ares_library_init.c	144	13	Use bitwise operators only on unsigned operands
DCL05-C	auxic-ares/src/lib/ares_library_init.c	156	1	Use typedefs to improve code readability
INT13-C	auxic-ares/src/lib/ares_library_init.c	179	23	Use bitwise operators only on unsigned operands
DCL02-C	auxic-ares/src/lib/ares_create_query.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT01-C	auxic-ares/src/lib/ares_create_query.c	100	48	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_create_query.c	100	37	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_create_query.c	100	26	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_create_query.c	100	22	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxic-ares/src/lib/ares_create_query.c	108	3	Do not ignore values returned by functions: memset
MSC12-C	auxic-ares/src/lib/ares_create_query.c	109	3	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares_create_query.c	117	3	Detect and remove code that has no effect
INT14-C	auxic-ares/src/lib/ares_create_query.c	117	3	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_create_query.c	117	3	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_create_query.c	120	7	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_create_query.c	120	7	Avoid performing bitwise and arithmetic operations on the same data
INT07-C	auxic-ares/src/lib/ares_create_query.c	138	25	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxic-ares/src/lib/ares_create_query.c	144	15	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_create_query.c	151	25	Use only explicitly signed or unsigned char type for numeric values
MSC12-C	auxic-ares/src/lib/ares_create_query.c	168	3	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares_create_query.c	169	3	Detect and remove code that has no effect
INT14-C	auxic-ares/src/lib/ares_create_query.c	169	3	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_create_query.c	169	3	Avoid performing bitwise and arithmetic operations on the same data
EXP12-C	auxic-ares/src/lib/ares_create_query.c	174	7	Do not ignore values returned by functions: memset
MSC12-C	auxic-ares/src/lib/ares_create_query.c	176	7	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares_create_query.c	177	7	Detect and remove code that has no effect
INT14-C	auxic-ares/src/lib/ares_create_query.c	177	7	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_create_query.c	177	7	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_nowarn.c	72	23	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	90	22	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	108	24	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	127	24	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	146	22	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	165	22	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	184	31	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_nowarn.c	203	33	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_options.c	46	35	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_options.c	101	35	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_options.c	119	29	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_options.c	120	29	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_options.c	169	37	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_options.c	169	48	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_options.c	221	37	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_options.c	221	48	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_options.c	231	47	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_options.c	232	47	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_options.c	268	9	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares_options.c	268	9	Ensure that return values are compared against the proper type
INT01-C	auxic-ares/src/lib/ares_options.c	271	23	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_options.c	276	12	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_options.c	277	12	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_options.c	278	14	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxic-ares/src/lib/ares_options.c	278	10	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_options.c	301	12	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_options.c	312	17	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_options.c	329	15	Use only explicitly signed or unsigned char type for numeric values
EXP36-C	auxic-ares/src/lib/ares_options.c	342	24	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_options.c	352	24	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxic-ares/src/lib/ares_parse_a_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
EXP12-C	auxic-ares/src/lib/ares_parse_a_reply.c	59	3	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_parse_a_reply.c	78	6	Do not ignore values returned by functions: ares__addrinfo2addrttl
DCL02-C	auxic-ares/src/lib/ares_parse_aaaa_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
EXP12-C	auxic-ares/src/lib/ares_parse_aaaa_reply.c	61	3	Do not ignore values returned by functions: memset
EXP12-C	auxic-ares/src/lib/ares_parse_aaaa_reply.c	80	6	Do not ignore values returned by functions: ares__addrinfo2addrttl
DCL02-C	auxic-ares/src/lib/ares_parse_caa_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_caa_reply.c	62	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_caa_reply.c	63	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_caa_reply.c	98	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_caa_reply.c	99	14	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_caa_reply.c	113	38	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	135	33	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	140	63	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	151	28	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	151	37	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	152	32	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_parse_caa_reply.c	157	59	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_parse_mx_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_mx_reply.c	58	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_mx_reply.c	59	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_mx_reply.c	94	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_mx_reply.c	95	14	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_mx_reply.c	114	37	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	58	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	59	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	94	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	95	14	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_naptr_reply.c	116	40	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxic-ares/src/lib/ares_parse_ns_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL01-C	auxic-ares/src/lib/ares_parse_ns_reply.c	48	3	Do not reuse variable names in subscopes: hostent
INT14-C	auxic-ares/src/lib/ares_parse_ns_reply.c	58	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_ns_reply.c	59	11	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_ns_reply.c	76	28	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ns_reply.c	76	46	Use rsize_t or size_t for all integer values representing the size of an object
INT14-C	auxic-ares/src/lib/ares_parse_ns_reply.c	99	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_ns_reply.c	100	12	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxic-ares/src/lib/ares_parse_ns_reply.c	120	65	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_parse_ns_reply.c	153	26	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_parse_ns_reply.c	156	41	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ns_reply.c	156	45	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	45	3	Do not reuse variable names in subscopes: hostent
INT14-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	59	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	60	11	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	78	24	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	78	37	Use rsize_t or size_t for all integer values representing the size of an object
INT14-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	98	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	99	14	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	122	40	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	135	31	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	135	53	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	176	28	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	181	7	Do not ignore values returned by functions: memset
EXP36-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	183	41	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	183	44	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	196	39	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_ptr_reply.c	196	53	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_parse_soa_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	52	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	53	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	101	14	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	102	12	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_soa_reply.c	113	29	Do not convert pointers into more strictly aligned pointer types
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	147	19	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	148	20	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	149	18	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	150	19	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_soa_reply.c	151	19	Avoid performing bitwise and arithmetic operations on the same data
DCL02-C	auxic-ares/src/lib/ares_parse_srv_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_srv_reply.c	58	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_srv_reply.c	59	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_srv_reply.c	94	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_srv_reply.c	95	14	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_srv_reply.c	114	38	Do not convert pointers into more strictly aligned pointer types
DCL02-C	auxic-ares/src/lib/ares_parse_txt_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_txt_reply.c	64	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_txt_reply.c	65	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_txt_reply.c	100	16	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_txt_reply.c	101	14	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_txt_reply.c	131	42	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_parse_txt_reply.c	151	55	Use rsize_t or size_t for all integer values representing the size of an object
DCL02-C	auxic-ares/src/lib/ares_parse_uri_reply.c	289	5	Use visually distinct identifiers: ns_t_ninfo
INT14-C	auxic-ares/src/lib/ares_parse_uri_reply.c	64	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_uri_reply.c	65	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_uri_reply.c	103	17	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_uri_reply.c	104	15	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_parse_uri_reply.c	105	15	Avoid performing bitwise and arithmetic operations on the same data
EXP36-C	auxic-ares/src/lib/ares_parse_uri_reply.c	124	38	Do not convert pointers into more strictly aligned pointer types
EXP05-C	auxic-ares/src/lib/ares_parse_uri_reply.c	151	50	Do not cast away a const qualification
INT07-C	auxic-ares/src/lib/ares_parse_uri_reply.c	152	34	Use only explicitly signed or unsigned char type for numeric values
DCL02-C	auxic-ares/src/lib/ares_process.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL00-C	auxic-ares/src/lib/ares_process.c	92	3	Const-qualify immutable objects: secs
MSC01-C	auxic-ares/src/lib/ares_process.c	163	3	Strive for logical completeness
EXP05-C	auxic-ares/src/lib/ares_process.c	190	22	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/ares_process.c	194	10	Do not cast away a const qualification
INT13-C	auxic-ares/src/lib/ares_process.c	227	13	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	241	9	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_process.c	241	9	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_process.c	241	9	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_process.c	249	24	Do not convert pointers into more strictly aligned pointer types
EXP11-C	auxic-ares/src/lib/ares_process.c	256	33	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxic-ares/src/lib/ares_process.c	256	33	Do not cast away a const qualification
INT01-C	auxic-ares/src/lib/ares_process.c	300	17	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_process.c	315	20	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_process.c	376	13	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	390	9	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_process.c	390	9	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_process.c	390	9	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	414	17	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	484	13	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	498	9	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/ares_process.c	498	9	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_process.c	498	9	Use bitwise operators only on unsigned operands
DCL01-C	auxic-ares/src/lib/ares_process.c	536	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_process.c	538	3	Do not reuse variable names in subscopes: list_node
MSC05-C	auxic-ares/src/lib/ares_process.c	545	47	Do not manipulate time_t typed values directly
MSC05-C	auxic-ares/src/lib/ares_process.c	545	64	Do not manipulate time_t typed values directly
MSC05-C	auxic-ares/src/lib/ares_process.c	547	51	Do not manipulate time_t typed values directly
EXP36-C	auxic-ares/src/lib/ares_process.c	550	28	Do not convert pointers into more strictly aligned pointer types
DCL01-C	auxic-ares/src/lib/ares_process.c	570	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_process.c	572	3	Do not reuse variable names in subscopes: list_node
EXP36-C	auxic-ares/src/lib/ares_process.c	595	34	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxic-ares/src/lib/ares_process.c	609	22	Use bitwise operators only on unsigned operands
DCL00-C	auxic-ares/src/lib/ares_process.c	614	11	Const-qualify immutable objects: qlen
INT13-C	auxic-ares/src/lib/ares_process.c	615	26	Use bitwise operators only on unsigned operands
MSC12-C	auxic-ares/src/lib/ares_process.c	620	11	Detect and remove code that has no effect
INT14-C	auxic-ares/src/lib/ares_process.c	620	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	620	11	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/ares_process.c	632	59	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	651	24	Use bitwise operators only on unsigned operands
DCL00-C	auxic-ares/src/lib/ares_process.c	684	3	Const-qualify immutable objects: is_a_empty
DCL00-C	auxic-ares/src/lib/ares_process.c	685	3	Const-qualify immutable objects: is_b_empty
DCL01-C	auxic-ares/src/lib/ares_process.c	709	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_process.c	711	3	Do not reuse variable names in subscopes: list_node
EXP36-C	auxic-ares/src/lib/ares_process.c	728	24	Do not convert pointers into more strictly aligned pointer types
MSC12-C	auxic-ares/src/lib/ares_process.c	730	7	Detect and remove code that has no effect
MSC12-C	auxic-ares/src/lib/ares_process.c	737	3	Detect and remove code that has no effect
DCL01-C	auxic-ares/src/lib/ares_process.c	740	61	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_process.c	757	61	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_process.c	799	59	Do not reuse variable names in subscopes: query
EXP36-C	auxic-ares/src/lib/ares_process.c	821	28	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_process.c	827	7	Do not ignore values returned by functions: memset
INT01-C	auxic-ares/src/lib/ares_process.c	888	37	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_process.c	889	23	Use bitwise operators only on unsigned operands
INT01-C	auxic-ares/src/lib/ares_process.c	889	39	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_process.c	891	18	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_process.c	934	41	Use bitwise operators only on unsigned operands
MSC12-C	auxic-ares/src/lib/ares_process.c	981	3	Detect and remove code that has no effect
EXP12-C	auxic-ares/src/lib/ares_process.c	1014	7	Do not ignore values returned by functions: memset
EXP04-C	auxic-ares/src/lib/ares_process.c	1022	9	Do not perform byte-by-byte comparisons between structures
EXP12-C	auxic-ares/src/lib/ares_process.c	1024	7	Do not ignore values returned by functions: memset
EXP11-C	auxic-ares/src/lib/ares_process.c	1050	14	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares_process.c	1050	14	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_process.c	1052	9	Do not ignore values returned by functions: memset
EXP11-C	auxic-ares/src/lib/ares_process.c	1063	14	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares_process.c	1063	14	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_process.c	1065	9	Do not ignore values returned by functions: memset
DCL00-C	auxic-ares/src/lib/ares_process.c	1111	7	Const-qualify immutable objects: err
DCL00-C	auxic-ares/src/lib/ares_process.c	1123	7	Const-qualify immutable objects: err
DCL00-C	auxic-ares/src/lib/ares_process.c	1134	7	Const-qualify immutable objects: err
EXP11-C	auxic-ares/src/lib/ares_process.c	1163	14	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares_process.c	1163	14	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_process.c	1165	9	Do not ignore values returned by functions: memset
EXP11-C	auxic-ares/src/lib/ares_process.c	1176	14	Do not apply operators expecting one type to data of an incompatible type
EXP36-C	auxic-ares/src/lib/ares_process.c	1176	14	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_process.c	1178	9	Do not ignore values returned by functions: memset
DCL00-C	auxic-ares/src/lib/ares_process.c	1206	7	Const-qualify immutable objects: err
DCL00-C	auxic-ares/src/lib/ares_process.c	1218	7	Const-qualify immutable objects: err
DCL00-C	auxic-ares/src/lib/ares_process.c	1229	7	Const-qualify immutable objects: err
INT14-C	auxic-ares/src/lib/ares_process.c	1261	13	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1262	13	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1281	18	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1303	22	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1362	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1363	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1364	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1365	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1396	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/ares_process.c	1420	12	Avoid performing bitwise and arithmetic operations on the same data
DCL01-C	auxic-ares/src/lib/ares_process.c	1430	60	Do not reuse variable names in subscopes: query
MSC12-C	auxic-ares/src/lib/ares_process.c	1446	13	Detect and remove code that has no effect
INT13-C	auxic-ares/src/lib/ares_process.c	1492	24	Use bitwise operators only on unsigned operands
DCL01-C	auxic-ares/src/lib/ares_process.c	1500	37	Do not reuse variable names in subscopes: query
DCL02-C	auxic-ares/src/lib/ares_query.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL00-C	auxic-ares/src/lib/ares_query.c	52	5	Const-qualify immutable objects: swapByte
INT13-C	auxic-ares/src/lib/ares_query.c	56	62	Use bitwise operators only on unsigned operands
DCL01-C	auxic-ares/src/lib/ares_query.c	66	3	Do not reuse variable names in subscopes: list_node
MSC12-C	auxic-ares/src/lib/ares_query.c	67	3	Detect and remove code that has no effect
EXP36-C	auxic-ares/src/lib/ares_query.c	74	35	Do not convert pointers into more strictly aligned pointer types
EXP12-C	auxic-ares/src/lib/ares_query.c	93	12	Do not ignore values returned by functions: find_query_by_id
DCL01-C	auxic-ares/src/lib/ares_query.c	108	3	Do not reuse variable names in subscopes: qquery
INT13-C	auxic-ares/src/lib/ares_query.c	113	25	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_query.c	115	38	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_query.c	126	23	Do not convert pointers into more strictly aligned pointer types
DCL01-C	auxic-ares/src/lib/ares_query.c	143	3	Do not reuse variable names in subscopes: qquery
INT14-C	auxic-ares/src/lib/ares_query.c	153	15	Avoid performing bitwise and arithmetic operations on the same data
MSC01-C	auxic-ares/src/lib/ares_query.c	156	7	Strive for logical completeness
EXP36-C	auxic-ares/src/lib/ares_search.c	81	23	Do not convert pointers into more strictly aligned pointer types
DCL00-C	auxic-ares/src/lib/ares_search.c	216	3	Const-qualify immutable objects: nlen
DCL00-C	auxic-ares/src/lib/ares_search.c	217	3	Const-qualify immutable objects: dlen
INT01-C	auxic-ares/src/lib/ares_search.c	219	36	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_search.c	219	25	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	auxic-ares/src/lib/ares_search.c	223	14	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxic-ares/src/lib/ares_search.c	225	25	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxic-ares/src/lib/ares_search.c	225	13	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	auxic-ares/src/lib/ares_search.c	235	3	Const-qualify immutable objects: len
INT01-C	auxic-ares/src/lib/ares_search.c	247	12	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxic-ares/src/lib/ares_search.c	247	30	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_search.c	253	24	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_search.c	266	24	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_search.c	269	26	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_search.c	274	33	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_search.c	274	37	Use bitwise operators only on unsigned operands
INT07-C	auxic-ares/src/lib/ares_search.c	280	39	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxic-ares/src/lib/ares_search.c	312	22	Use bitwise operators only on unsigned operands
DCL02-C	auxic-ares/src/lib/ares_send.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL01-C	auxic-ares/src/lib/ares_send.c	32	3	Do not reuse variable names in subscopes: query
EXP36-C	auxic-ares/src/lib/ares_send.c	44	22	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxic-ares/src/lib/ares_send.c	63	35	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_send.c	63	54	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxic-ares/src/lib/ares_send.c	107	30	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/ares_send.c	108	38	Use bitwise operators only on unsigned operands
EXP36-C	auxic-ares/src/lib/ares_strsplit.c	114	21	Do not convert pointers into more strictly aligned pointer types
INT07-C	auxic-ares/src/lib/ares_strsplit.c	128	17	Use only explicitly signed or unsigned char type for numeric values
EXP36-C	auxic-ares/src/lib/ares_strsplit.c	135	20	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxic-ares/src/lib/ares_strsplit.c	166	13	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxic-ares/src/lib/ares_strsplit.c	166	13	Ensure that return values are compared against the proper type
DCL01-C	auxic-ares/src/lib/ares_timeout.c	41	3	Do not reuse variable names in subscopes: query
DCL01-C	auxic-ares/src/lib/ares_timeout.c	43	3	Do not reuse variable names in subscopes: list_node
EXP36-C	auxic-ares/src/lib/ares_timeout.c	60	24	Do not convert pointers into more strictly aligned pointer types
DCL00-C	auxic-ares/src/lib/ares_timeout.c	75	7	Const-qualify immutable objects: ioffset
INT13-C	auxic-ares/src/lib/ares_version.c	8	16	Use bitwise operators only on unsigned operands
EXP05-C	auxic-ares/src/lib/bitncmp.c	46	9	Do not cast away a const qualification
EXP05-C	auxic-ares/src/lib/bitncmp.c	47	9	Do not cast away a const qualification
DCL02-C	auxic-ares/src/lib/inet_net_pton.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL02-C	auxic-ares/src/lib/inet_net_pton.c	36	1	Use visually distinct identifiers: ares_in6addr_any
STR11-C	auxic-ares/src/lib/inet_net_pton.c	65	3	Do not specify the dimension of a character array initialized with a string literal
STR11-C	auxic-ares/src/lib/inet_net_pton.c	66	3	Do not specify the dimension of a character array initialized with a string literal
INT13-C	auxic-ares/src/lib/inet_net_pton.c	72	10	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	73	10	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	79	37	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	79	52	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	80	11	Use bitwise operators only on unsigned operands
EXP30-C	auxic-ares/src/lib/inet_net_pton.c	81	9	Do not depend on order of evaluation for side effects
INT01-C	auxic-ares/src/lib/inet_net_pton.c	81	14	Use rsize_t or size_t for all integer values representing the size of an object
STR37-C	auxic-ares/src/lib/inet_net_pton.c	81	14	Arguments to character-handling functions must be representable as an unsigned char
INT13-C	auxic-ares/src/lib/inet_net_pton.c	86	26	Use bitwise operators only on unsigned operands
INT14-C	auxic-ares/src/lib/inet_net_pton.c	97	14	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxic-ares/src/lib/inet_net_pton.c	99	14	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	99	29	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	110	16	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	110	31	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	119	12	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	119	28	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	126	20	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	127	7	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	137	39	Use bitwise operators only on unsigned operands
INT13-C	auxic-ares/src/lib/inet_net_pton.c	137	54	Use bitwise operators only on unsigned operands
STR11-C	auxic-ares/src/lib/inet_net_pton.c	191	3	Do not specify the dimension of a character array initialized with a string literal
STR11-C	auxic-ares/src/lib/inet_net_pton.c	222	3	Do not specify the dimension of a character array initialized with a string literal
STR11-C	auxic-ares/src/lib/inet_net_pton.c	266	3	Do not specify the dimension of a character array initialized with a string literal
STR11-C	auxic-ares/src/lib/inet_net_pton.c	266	3	Do not specify the dimension of a character array initialized with a string literal
EXP12-C	auxic-ares/src/lib/inet_net_pton.c	278	3	Do not ignore values returned by functions: memset
INT14-C	auxic-ares/src/lib/inet_net_pton.c	298	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/inet_net_pton.c	315	13	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/inet_net_pton.c	316	13	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/inet_net_pton.c	336	11	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxic-ares/src/lib/inet_net_pton.c	337	11	Avoid performing bitwise and arithmetic operations on the same data
DCL02-C	auxic-ares/src/lib/inet_ntop.c	289	5	Use visually distinct identifiers: ns_t_ninfo
STR11-C	builsrc/version.c	4	1	Do not specify the dimension of a character array initialized with a string literal
DCL02-C	sr3rdparty/zeek_inet_ntop.c	289	5	Use visually distinct identifiers: ns_t_ninfo
STR11-C	sr3rdparty/zeek_inet_ntop.c	79	2	Do not specify the dimension of a character array initialized with a string literal
INT07-C	sr3rdparty/zeek_inet_ntop.c	89	16	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	sr3rdparty/zeek_inet_ntop.c	119	2	Do not ignore values returned by functions: memset
INT14-C	sr3rdparty/zeek_inet_ntop.c	121	16	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/zeek_inet_ntop.c	121	27	Use bitwise operators only on unsigned operands
INT07-C	sr3rdparty/zeek_inet_ntop.c	156	11	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/zeek_inet_ntop.c	161	10	Use only explicitly signed or unsigned char type for numeric values
INT01-C	sr3rdparty/zeek_inet_ntop.c	167	48	Use rsize_t or size_t for all integer values representing the size of an object
ARR30-C	sr3rdparty/zeek_inet_ntop.c	172	32	Do not form or use out-of-bounds pointers or array subscripts
INT07-C	sr3rdparty/zeek_inet_ntop.c	177	9	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/zeek_inet_ntop.c	178	8	Use only explicitly signed or unsigned char type for numeric values
DCL05-C	sr3rdparty/ConvertUTF.c	165	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	167	37	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
INT14-C	sr3rdparty/ConvertUTF.c	203	23	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	203	37	Use bitwise operators only on unsigned operands
INT34-C	sr3rdparty/ConvertUTF.c	203	37	Do not shift a negative number of bits or more bits than exist in the operand
INT14-C	sr3rdparty/ConvertUTF.c	204	23	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	204	37	Use bitwise operators only on unsigned operands
DCL05-C	sr3rdparty/ConvertUTF.c	214	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	216	37	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
INT14-C	sr3rdparty/ConvertUTF.c	231	24	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	231	53	Use bitwise operators only on unsigned operands
INT34-C	sr3rdparty/ConvertUTF.c	231	53	Do not shift a negative number of bits or more bits than exist in the operand
DCL05-C	sr3rdparty/ConvertUTF.c	268	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	270	35	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
DCL00-C	sr3rdparty/ConvertUTF.c	285	17	Const-qualify immutable objects: ch2
INT14-C	sr3rdparty/ConvertUTF.c	288	24	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	288	53	Use bitwise operators only on unsigned operands
INT34-C	sr3rdparty/ConvertUTF.c	288	53	Do not shift a negative number of bits or more bits than exist in the operand
MSC01-C	sr3rdparty/ConvertUTF.c	323	9	Strive for logical completeness
INT14-C	sr3rdparty/ConvertUTF.c	324	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	324	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	324	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	325	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	325	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	325	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	326	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	326	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	326	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	327	31	Avoid performing bitwise and arithmetic operations on the same data
DCL05-C	sr3rdparty/ConvertUTF.c	338	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	340	35	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
MSC01-C	sr3rdparty/ConvertUTF.c	376	9	Strive for logical completeness
INT14-C	sr3rdparty/ConvertUTF.c	377	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	377	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	377	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	378	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	378	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	378	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	379	31	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	379	56	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/ConvertUTF.c	379	44	Use bitwise operators only on unsigned operands
INT14-C	sr3rdparty/ConvertUTF.c	380	31	Avoid performing bitwise and arithmetic operations on the same data
DCL00-C	sr3rdparty/ConvertUTF.c	434	5	Const-qualify immutable objects: length
MSC12-C	sr3rdparty/ConvertUTF.c	448	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/ConvertUTF.c	526	3	Detect and remove code that has no effect
DCL00-C	sr3rdparty/ConvertUTF.c	552	9	Const-qualify immutable objects: length
DCL05-C	sr3rdparty/ConvertUTF.c	562	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	564	37	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
DCL00-C	sr3rdparty/ConvertUTF.c	570	9	Const-qualify immutable objects: extraBytesToRead
MSC01-C	sr3rdparty/ConvertUTF.c	582	9	Strive for logical completeness
INT14-C	sr3rdparty/ConvertUTF.c	624	23	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	624	37	Use bitwise operators only on unsigned operands
INT34-C	sr3rdparty/ConvertUTF.c	624	37	Do not shift a negative number of bits or more bits than exist in the operand
INT14-C	sr3rdparty/ConvertUTF.c	625	23	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	sr3rdparty/ConvertUTF.c	625	37	Use bitwise operators only on unsigned operands
DCL05-C	sr3rdparty/ConvertUTF.c	635	1	Use typedefs to improve code readability
DCL13-C	sr3rdparty/ConvertUTF.c	637	37	Declare function parameters that are pointers to values not changed by the function as const: targetEnd
DCL00-C	sr3rdparty/ConvertUTF.c	644	9	Const-qualify immutable objects: extraBytesToRead
MSC01-C	sr3rdparty/ConvertUTF.c	686	9	Strive for logical completeness
DCL05-C	sr3rdparty/ConvertUTF.c	722	1	Use typedefs to improve code readability
DCL05-C	sr3rdparty/ConvertUTF.c	731	1	Use typedefs to improve code readability
DCL00-C	sr3rdparty/modp_numtoa.c	59	2	Const-qualify immutable objects: start_dec
DCL01-C	sr3rdparty/modp_numtoa.c	60	2	Do not reuse variable names in subscopes: exp
INT32-C	sr3rdparty/modp_numtoa.c	111	41	Ensure that operations on signed integers do not result in overflow
INT07-C	sr3rdparty/modp_numtoa.c	114	28	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	115	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	127	10	Use only explicitly signed or unsigned char type for numeric values
INT32-C	sr3rdparty/modp_numtoa.c	136	87	Ensure that operations on signed integers do not result in overflow
INT07-C	sr3rdparty/modp_numtoa.c	140	28	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	141	10	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	153	10	Use only explicitly signed or unsigned char type for numeric values
FLP02-C	sr3rdparty/modp_numtoa.c	166	18	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	167	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	167	30	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	167	44	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	167	58	Use only explicitly signed or unsigned char type for numeric values
INT32-C	sr3rdparty/modp_numtoa.c	176	17	Ensure that operations on signed integers do not result in overflow
INT32-C	sr3rdparty/modp_numtoa.c	189	65	Ensure that operations on signed integers do not result in overflow
INT01-C	sr3rdparty/modp_numtoa.c	190	11	Use rsize_t or size_t for all integer values representing the size of an object
FLP34-C	sr3rdparty/modp_numtoa.c	204	17	Ensure that floating point conversions are within range of the new type
DCL00-C	sr3rdparty/modp_numtoa.c	205	5	Const-qualify immutable objects: tmp
FLP03-C	sr3rdparty/modp_numtoa.c	205	34	Detect and handle floating point errors
FLP34-C	sr3rdparty/modp_numtoa.c	206	21	Ensure that floating point conversions are within range of the new type
FLP02-C	sr3rdparty/modp_numtoa.c	216	21	Consider avoiding floating-point numbers when precise computation is needed
FLP02-C	sr3rdparty/modp_numtoa.c	227	25	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	240	37	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	242	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	250	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	252	10	Use only explicitly signed or unsigned char type for numeric values
FLP02-C	sr3rdparty/modp_numtoa.c	267	18	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	268	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	268	30	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	268	44	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	268	58	Use only explicitly signed or unsigned char type for numeric values
INT32-C	sr3rdparty/modp_numtoa.c	277	17	Ensure that operations on signed integers do not result in overflow
INT32-C	sr3rdparty/modp_numtoa.c	290	65	Ensure that operations on signed integers do not result in overflow
INT01-C	sr3rdparty/modp_numtoa.c	291	11	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	sr3rdparty/modp_numtoa.c	306	5	Const-qualify immutable objects: smallest
INT32-C	sr3rdparty/modp_numtoa.c	309	65	Ensure that operations on signed integers do not result in overflow
INT01-C	sr3rdparty/modp_numtoa.c	310	11	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	sr3rdparty/modp_numtoa.c	315	5	Const-qualify immutable objects: tmp
FLP03-C	sr3rdparty/modp_numtoa.c	315	34	Detect and handle floating point errors
FLP34-C	sr3rdparty/modp_numtoa.c	316	21	Ensure that floating point conversions are within range of the new type
FLP02-C	sr3rdparty/modp_numtoa.c	326	21	Consider avoiding floating-point numbers when precise computation is needed
FLP02-C	sr3rdparty/modp_numtoa.c	337	25	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	361	37	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	363	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	371	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	373	10	Use only explicitly signed or unsigned char type for numeric values
FLP02-C	sr3rdparty/modp_numtoa.c	387	18	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	388	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	388	30	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	388	44	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	388	58	Use only explicitly signed or unsigned char type for numeric values
INT32-C	sr3rdparty/modp_numtoa.c	397	17	Ensure that operations on signed integers do not result in overflow
DCL00-C	sr3rdparty/modp_numtoa.c	418	9	Const-qualify immutable objects: i
INT32-C	sr3rdparty/modp_numtoa.c	418	54	Ensure that operations on signed integers do not result in overflow
INT07-C	sr3rdparty/modp_numtoa.c	434	14	Use only explicitly signed or unsigned char type for numeric values
FLP34-C	sr3rdparty/modp_numtoa.c	444	17	Ensure that floating point conversions are within range of the new type
DCL00-C	sr3rdparty/modp_numtoa.c	445	5	Const-qualify immutable objects: tmp
FLP03-C	sr3rdparty/modp_numtoa.c	445	34	Detect and handle floating point errors
FLP34-C	sr3rdparty/modp_numtoa.c	446	21	Ensure that floating point conversions are within range of the new type
FLP02-C	sr3rdparty/modp_numtoa.c	456	21	Consider avoiding floating-point numbers when precise computation is needed
FLP02-C	sr3rdparty/modp_numtoa.c	467	25	Consider avoiding floating-point numbers when precise computation is needed
INT07-C	sr3rdparty/modp_numtoa.c	491	37	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	493	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	501	17	Use only explicitly signed or unsigned char type for numeric values
INT07-C	sr3rdparty/modp_numtoa.c	503	10	Use only explicitly signed or unsigned char type for numeric values
DCL02-C	sr3rdparty/nb_dns.c	289	5	Use visually distinct identifiers: ns_t_ninfo
DCL02-C	sr3rdparty/nb_dns.c	604	2	Use visually distinct identifiers: he
DCL01-C	sr3rdparty/nb_dns.c	78	2	Do not reuse variable names in subscopes: hostent
EXP12-C	sr3rdparty/nb_dns.c	134	2	Do not ignore values returned by functions: memset
MSC12-C	sr3rdparty/nb_dns.c	138	2	Detect and remove code that has no effect
EXP12-C	sr3rdparty/nb_dns.c	178	5	Do not ignore values returned by functions: memset
INT13-C	sr3rdparty/nb_dns.c	180	18	Use bitwise operators only on unsigned operands
EXP12-C	sr3rdparty/nb_dns.c	202	7	Do not ignore values returned by functions: sa_ntop
EXP12-C	sr3rdparty/nb_dns.c	253	4	Do not ignore values returned by functions: sa_ntop
EXP12-C	sr3rdparty/nb_dns.c	280	2	Do not ignore values returned by functions: memset
INT13-C	sr3rdparty/nb_dns.c	286	50	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/nb_dns.c	291	52	Use bitwise operators only on unsigned operands
EXP12-C	sr3rdparty/nb_dns.c	310	3	Do not ignore values returned by functions: sa_ntop
MEM01-C	sr3rdparty/nb_dns.c	330	3	Store a new value in pointers immediately after free()
MEM34-C	sr3rdparty/nb_dns.c	330	3	Only free memory allocated dynamically
MEM01-C	sr3rdparty/nb_dns.c	333	2	Store a new value in pointers immediately after free()
STR11-C	sr3rdparty/nb_dns.c	351	2	Do not specify the dimension of a character array initialized with a string literal
EXP11-C	sr3rdparty/nb_dns.c	360	10	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	sr3rdparty/nb_dns.c	361	10	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	sr3rdparty/nb_dns.c	374	11	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	sr3rdparty/nb_dns.c	375	11	Do not apply operators expecting one type to data of an incompatible type
EXP04-C	sr3rdparty/nb_dns.c	380	7	Do not perform byte-by-byte comparisons between structures
EXP12-C	sr3rdparty/nb_dns.c	412	2	Do not ignore values returned by functions: memset
INT01-C	sr3rdparty/nb_dns.c	413	43	Use rsize_t or size_t for all integer values representing the size of an object
INT07-C	sr3rdparty/nb_dns.c	414	33	Use only explicitly signed or unsigned char type for numeric values
INT01-C	sr3rdparty/nb_dns.c	414	28	Use rsize_t or size_t for all integer values representing the size of an object
EXP11-C	sr3rdparty/nb_dns.c	453	7	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/nb_dns.c	454	11	Use bitwise operators only on unsigned operands
EXP11-C	sr3rdparty/nb_dns.c	529	11	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	sr3rdparty/nb_dns.c	539	11	Do not apply operators expecting one type to data of an incompatible type
INT01-C	sr3rdparty/nb_dns.c	547	9	Use rsize_t or size_t for all integer values representing the size of an object
DCL13-C	sr3rdparty/nb_dns.c	564	52	Declare function parameters that are pointers to values not changed by the function as const: cookie
EXP12-C	sr3rdparty/nb_dns.c	661	2	Do not ignore values returned by functions: memset
MEM34-C	sr3rdparty/nb_dns.c	670	3	Only free memory allocated dynamically
MEM34-C	sr3rdparty/nb_dns.c	675	3	Only free memory allocated dynamically
MEM34-C	sr3rdparty/nb_dns.c	686	3	Only free memory allocated dynamically
EXP12-C	sr3rdparty/nb_dns.c	691	2	Do not ignore values returned by functions: memset
EXP12-C	sr3rdparty/nb_dns.c	692	2	Do not ignore values returned by functions: memset
MEM01-C	sr3rdparty/nb_dns.c	699	2	Store a new value in pointers immediately after free()
MEM34-C	sr3rdparty/nb_dns.c	699	2	Only free memory allocated dynamically
MSC01-C	sr3rdparty/nb_dns.c	725	3	Strive for logical completeness
INT01-C	sr3rdparty/nb_dns.c	729	14	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	sr3rdparty/nb_dns.c	729	14	Ensure that return values are compared against the proper type
STR11-C	sr3rdparty/patricia.c	43	1	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	sr3rdparty/patricia.c	84	5	Const-qualify immutable objects: n
DCL00-C	sr3rdparty/patricia.c	85	5	Const-qualify immutable objects: m
INT13-C	sr3rdparty/patricia.c	87	47	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/patricia.c	87	76	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/patricia.c	102	12	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/patricia.c	110	21	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	143	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	168	5	Detect and remove code that has no effect
EXP11-C	sr3rdparty/patricia.c	169	9	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	sr3rdparty/patricia.c	180	9	Do not cast away a const qualification
MSC12-C	sr3rdparty/patricia.c	183	7	Detect and remove code that has no effect
INT01-C	sr3rdparty/patricia.c	211	47	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	sr3rdparty/patricia.c	216	46	Use rsize_t or size_t for all integer values representing the size of an object
EXP36-C	sr3rdparty/patricia.c	218	22	Do not convert pointers into more strictly aligned pointer types
EXP36-C	sr3rdparty/patricia.c	229	24	Do not convert pointers into more strictly aligned pointer types
EXP11-C	sr3rdparty/patricia.c	247	8	Do not apply operators expecting one type to data of an incompatible type
DCL01-C	sr3rdparty/patricia.c	270	3	Do not reuse variable names in subscopes: sin
INT01-C	sr3rdparty/patricia.c	290	40	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	sr3rdparty/patricia.c	294	41	Use rsize_t or size_t for all integer values representing the size of an object
INT05-C	sr3rdparty/patricia.c	299	14	Use strtol() or a related function to convert a string token to an integer
MSC12-C	sr3rdparty/patricia.c	302	5	Detect and remove code that has no effect
INT07-C	sr3rdparty/patricia.c	304	23	Use only explicitly signed or unsigned char type for numeric values
MSC12-C	sr3rdparty/patricia.c	355	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	358	3	Detect and remove code that has no effect
EXP36-C	sr3rdparty/patricia.c	375	37	Do not convert pointers into more strictly aligned pointer types
MSC12-C	sr3rdparty/patricia.c	382	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	394	3	Detect and remove code that has no effect
MEM01-C	sr3rdparty/patricia.c	412	7	Store a new value in pointers immediately after free()
MEM34-C	sr3rdparty/patricia.c	412	7	Only free memory allocated dynamically
MSC12-C	sr3rdparty/patricia.c	429	3	Detect and remove code that has no effect
MEM01-C	sr3rdparty/patricia.c	436	3	Store a new value in pointers immediately after free()
MSC12-C	sr3rdparty/patricia.c	447	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	459	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	484	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	485	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	486	3	Detect and remove code that has no effect
EXP11-C	sr3rdparty/patricia.c	492	10	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/patricia.c	497	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	530	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	531	3	Detect and remove code that has no effect
DCL05-C	sr3rdparty/patricia.c	543	1	Use typedefs to improve code readability
MSC12-C	sr3rdparty/patricia.c	552	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	553	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	554	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	555	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	556	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	557	3	Detect and remove code that has no effect
EXP11-C	sr3rdparty/patricia.c	565	10	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/patricia.c	578	9	Use bitwise operators only on unsigned operands
EXP36-C	sr3rdparty/patricia.c	620	37	Do not convert pointers into more strictly aligned pointer types
MSC12-C	sr3rdparty/patricia.c	654	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	655	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	656	3	Detect and remove code that has no effect
EXP11-C	sr3rdparty/patricia.c	662	10	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/patricia.c	675	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	747	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	748	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	749	3	Detect and remove code that has no effect
EXP36-C	sr3rdparty/patricia.c	752	18	Do not convert pointers into more strictly aligned pointer types
EXP11-C	sr3rdparty/patricia.c	769	10	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/patricia.c	776	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	803	3	Detect and remove code that has no effect
EXP11-C	sr3rdparty/patricia.c	809	15	Do not apply operators expecting one type to data of an incompatible type
INT13-C	sr3rdparty/patricia.c	814	23	Use bitwise operators only on unsigned operands
INT13-C	sr3rdparty/patricia.c	820	11	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	824	5	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	860	5	Detect and remove code that has no effect
EXP36-C	sr3rdparty/patricia.c	864	20	Do not convert pointers into more strictly aligned pointer types
INT13-C	sr3rdparty/patricia.c	877	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	878	7	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	881	7	Detect and remove code that has no effect
INT13-C	sr3rdparty/patricia.c	893	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	900	7	Detect and remove code that has no effect
EXP36-C	sr3rdparty/patricia.c	913	18	Do not convert pointers into more strictly aligned pointer types
INT13-C	sr3rdparty/patricia.c	922	9	Use bitwise operators only on unsigned operands
MSC12-C	sr3rdparty/patricia.c	932	7	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	952	3	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	953	3	Detect and remove code that has no effect
MEM01-C	sr3rdparty/patricia.c	978	5	Store a new value in pointers immediately after free()
MSC12-C	sr3rdparty/patricia.c	982	7	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	991	7	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	1002	7	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	1007	7	Detect and remove code that has no effect
MEM01-C	sr3rdparty/patricia.c	1011	5	Store a new value in pointers immediately after free()
MEM34-C	sr3rdparty/patricia.c	1011	5	Only free memory allocated dynamically
MSC12-C	sr3rdparty/patricia.c	1023	5	Detect and remove code that has no effect
MEM01-C	sr3rdparty/patricia.c	1030	3	Store a new value in pointers immediately after free()
MSC12-C	sr3rdparty/patricia.c	1034	5	Detect and remove code that has no effect
MSC12-C	sr3rdparty/patricia.c	1042	5	Detect and remove code that has no effect
DCL05-C	sr3rdparty/setsignal.c	30	1	Use typedefs to improve code readability
EXP12-C	sr3rdparty/setsignal.c	36	2	Do not ignore values returned by functions: memset
DCL02-C	auxihighwayhash/highwayhash/sip_hash.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/sip_hash.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/sip_hash.cc	52	3	Use visually distinct identifiers: npos
EXP05-C	auxihighwayhash/highwayhash/sip_hash.cc	26	19	Do not cast away a const qualification
EXP05-C	auxihighwayhash/highwayhash/sip_hash.cc	30	21	Do not cast away a const qualification
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_hash.cc	62	28	Use bitwise operators only on unsigned operands
DCL02-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	52	3	Use visually distinct identifiers: npos
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/sip_tree_hash.cc	62	28	Use bitwise operators only on unsigned operands
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	52	3	Use visually distinct identifiers: npos
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	27	Use bitwise operators only on unsigned operands
INT34-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	27	Do not shift a negative number of bits or more bits than exist in the operand
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	26	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	12	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	84	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	92	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	93	10	Use bitwise operators only on unsigned operands
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not cast away a const qualification
INT14-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	13	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	21	Use bitwise operators only on unsigned operands
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	138	13	Do not apply operators expecting one type to data of an incompatible type
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	41	49	Use visually distinct identifiers: keys
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	41	65	Use visually distinct identifiers: lane
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	41	49	Use visually distinct identifiers: keys
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	41	65	Use visually distinct identifiers: lane
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	42	48	Use bitwise operators only on unsigned operands
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	49	39	Use visually distinct identifiers: packet
DCL02-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	49	39	Use visually distinct identifiers: packet
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	50	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	54	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	28	Use bitwise operators only on unsigned operands
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	175	29	Do not cast away a const qualification
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	180	31	Do not cast away a const qualification
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	69	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	70	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	49	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	53	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	76	30	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	81	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	82	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	90	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	91	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	62	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	42	48	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	84	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	92	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	93	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	50	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	54	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	84	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	92	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	93	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	28	Use bitwise operators only on unsigned operands
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	163	18	Do not cast away a const qualification
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not cast away a const qualification
INT14-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	13	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	21	Use bitwise operators only on unsigned operands
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	138	13	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	42	48	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	71	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	72	17	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	84	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	92	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	93	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	50	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	54	8	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	83	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	84	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	92	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	93	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	22	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	63	28	Use bitwise operators only on unsigned operands
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	163	18	Do not cast away a const qualification
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	118	27	Do not cast away a const qualification
INT14-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	13	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	132	21	Use bitwise operators only on unsigned operands
EXP11-C	auxihighwayhash/highwayhash/scalar_sip_tree_hash.cc	138	13	Do not apply operators expecting one type to data of an incompatible type
DCL02-C	auxihighwayhash/highwayhash/arch_specific.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/arch_specific.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/arch_specific.cc	52	3	Use visually distinct identifiers: npos
INT07-C	auxihighwayhash/highwayhash/arch_specific.cc	74	20	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxihighwayhash/highwayhash/arch_specific.cc	89	3	Const-qualify immutable objects: a
DCL00-C	auxihighwayhash/highwayhash/arch_specific.cc	89	3	Const-qualify immutable objects: b
DCL00-C	auxihighwayhash/highwayhash/arch_specific.cc	89	3	Const-qualify immutable objects: c
DCL00-C	auxihighwayhash/highwayhash/arch_specific.cc	89	3	Const-qualify immutable objects: d
FLP03-C	auxihighwayhash/highwayhash/arch_specific.cc	122	34	Detect and handle floating point errors
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	_Alloc_hider is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/arch_specific.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/arch_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/arch_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL02-C	auxihighwayhash/highwayhash/instruction_sets.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/instruction_sets.cc	2091	3	Use visually distinct identifiers: alignment_value
INT34-C	auxihighwayhash/highwayhash/instruction_sets.cc	29	21	Do not shift a negative number of bits or more bits than exist in the operand
DCL00-C	auxihighwayhash/highwayhash/instruction_sets.cc	38	3	Const-qualify immutable objects: xcr0
DCL00-C	auxihighwayhash/highwayhash/instruction_sets.cc	38	3	Const-qualify immutable objects: xcr0_high
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	116	49	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	116	38	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	116	28	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	72	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	60	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	48	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	37	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	115	26	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	120	16	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/instruction_sets.cc	120	26	Use bitwise operators only on unsigned operands
INT36-C	auxihighwayhash/highwayhash/instruction_sets.cc	355	6	Take care when converting from pointer to integer or integer to pointer
INT36-C	auxihighwayhash/highwayhash/instruction_sets.cc	363	6	Take care when converting from pointer to integer or integer to pointer
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	97	3	Use visually distinct identifiers: multiplier
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	101	3	Use visually distinct identifiers: increment
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	105	3	Use visually distinct identifiers: modulus
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	109	3	Use visually distinct identifiers: default_seed
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	194	3	Use visually distinct identifiers: word_size
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	203	3	Use visually distinct identifiers: state_size
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	212	3	Use visually distinct identifiers: shift_size
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	221	3	Use visually distinct identifiers: mask_bits
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	230	3	Use visually distinct identifiers: xor_mask
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	239	3	Use visually distinct identifiers: tempering_u
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	248	3	Use visually distinct identifiers: tempering_d
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	257	3	Use visually distinct identifiers: tempering_s
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	266	3	Use visually distinct identifiers: tempering_b
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	275	3	Use visually distinct identifiers: tempering_t
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	284	3	Use visually distinct identifiers: tempering_c
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	293	3	Use visually distinct identifiers: tempering_l
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	302	3	Use visually distinct identifiers: initialization_multiplier
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	528	3	Use visually distinct identifiers: short_lag
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	532	3	Use visually distinct identifiers: long_lag
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	676	3	Use visually distinct identifiers: block_size
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	680	3	Use visually distinct identifiers: used_block
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	811	3	Use visually distinct identifiers: table_size
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxihighwayhash/highwayhash/nanobenchmark.cc	119	3	Const-qualify immutable objects: func
MEM01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	136	3	Store a new value in pointers immediately after free()
MEM34-C	auxihighwayhash/highwayhash/nanobenchmark.cc	136	3	Only free memory allocated dynamically
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	181	1	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	182	16	Do not reuse variable names in subscopes:
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	183	27	Do not reuse variable names in subscopes:
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	map is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL00-C	auxihighwayhash/highwayhash/nanobenchmark.cc	393	3	Const-qualify immutable objects: item
DCL00-C	auxihighwayhash/highwayhash/nanobenchmark.cc	402	5	Const-qualify immutable objects: item
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
FLP03-C	auxihighwayhash/highwayhash/nanobenchmark.cc	431	31	Detect and handle floating point errors
DCL02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	444	5	Use visually distinct identifiers: samples
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	444	5	Do not reuse variable names in subscopes: samples
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	basic_string is a non-explicit single-argument constructor.
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	731	7	Do not ignore values returned by functions: __fill_a
FLP02-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1885	25	Consider avoiding floating-point numbers when precise computation is needed
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	move_iterator is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxihighwayhash/highwayhash/nanobenchmark.cc	422	14	Take care when converting from pointer to integer or integer to pointer
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1263	8	Do not ignore values returned by functions: __uninitialized_copy_a
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	move_iterator is a non-explicit single-argument constructor.
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	228	18	Use bitwise operators only on unsigned operands
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: <
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	429	2	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	430	2	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	148	7	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1851	8	Do not ignore values returned by functions: move_backward
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	731	7	Do not ignore values returned by functions: __fill_a
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes: p
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	105	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	106	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	107	4	Do not ignore values returned by functions: swap
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	105	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	106	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	107	4	Do not ignore values returned by functions: swap
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	vector is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	move_iterator is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	575	5	Do not ignore values returned by functions: __uninitialized_default_n_a
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	578	5	Do not ignore values returned by functions: __uninitialized_move_if_noexcept_a
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1263	8	Do not ignore values returned by functions: __uninitialized_copy_a
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	401	39	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	402	38	Use bitwise operators only on unsigned operands
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes: __y
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	407	7	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	406	32	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	407	24	Use bitwise operators only on unsigned operands
INT14-C	auxihighwayhash/highwayhash/nanobenchmark.cc	408	14	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	408	33	Use bitwise operators only on unsigned operands
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes: __y
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	415	7	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	414	32	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	415	24	Use bitwise operators only on unsigned operands
INT14-C	auxihighwayhash/highwayhash/nanobenchmark.cc	416	14	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	416	41	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	421	10	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	420	39	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	421	21	Use bitwise operators only on unsigned operands
INT14-C	auxihighwayhash/highwayhash/nanobenchmark.cc	422	21	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	422	38	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	463	11	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	464	11	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	465	11	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	466	11	Use bitwise operators only on unsigned operands
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	148	7	Do not ignore values returned by functions: swap
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	pair is a non-explicit single-argument constructor.
INT33-C	auxihighwayhash/highwayhash/nanobenchmark.cc	3774	29	Ensure that division and remainder operations do not result in divide-by-zero errors
INT33-C	auxihighwayhash/highwayhash/nanobenchmark.cc	3774	41	Ensure that division and remainder operations do not result in divide-by-zero errors
DCL01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not reuse variable names in subscopes: __d
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	228	18	Use bitwise operators only on unsigned operands
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: <
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1851	8	Do not ignore values returned by functions: move_backward
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	337	8	Use bitwise operators only on unsigned operands
INT14-C	auxihighwayhash/highwayhash/nanobenchmark.cc	337	8	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	337	15	Use bitwise operators only on unsigned operands
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_key_compare is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__aligned_membuf is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
EXP05-C	auxihighwayhash/highwayhash/nanobenchmark.cc	75	16	Do not cast away a const qualification
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Head_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Head_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	tuple < void , true >  is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Tuple_impl is a non-explicit single-argument constructor.
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Rb_tree_const_iterator is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	228	18	Use bitwise operators only on unsigned operands
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: <
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	148	7	Do not ignore values returned by functions: swap
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1851	8	Do not ignore values returned by functions: move_backward
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	move_iterator is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1263	8	Do not ignore values returned by functions: __uninitialized_copy_a
MEM41-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
INT13-C	auxihighwayhash/highwayhash/nanobenchmark.cc	228	18	Use bitwise operators only on unsigned operands
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: <
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	148	7	Do not ignore values returned by functions: swap
INT01-C	auxihighwayhash/highwayhash/nanobenchmark.cc	570	62	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	1851	8	Do not ignore values returned by functions: move_backward
EXP12-C	auxihighwayhash/highwayhash/nanobenchmark.cc	0	0	Do not ignore values returned by functions: !=
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	97	3	Use visually distinct identifiers: multiplier
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	101	3	Use visually distinct identifiers: increment
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	105	3	Use visually distinct identifiers: modulus
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	109	3	Use visually distinct identifiers: default_seed
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	194	3	Use visually distinct identifiers: word_size
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	203	3	Use visually distinct identifiers: state_size
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	212	3	Use visually distinct identifiers: shift_size
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	221	3	Use visually distinct identifiers: mask_bits
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	230	3	Use visually distinct identifiers: xor_mask
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	239	3	Use visually distinct identifiers: tempering_u
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	248	3	Use visually distinct identifiers: tempering_d
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	257	3	Use visually distinct identifiers: tempering_s
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	266	3	Use visually distinct identifiers: tempering_b
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	275	3	Use visually distinct identifiers: tempering_t
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	284	3	Use visually distinct identifiers: tempering_c
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	293	3	Use visually distinct identifiers: tempering_l
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	302	3	Use visually distinct identifiers: initialization_multiplier
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	528	3	Use visually distinct identifiers: short_lag
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	532	3	Use visually distinct identifiers: long_lag
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	676	3	Use visually distinct identifiers: block_size
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	680	3	Use visually distinct identifiers: used_block
DCL02-C	auxihighwayhash/highwayhash/os_specific.cc	811	3	Use visually distinct identifiers: table_size
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	95	3	Do not ignore values returned by functions: clock_gettime
FLP03-C	auxihighwayhash/highwayhash/os_specific.cc	96	31	Detect and handle floating point errors
EXP34-C	auxihighwayhash/highwayhash/os_specific.cc	127	36	Ensure pointer is valid before dereferencing it
DCL00-C	auxihighwayhash/highwayhash/os_specific.cc	152	3	Const-qualify immutable objects: original
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	new_allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	allocator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	vector is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	195	48	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	196	9	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxihighwayhash/highwayhash/os_specific.cc	196	9	Use bitwise operators only on unsigned operands
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	196	9	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxihighwayhash/highwayhash/os_specific.cc	196	9	Use bitwise operators only on unsigned operands
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	196	9	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	223	3	Do not ignore values returned by functions: __builtin_memset
MSC12-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Detect and remove code that has no effect
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Use bitwise operators only on unsigned operands
INT14-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Use bitwise operators only on unsigned operands
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	224	3	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL00-C	auxihighwayhash/highwayhash/os_specific.cc	246	3	Const-qualify immutable objects: generator
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	731	7	Do not ignore values returned by functions: __fill_a
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Use typedefs to improve code readability
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	basic_string is a non-explicit single-argument constructor.
FLP02-C	auxihighwayhash/highwayhash/os_specific.cc	1885	25	Consider avoiding floating-point numbers when precise computation is needed
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_impl is a non-explicit single-argument constructor.
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	105	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	106	4	Do not ignore values returned by functions: swap
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	107	4	Do not ignore values returned by functions: swap
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	_Vector_base is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	vector is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	move_iterator is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/os_specific.cc	368	55	Use rsize_t or size_t for all integer values representing the size of an object
INT36-C	auxihighwayhash/highwayhash/os_specific.cc	422	14	Take care when converting from pointer to integer or integer to pointer
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	1263	8	Do not ignore values returned by functions: __uninitialized_copy_a
MSC12-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Detect and remove code that has no effect
MSC12-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Detect and remove code that has no effect
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	__normal_iterator < pointer >  is a non-explicit single-argument constructor.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes: modulus
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	148	7	Do not ignore values returned by functions: swap
MEM41-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	Public data member
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	pair is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/os_specific.cc	0	0	pair is a non-explicit single-argument constructor.
INT33-C	auxihighwayhash/highwayhash/os_specific.cc	3774	29	Ensure that division and remainder operations do not result in divide-by-zero errors
INT33-C	auxihighwayhash/highwayhash/os_specific.cc	3774	41	Ensure that division and remainder operations do not result in divide-by-zero errors
DCL01-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not reuse variable names in subscopes: __d
EXP12-C	auxihighwayhash/highwayhash/os_specific.cc	0	0	Do not ignore values returned by functions: !=
DCL02-C	auxihighwayhash/highwayhash/hh_portable.cc	130	37	Use visually distinct identifiers: key
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	180	33	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	180	33	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	264	37	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	266	20	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	264	37	Use bitwise operators only on unsigned operands
INT13-C	auxihighwayhash/highwayhash/hh_portable.cc	266	20	Use bitwise operators only on unsigned operands
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	103	53	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	104	54	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	105	54	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxihighwayhash/highwayhash/hh_portable.cc	106	20	Do not cast away a const qualification
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	103	53	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	104	54	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	105	54	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxihighwayhash/highwayhash/hh_portable.cc	106	20	Do not cast away a const qualification
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	103	53	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	104	54	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	105	54	Use rsize_t or size_t for all integer values representing the size of an object
EXP05-C	auxihighwayhash/highwayhash/hh_portable.cc	106	20	Do not cast away a const qualification
OBJ32-CPP	auxihighwayhash/highwayhash/hh_portable.cc	0	0	HighwayHashCatT is a non-explicit single-argument constructor.
OBJ32-CPP	auxihighwayhash/highwayhash/hh_portable.cc	0	0	HighwayHashCatT is a non-explicit single-argument constructor.
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	141	46	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	167	22	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxihighwayhash/highwayhash/hh_portable.cc	170	17	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	srzeek-affinity.cc	22	2	Do not ignore values returned by functions: __builtin_memset
MSC12-C	srzeek-affinity.cc	23	2	Detect and remove code that has no effect
INT01-C	srzeek-affinity.cc	23	2	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	srzeek-affinity.cc	23	2	Use bitwise operators only on unsigned operands
INT14-C	srzeek-affinity.cc	23	2	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	srzeek-affinity.cc	23	2	Use rsize_t or size_t for all integer values representing the size of an object
INT13-C	srzeek-affinity.cc	23	2	Use bitwise operators only on unsigned operands
INT01-C	srzeek-affinity.cc	23	2	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	srzeek-affinity.cc	24	2	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	83	3	Use visually distinct identifiers: value
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	52	3	Use visually distinct identifiers: npos
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	21	22	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
DCL10-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	34	3	Overloaded unary & operator
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	24	5	SwigMovePointer is a non-explicit single-argument constructor.
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	26	56	Const-qualify immutable objects: oldptr
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	32	40	Use visually distinct identifiers: t
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	32	40	Use visually distinct identifiers: t
DCL10-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	34	3	Overloaded unary & operator
EXP05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	405	10	Do not cast away a const qualification
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	467	38	Declare function parameters that are pointers to values not changed by the function as const: from
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	577	47	Declare function parameters that are pointers to values not changed by the function as const: end
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	586	2	Const-qualify immutable objects: i
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	589	4	Const-qualify immutable objects: compare
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	625	3	Const-qualify immutable objects: ret
STR11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	651	3	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	655	5	Const-qualify immutable objects: uu
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	656	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	657	12	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	673	10	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	675	10	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	680	10	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	682	10	Avoid performing bitwise and arithmetic operations on the same data
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	696	9	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	720	3	Const-qualify immutable objects: lname
INT07-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	727	8	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	736	7	Do not ignore values returned by functions: memset
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	810	3	Do not ignore values returned by functions: PyBytes_AsStringAndSize
EXP34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	811	21	Ensure pointer is valid before dereferencing it
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1044	5	Do not ignore values returned by functions: PyErr_Format
MEM01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1045	5	Store a new value in pointers immediately after free()
MEM34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1045	5	Only free memory allocated dynamically
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1152	49	Declare function parameters that are pointers to values not changed by the function as const:
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1277	3	Do not ignore values returned by functions: PyDict_SetItemString
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1298	7	Do not ignore values returned by functions: PyList_SetItem
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1300	5	Do not ignore values returned by functions: PyList_Append
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1338	7	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1357	7	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1361	7	Do not ignore values returned by functions: PyErr_Format
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1472	3	Const-qualify immutable objects: klass
EXP34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1483	50	Ensure pointer is valid before dereferencing it
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1501	2	Do not ignore values returned by functions: PyTuple_SetItem
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1638	3	Const-qualify immutable objects: i
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1639	3	Const-qualify immutable objects: j
EXP17-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1652	58	Associative treatment of equality or relational operators
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1673	3	Const-qualify immutable objects: type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1697	24	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1723	9	Const-qualify immutable objects: meth
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1748	24	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1770	24	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1786	24	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1798	24	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1819	28	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1820	7	Const-qualify immutable objects: obj
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1824	4	Do not ignore values returned by functions: SwigPyObject_acquire
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1826	4	Do not ignore values returned by functions: SwigPyObject_disown
STR11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1874	3	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	1874	3	Const-qualify immutable objects: swigobject_doc
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2022	24	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2082	3	Const-qualify immutable objects: i
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2083	3	Const-qualify immutable objects: j
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2084	3	Const-qualify immutable objects: s
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2092	3	Const-qualify immutable objects: type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2106	26	Do not apply operators expecting one type to data of an incompatible type
STR11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2114	3	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2114	3	Const-qualify immutable objects: swigpacked_doc
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2209	24	Do not apply operators expecting one type to data of an incompatible type
EXP09-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2211	18	malloc called using something other than sizeof()
MEM04-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2211	18	Do not perform zero length allocations
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2229	26	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2336	7	Const-qualify immutable objects: oldown
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2350	3	Const-qualify immutable objects: implicit_conv
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2350	30	Use bitwise operators only on unsigned operands
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2376	18	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2382	15	Detect and remove code that has no effect
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2397	19	Use bitwise operators only on unsigned operands
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2427	25	Use bitwise operators only on unsigned operands
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2490	7	Const-qualify immutable objects: tc
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2507	65	Do not reuse variable names in subscopes: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2527	7	Do not ignore values returned by functions: PyObject_SetAttr
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2534	7	Do not ignore values returned by functions: PyObject_SetAttr
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Do not reuse variable names in subscopes: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2598	2	Do not ignore values returned by functions: PyDict_SetItem
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2582	51	Use visually distinct identifiers: swig_this
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2611	7	Do not ignore values returned by functions: SwigPyObject_append
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2634	15	Use bitwise operators only on unsigned operands
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2635	16	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2639	13	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2641	18	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2647	16	Do not apply operators expecting one type to data of an incompatible type
MSC12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2662	3	Detect and remove code that has no effect
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2665	37	Use bitwise operators only on unsigned operands
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2749	3	Do not reuse variable names in subscopes: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2767	41	Do not reuse variable names in subscopes: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2778	5	Do not ignore values returned by functions: PyModule_AddObject
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2795	3	Const-qualify immutable objects: cache
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2813	5	Do not reuse variable names in subscopes: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2821	7	Do not ignore values returned by functions: PyDict_SetItem
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3012	1	Use visually distinct identifiers: swig_module
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2850	2	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2852	2	Do not ignore values returned by functions: PyErr_Format
MEM01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2854	7	Store a new value in pointers immediately after free()
MEM34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2854	7	Only free memory allocated dynamically
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2869	5	Do not ignore values returned by functions: PyOS_snprintf
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2879	21	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2904	4	Do not ignore values returned by functions: PyErr_Format
MEM01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2906	11	Store a new value in pointers immediately after free()
MEM34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2906	11	Only free memory allocated dynamically
EXP05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2906	11	Do not cast away a const qualification
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2908	4	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2915	5	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	2917	5	Do not ignore values returned by functions: PyErr_Format
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3064	5	SwigPtr_PyObject is a non-explicit single-argument constructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3105	5	SwigVar_PyObject is a non-explicit single-argument constructor.
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes: SwigPtr_PyObject
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3123	3	Const-qualify immutable objects: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3133	5	Const-qualify immutable objects: v
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3174	3	Const-qualify immutable objects: x
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3176	4	Const-qualify immutable objects: fx
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3177	4	Const-qualify immutable objects: cx
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3178	4	Const-qualify immutable objects: rd
FLP03-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3191	17	Detect and handle floating point errors
INT33-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3191	17	Ensure that division and remainder operations do not result in divide-by-zero errors
FLP03-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3192	19	Detect and handle floating point errors
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3212	5	Const-qualify immutable objects: v
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3298	5	Do not ignore values returned by functions: PyBytes_AsStringAndSize
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3319	82	Use rsize_t or size_t for all integer values representing the size of an object
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3403	5	Const-qualify immutable objects: v
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3450	3	Const-qualify immutable objects: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3466	3	Const-qualify immutable objects: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3526	12	Const-qualify immutable objects: data
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3559	45	Declare function parameters that are pointers to values not changed by the function as const:
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3586	11	Use bitwise operators only on unsigned operands
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3597	45	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3619	46	Declare function parameters that are pointers to values not changed by the function as const:
INT13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3646	11	Use bitwise operators only on unsigned operands
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3657	46	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3679	41	Declare function parameters that are pointers to values not changed by the function as const:
EXP05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3685	15	Do not cast away a const qualification
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3692	44	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3713	44	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3720	51	Declare function parameters that are pointers to values not changed by the function as const:
EXP05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3735	15	Do not cast away a const qualification
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3742	51	Declare function parameters that are pointers to values not changed by the function as const:
EXP05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3748	15	Do not cast away a const qualification
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3773	7	Const-qualify immutable objects: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3790	46	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3811	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3848	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3882	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3925	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3980	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3983	7	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3983	7	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3993	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3997	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	3997	9	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4002	11	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4002	11	Do not reuse variable names in subscopes: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4014	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4017	7	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4017	7	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4030	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4034	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4034	9	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4039	11	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4039	11	Do not reuse variable names in subscopes: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4063	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4097	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4152	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4155	7	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4155	7	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4165	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4169	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4169	9	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4174	11	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4174	11	Do not reuse variable names in subscopes: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4193	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4236	54	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4282	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4286	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4286	9	Do not reuse variable names in subscopes: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4297	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4300	7	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4300	7	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4304	11	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4304	11	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4323	56	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4363	56	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4394	56	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4431	5	Const-qualify immutable objects: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4440	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4444	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4444	9	Do not reuse variable names in subscopes: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4455	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4459	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4459	9	Do not reuse variable names in subscopes: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4464	11	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4464	11	Do not reuse variable names in subscopes: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4484	62	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4506	70	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4536	70	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4572	5	Const-qualify immutable objects: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4581	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4585	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4585	9	Do not reuse variable names in subscopes: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4603	60	Declare function parameters that are pointers to values not changed by the function as const:
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4638	5	Do not ignore values returned by functions: PyBytes_AsStringAndSize
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4643	5	Do not ignore values returned by functions: PyBytes_AsStringAndSize
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4678	60	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4724	5	Const-qualify immutable objects: res
DCL02-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5329	5	Use visually distinct identifiers: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4728	9	Const-qualify immutable objects: res
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4728	9	Do not reuse variable names in subscopes: res
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4739	5	Const-qualify immutable objects: res
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4765	51	Declare function parameters that are pointers to values not changed by the function as const:
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4800	5	Do not ignore values returned by functions: PyBytes_AsStringAndSize
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4805	5	Do not ignore values returned by functions: PyBytes_AsStringAndSize
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4840	51	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4877	51	Declare function parameters that are pointers to values not changed by the function as const:
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	4911	46	Declare function parameters that are pointers to values not changed by the function as const:
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5136	11	Const-qualify immutable objects: ocast
DCL13-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5242	21	Declare function parameters that are pointers to values not changed by the function as const:
MEM01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5294	5	Store a new value in pointers immediately after free()
MEM34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5294	5	Only free memory allocated dynamically
MEM34-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5305	7	Only free memory allocated dynamically
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5322	7	Do not ignore values returned by functions: PyErr_Format
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5339	7	Do not ignore values returned by functions: PyErr_Format
STR11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5346	5	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5346	5	Const-qualify immutable objects: varlink__doc__
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5418	34	Do not apply operators expecting one type to data of an incompatible type
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5425	3	Use typedefs to improve code readability
EXP11-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5427	29	Do not apply operators expecting one type to data of an incompatible type
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5430	7	Const-qualify immutable objects: size
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5471	9	Do not ignore values returned by functions: PyDict_SetItemString
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5481	3	Use typedefs to improve code readability
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5505	13	Const-qualify immutable objects: shift
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5507	13	Const-qualify immutable objects: ldoc
DCL00-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5508	13	Const-qualify immutable objects: lptr
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5508	45	Use rsize_t or size_t for all integer values representing the size of an object
EXP12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5516	15	Do not ignore values returned by functions: SWIG_PackVoidPtr
MSC12-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	5618	3	Detect and remove code that has no effect
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Public data member
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
DCL05-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Use typedefs to improve code readability
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	builauxil/zeekctl/auxil/pysubnettree/CMakeFiles/SubnetTree.dir/SubnetTreePYTHON_wrap.cxx	0	0	basic_string is a non-explicit single-argument constructor.
EXP34-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	18	34	Ensure pointer is valid before dereferencing it
DCL00-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	62	9	Const-qualify immutable objects: len
OBJ32-CPP	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	109	1	SubnetTree is a non-explicit single-argument constructor.
DCL00-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	151	5	Const-qualify immutable objects: res
DCL00-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	207	5	Const-qualify immutable objects: res
DCL00-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	282	5	Const-qualify immutable objects: mask
DCL00-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	283	5	Const-qualify immutable objects: res
EXP11-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	323	34	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxizeekctl/auxil/pysubnettree/SubnetTree.cc	370	9	Do not ignore values returned by functions: PySet_Add
STR11-C	auxizeekctl/auxil/pysubnettree/patricia.c	50	1	Do not specify the dimension of a character array initialized with a string literal
DCL00-C	auxizeekctl/auxil/pysubnettree/patricia.c	96	2	Const-qualify immutable objects: n
DCL00-C	auxizeekctl/auxil/pysubnettree/patricia.c	97	2	Const-qualify immutable objects: m
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	99	44	Use bitwise operators only on unsigned operands
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	99	73	Use bitwise operators only on unsigned operands
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	148	11	Use bitwise operators only on unsigned operands
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	156	20	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	186	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	211	2	Detect and remove code that has no effect
EXP11-C	auxizeekctl/auxil/pysubnettree/patricia.c	212	6	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxizeekctl/auxil/pysubnettree/patricia.c	224	6	Do not cast away a const qualification
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	226	6	Detect and remove code that has no effect
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	261	28	Do not convert pointers into more strictly aligned pointer types
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	273	28	Do not convert pointers into more strictly aligned pointer types
DCL01-C	auxizeekctl/auxil/pysubnettree/patricia.c	313	5	Do not reuse variable names in subscopes: sin
INT05-C	auxizeekctl/auxil/pysubnettree/patricia.c	335	12	Use strtol() or a related function to convert a string token to an integer
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	338	3	Detect and remove code that has no effect
INT07-C	auxizeekctl/auxil/pysubnettree/patricia.c	340	21	Use only explicitly signed or unsigned char type for numeric values
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	390	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	393	5	Detect and remove code that has no effect
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	411	39	Do not convert pointers into more strictly aligned pointer types
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	418	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	432	5	Detect and remove code that has no effect
MEM01-C	auxizeekctl/auxil/pysubnettree/patricia.c	451	10	Store a new value in pointers immediately after free()
MEM34-C	auxizeekctl/auxil/pysubnettree/patricia.c	451	10	Only free memory allocated dynamically
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	468	5	Detect and remove code that has no effect
MEM01-C	auxizeekctl/auxil/pysubnettree/patricia.c	477	5	Store a new value in pointers immediately after free()
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	490	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	505	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	506	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	507	5	Detect and remove code that has no effect
EXP11-C	auxizeekctl/auxil/pysubnettree/patricia.c	513	12	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	518	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	554	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	555	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	578	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	579	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	580	5	Detect and remove code that has no effect
EXP11-C	auxizeekctl/auxil/pysubnettree/patricia.c	586	12	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	599	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	677	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	678	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	679	5	Detect and remove code that has no effect
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	682	15	Do not convert pointers into more strictly aligned pointer types
EXP11-C	auxizeekctl/auxil/pysubnettree/patricia.c	700	12	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	707	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	735	5	Detect and remove code that has no effect
EXP11-C	auxizeekctl/auxil/pysubnettree/patricia.c	741	17	Do not apply operators expecting one type to data of an incompatible type
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	746	20	Use bitwise operators only on unsigned operands
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	752	10	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	756	2	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	792	2	Detect and remove code that has no effect
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	796	22	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	810	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	811	6	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	815	6	Detect and remove code that has no effect
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	827	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	835	6	Detect and remove code that has no effect
EXP36-C	auxizeekctl/auxil/pysubnettree/patricia.c	851	22	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxizeekctl/auxil/pysubnettree/patricia.c	861	6	Use bitwise operators only on unsigned operands
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	872	6	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	896	5	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	897	5	Detect and remove code that has no effect
MEM01-C	auxizeekctl/auxil/pysubnettree/patricia.c	922	2	Store a new value in pointers immediately after free()
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	926	6	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	936	6	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	947	6	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	954	6	Detect and remove code that has no effect
MEM01-C	auxizeekctl/auxil/pysubnettree/patricia.c	958	2	Store a new value in pointers immediately after free()
MEM34-C	auxizeekctl/auxil/pysubnettree/patricia.c	958	2	Only free memory allocated dynamically
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	971	2	Detect and remove code that has no effect
MEM01-C	auxizeekctl/auxil/pysubnettree/patricia.c	978	5	Store a new value in pointers immediately after free()
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	982	2	Detect and remove code that has no effect
MSC12-C	auxizeekctl/auxil/pysubnettree/patricia.c	991	9	Detect and remove code that has no effect
DCL02-C	auxizeekctl/auxil/capstats/capstats.cc	83	3	Use visually distinct identifiers: value
DCL02-C	auxizeekctl/auxil/capstats/capstats.cc	2091	3	Use visually distinct identifiers: alignment_value
DCL02-C	auxizeekctl/auxil/capstats/capstats.cc	52	3	Use visually distinct identifiers: npos
DCL02-C	auxizeekctl/auxil/capstats/capstats.cc	793	5	Use visually distinct identifiers: id
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	67	5	Public data member
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	80	9	Do not ignore values returned by functions: memset
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	123	5	Const-qualify immutable objects: ap
EXP05-C	auxizeekctl/auxil/capstats/capstats.cc	144	34	Do not cast away a const qualification
EXP05-C	auxizeekctl/auxil/capstats/capstats.cc	155	27	Do not cast away a const qualification
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	171	2	Const-qualify immutable objects: dl
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	186	9	Const-qualify immutable objects: fd
MSC12-C	auxizeekctl/auxil/capstats/capstats.cc	194	9	Detect and remove code that has no effect
INT13-C	auxizeekctl/auxil/capstats/capstats.cc	194	9	Use bitwise operators only on unsigned operands
INT14-C	auxizeekctl/auxil/capstats/capstats.cc	194	9	Avoid performing bitwise and arithmetic operations on the same data
DCL02-C	auxizeekctl/auxil/capstats/capstats.cc	200	13	Use visually distinct identifiers: timeout
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	200	13	Do not reuse variable names in subscopes: timeout
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	203	13	Do not ignore values returned by functions: select
DCL13-C	auxizeekctl/auxil/capstats/capstats.cc	299	48	Declare function parameters that are pointers to values not changed by the function as const: size
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	364	5	Const-qualify immutable objects: dt
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	366	5	Const-qualify immutable objects: pps
FLP03-C	auxizeekctl/auxil/capstats/capstats.cc	366	28	Detect and handle floating point errors
INT33-C	auxizeekctl/auxil/capstats/capstats.cc	366	28	Ensure that division and remainder operations do not result in divide-by-zero errors
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	367	5	Const-qualify immutable objects: mbps
FLP03-C	auxizeekctl/auxil/capstats/capstats.cc	367	32	Detect and handle floating point errors
FLP03-C	auxizeekctl/auxil/capstats/capstats.cc	367	27	Detect and handle floating point errors
INT33-C	auxizeekctl/auxil/capstats/capstats.cc	367	27	Ensure that division and remainder operations do not result in divide-by-zero errors
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	401	9	Do not ignore values returned by functions: signal
SIG30-C	auxizeekctl/auxil/capstats/capstats.cc	401	25	Call only asynchronous-safe functions within signal handlers: alarmHandler
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	402	9	Do not ignore values returned by functions: alarm
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	428	9	Do not reuse variable names in subscopes: ip
EXP11-C	auxizeekctl/auxil/capstats/capstats.cc	439	14	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxizeekctl/auxil/capstats/capstats.cc	439	14	Do not cast away a const qualification
INT13-C	auxizeekctl/auxil/capstats/capstats.cc	440	14	Use bitwise operators only on unsigned operands
EXP11-C	auxizeekctl/auxil/capstats/capstats.cc	441	18	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxizeekctl/auxil/capstats/capstats.cc	441	18	Do not cast away a const qualification
DCL00-C	auxizeekctl/auxil/capstats/capstats.cc	530	9	Const-qualify immutable objects: c
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	550	24	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	558	26	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	567	23	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	571	21	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	576	20	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeekctl/auxil/capstats/capstats.cc	580	23	Use strtol() or a related function to convert a string token to an integer
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	620	5	Do not ignore values returned by functions: signal
SIG30-C	auxizeekctl/auxil/capstats/capstats.cc	620	20	Call only asynchronous-safe functions within signal handlers: breakHandler
EXP12-C	auxizeekctl/auxil/capstats/capstats.cc	621	5	Do not ignore values returned by functions: signal
SIG30-C	auxizeekctl/auxil/capstats/capstats.cc	621	21	Call only asynchronous-safe functions within signal handlers: breakHandler
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	basic_string is a non-explicit single-argument constructor.
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	If any of copy constructor, copy assignment, and destructor are declared, all three should be.
OBJ00-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	Public data member
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
DCL05-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Use typedefs to improve code readability
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	106	10	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	111	46	Use rsize_t or size_t for all integer values representing the size of an object
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
MEM41-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	A class with a pointer data member should probably define a copy constructor, copy assignment, and destructor.
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	__normal_iterator is a non-explicit single-argument constructor.
DCL01-C	auxizeekctl/auxil/capstats/capstats.cc	0	0	Do not reuse variable names in subscopes:
OBJ32-CPP	auxizeekctl/auxil/capstats/capstats.cc	0	0	basic_string is a non-explicit single-argument constructor.
INT01-C	auxizeekctl/auxil/capstats/capstats.cc	130	27	Use rsize_t or size_t for all integer values representing the size of an object
STR11-C	builauxil/zeekctl/auxil/capstats/version.cc	1	1	Do not specify the dimension of a character array initialized with a string literal
DCL13-C	auxizeek-aux/adtrace/adtrace.c	17	54	Declare function parameters that are pointers to values not changed by the function as const: endp
EXP11-C	auxizeek-aux/adtrace/adtrace.c	20	8	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxizeek-aux/adtrace/adtrace.c	20	8	Do not cast away a const qualification
INT13-C	auxizeek-aux/adtrace/adtrace.c	23	7	Use bitwise operators only on unsigned operands
EXP12-C	auxizeek-aux/adtrace/adtrace.c	31	3	Do not ignore values returned by functions: putchar
EXP12-C	auxizeek-aux/adtrace/adtrace.c	36	3	Do not ignore values returned by functions: putchar
DCL13-C	auxizeek-aux/adtrace/adtrace.c	40	45	Declare function parameters that are pointers to values not changed by the function as const: endp
EXP11-C	auxizeek-aux/adtrace/adtrace.c	43	9	Do not apply operators expecting one type to data of an incompatible type
EXP05-C	auxizeek-aux/adtrace/adtrace.c	43	9	Do not cast away a const qualification
EXP12-C	auxizeek-aux/adtrace/adtrace.c	45	3	Do not ignore values returned by functions: putchar
EXP12-C	auxizeek-aux/adtrace/adtrace.c	46	3	Do not ignore values returned by functions: puts
DCL13-C	auxizeek-aux/adtrace/adtrace.c	49	22	Declare function parameters that are pointers to values not changed by the function as const: user
EXP05-C	auxizeek-aux/adtrace/adtrace.c	52	9	Do not cast away a const qualification
DCL00-C	auxizeek-aux/adtrace/adtrace.c	68	3	Const-qualify immutable objects: pkt
DCL00-C	auxizeek-aux/adtrace/adtrace.c	68	3	Const-qualify immutable objects: endp
DCL00-C	auxizeek-aux/adtrace/adtrace.c	69	3	Const-qualify immutable objects: head
EXP12-C	auxizeek-aux/adtrace/adtrace.c	87	3	Do not ignore values returned by functions: pcap_loop
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	44	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	45	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	46	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	47	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	48	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	49	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	50	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	51	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	52	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	53	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	54	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	55	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	56	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	57	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	58	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	59	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	60	5	Do not ignore values returned by functions: puts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	61	5	Do not ignore values returned by functions: puts
DCL00-C	auxizeek-aux/zeek-cut/zeek-cut.c	83	9	Const-qualify immutable objects: sepval
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	84	13	Use only explicitly signed or unsigned char type for numeric values
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	102	59	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	156	69	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	164	71	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	195	75	Use rsize_t or size_t for all integer values representing the size of an object
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	209	71	Use rsize_t or size_t for all integer values representing the size of an object
MEM01-C	auxizeek-aux/zeek-cut/zeek-cut.c	224	5	Store a new value in pointers immediately after free()
DCL00-C	auxizeek-aux/zeek-cut/zeek-cut.c	243	5	Const-qualify immutable objects: tl
DCL00-C	auxizeek-aux/zeek-cut/zeek-cut.c	289	5	Const-qualify immutable objects: idxrange
DCL00-C	auxizeek-aux/zeek-cut/zeek-cut.c	321	9	Const-qualify immutable objects: idxval
ARR30-C	auxizeek-aux/zeek-cut/zeek-cut.c	327	44	Do not form or use out-of-bounds pointers or array subscripts
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	345	5	Do not ignore values returned by functions: putchar
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	373	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	374	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	375	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	376	15	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	388	27	Use only explicitly signed or unsigned char type for numeric values
DCL00-C	auxizeek-aux/zeek-cut/zeek-cut.c	415	13	Const-qualify immutable objects: ifs
INT07-C	auxizeek-aux/zeek-cut/zeek-cut.c	427	23	Use only explicitly signed or unsigned char type for numeric values
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	471	17	Do not ignore values returned by functions: puts
EXP36-C	auxizeek-aux/zeek-cut/zeek-cut.c	507	35	Do not convert pointers into more strictly aligned pointer types
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	529	36	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxizeek-aux/zeek-cut/zeek-cut.c	529	36	Ensure that return values are compared against the proper type
EXP12-C	auxizeek-aux/zeek-cut/zeek-cut.c	550	17	Do not ignore values returned by functions: usage
INT01-C	auxizeek-aux/zeek-cut/zeek-cut.c	555	49	Use rsize_t or size_t for all integer values representing the size of an object
ERR33-C	auxizeek-aux/zeek-cut/zeek-cut.c	555	49	Ensure that return values are compared against the proper type
STR11-C	auxizeek-aux/rst/rst.c	23	1	Do not specify the dimension of a character array initialized with a string literal
INT14-C	auxizeek-aux/rst/rst.c	108	6	Avoid performing bitwise and arithmetic operations on the same data
INT14-C	auxizeek-aux/rst/rst.c	109	6	Avoid performing bitwise and arithmetic operations on the same data
INT13-C	auxizeek-aux/rst/rst.c	110	11	Use bitwise operators only on unsigned operands
EXP05-C	auxizeek-aux/rst/rst.c	118	23	Do not cast away a const qualification
INT14-C	auxizeek-aux/rst/rst.c	127	7	Avoid performing bitwise and arithmetic operations on the same data
DCL01-C	auxizeek-aux/rst/rst.c	132	35	Do not reuse variable names in subscopes: ip
DCL00-C	auxizeek-aux/rst/rst.c	134	2	Const-qualify immutable objects: tcp_len
INT14-C	auxizeek-aux/rst/rst.c	146	7	Avoid performing bitwise and arithmetic operations on the same data
EXP05-C	auxizeek-aux/rst/rst.c	146	9	Do not cast away a const qualification
INT13-C	auxizeek-aux/rst/rst.c	146	9	Use bitwise operators only on unsigned operands
INT13-C	auxizeek-aux/rst/rst.c	153	43	Use bitwise operators only on unsigned operands
INT13-C	auxizeek-aux/rst/rst.c	153	17	Use bitwise operators only on unsigned operands
INT13-C	auxizeek-aux/rst/rst.c	153	45	Use bitwise operators only on unsigned operands
EXP32-C	auxizeek-aux/rst/rst.c	155	33	Do not access a volatile object through a nonvolatile reference
EXP05-C	auxizeek-aux/rst/rst.c	156	33	Do not cast away a const qualification
EXP34-C	auxizeek-aux/rst/rst.c	169	14	Ensure pointer is valid before dereferencing it
DCL01-C	auxizeek-aux/rst/rst.c	170	2	Do not reuse variable names in subscopes: ip
EXP11-C	auxizeek-aux/rst/rst.c	170	18	Do not apply operators expecting one type to data of an incompatible type
EXP11-C	auxizeek-aux/rst/rst.c	171	23	Do not apply operators expecting one type to data of an incompatible type
EXP12-C	auxizeek-aux/rst/rst.c	185	2	Do not ignore values returned by functions: memset
EXP36-C	auxizeek-aux/rst/rst.c	197	37	Do not convert pointers into more strictly aligned pointer types
INT13-C	auxizeek-aux/rst/rst.c	202	18	Use bitwise operators only on unsigned operands
INT13-C	auxizeek-aux/rst/rst.c	203	18	Use bitwise operators only on unsigned operands
DCL00-C	auxizeek-aux/rst/rst.c	221	3	Const-qualify immutable objects: n
INT07-C	auxizeek-aux/rst/rst.c	230	17	Use only explicitly signed or unsigned char type for numeric values
INT13-C	auxizeek-aux/rst/rst.c	233	16	Use bitwise operators only on unsigned operands
EXP12-C	auxizeek-aux/rst/rst.c	240	3	Do not ignore values returned by functions: usleep
EXP12-C	auxizeek-aux/rst/rst.c	255	2	Do not ignore values returned by functions: memset
EXP12-C	auxizeek-aux/rst/rst.c	256	2	Do not ignore values returned by functions: memset
INT07-C	auxizeek-aux/rst/rst.c	316	12	Use only explicitly signed or unsigned char type for numeric values
DCL01-C	auxizeek-aux/rst/rst.c	333	4	Do not reuse variable names in subscopes: ip
INT07-C	auxizeek-aux/rst/rst.c	336	16	Use only explicitly signed or unsigned char type for numeric values
INT07-C	auxizeek-aux/rst/rst.c	336	10	Use only explicitly signed or unsigned char type for numeric values
INT05-C	auxizeek-aux/rst/rst.c	350	12	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeek-aux/rst/rst.c	354	10	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeek-aux/rst/rst.c	358	17	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeek-aux/rst/rst.c	362	13	Use strtol() or a related function to convert a string token to an integer
EXP12-C	auxizeek-aux/rst/rst.c	377	2	Do not ignore values returned by functions: setuid
INT05-C	auxizeek-aux/rst/rst.c	390	14	Use strtol() or a related function to convert a string token to an integer
INT05-C	auxizeek-aux/rst/rst.c	394	12	Use strtol() or a related function to convert a string token to an integer
